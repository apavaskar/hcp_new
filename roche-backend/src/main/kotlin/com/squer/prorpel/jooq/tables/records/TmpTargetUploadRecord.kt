/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.TmpTargetUpload

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class TmpTargetUploadRecord() : TableRecordImpl<TmpTargetUploadRecord>(TmpTargetUpload.TMP_TARGET_UPLOAD), Record6<Int?, Int?, Int?, String?, String?, Double?> {

    open var month: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var year: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var yearmonth: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var locationId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var brandId: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var targetValue: Double?
        set(value): Unit = set(5, value)
        get(): Double? = get(5) as Double?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Int?, Int?, Int?, String?, String?, Double?> = super.fieldsRow() as Row6<Int?, Int?, Int?, String?, String?, Double?>
    override fun valuesRow(): Row6<Int?, Int?, Int?, String?, String?, Double?> = super.valuesRow() as Row6<Int?, Int?, Int?, String?, String?, Double?>
    override fun field1(): Field<Int?> = TmpTargetUpload.TMP_TARGET_UPLOAD.MONTH
    override fun field2(): Field<Int?> = TmpTargetUpload.TMP_TARGET_UPLOAD.YEAR
    override fun field3(): Field<Int?> = TmpTargetUpload.TMP_TARGET_UPLOAD.YEARMONTH
    override fun field4(): Field<String?> = TmpTargetUpload.TMP_TARGET_UPLOAD.LOCATION_ID
    override fun field5(): Field<String?> = TmpTargetUpload.TMP_TARGET_UPLOAD.BRAND_ID
    override fun field6(): Field<Double?> = TmpTargetUpload.TMP_TARGET_UPLOAD.TARGET_VALUE
    override fun component1(): Int? = month
    override fun component2(): Int? = year
    override fun component3(): Int? = yearmonth
    override fun component4(): String? = locationId
    override fun component5(): String? = brandId
    override fun component6(): Double? = targetValue
    override fun value1(): Int? = month
    override fun value2(): Int? = year
    override fun value3(): Int? = yearmonth
    override fun value4(): String? = locationId
    override fun value5(): String? = brandId
    override fun value6(): Double? = targetValue

    override fun value1(value: Int?): TmpTargetUploadRecord {
        this.month = value
        return this
    }

    override fun value2(value: Int?): TmpTargetUploadRecord {
        this.year = value
        return this
    }

    override fun value3(value: Int?): TmpTargetUploadRecord {
        this.yearmonth = value
        return this
    }

    override fun value4(value: String?): TmpTargetUploadRecord {
        this.locationId = value
        return this
    }

    override fun value5(value: String?): TmpTargetUploadRecord {
        this.brandId = value
        return this
    }

    override fun value6(value: Double?): TmpTargetUploadRecord {
        this.targetValue = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: Int?, value4: String?, value5: String?, value6: Double?): TmpTargetUploadRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised TmpTargetUploadRecord
     */
    constructor(month: Int? = null, year: Int? = null, yearmonth: Int? = null, locationId: String? = null, brandId: String? = null, targetValue: Double? = null): this() {
        this.month = month
        this.year = year
        this.yearmonth = yearmonth
        this.locationId = locationId
        this.brandId = brandId
        this.targetValue = targetValue
    }
}
