/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.SryQuestionMaster

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class SryQuestionMasterRecord() : TableRecordImpl<SryQuestionMasterRecord>(SryQuestionMaster.SRY_QUESTION_MASTER), Record13<OffsetDateTime?, Int?, String?, OffsetDateTime?, Int?, String?, String?, String?, Boolean?, Long?, String?, String?, String?> {

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(0, value)
        get(): OffsetDateTime? = get(0) as OffsetDateTime?

    open var displayOrder: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var ciName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    open var maxScore: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var updatedBy: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var displayName: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var name: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var showOnGraph: Boolean?
        set(value): Unit = set(8, value)
        get(): Boolean? = get(8) as Boolean?

    open var staleId: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var categoryId: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var id: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var createdBy: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<OffsetDateTime?, Int?, String?, OffsetDateTime?, Int?, String?, String?, String?, Boolean?, Long?, String?, String?, String?> = super.fieldsRow() as Row13<OffsetDateTime?, Int?, String?, OffsetDateTime?, Int?, String?, String?, String?, Boolean?, Long?, String?, String?, String?>
    override fun valuesRow(): Row13<OffsetDateTime?, Int?, String?, OffsetDateTime?, Int?, String?, String?, String?, Boolean?, Long?, String?, String?, String?> = super.valuesRow() as Row13<OffsetDateTime?, Int?, String?, OffsetDateTime?, Int?, String?, String?, String?, Boolean?, Long?, String?, String?, String?>
    override fun field1(): Field<OffsetDateTime?> = SryQuestionMaster.SRY_QUESTION_MASTER.UPDATED_ON
    override fun field2(): Field<Int?> = SryQuestionMaster.SRY_QUESTION_MASTER.DISPLAY_ORDER
    override fun field3(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.CI_NAME
    override fun field4(): Field<OffsetDateTime?> = SryQuestionMaster.SRY_QUESTION_MASTER.CREATED_ON
    override fun field5(): Field<Int?> = SryQuestionMaster.SRY_QUESTION_MASTER.MAX_SCORE
    override fun field6(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.UPDATED_BY
    override fun field7(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.DISPLAY_NAME
    override fun field8(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.NAME
    override fun field9(): Field<Boolean?> = SryQuestionMaster.SRY_QUESTION_MASTER.SHOW_ON_GRAPH
    override fun field10(): Field<Long?> = SryQuestionMaster.SRY_QUESTION_MASTER.STALE_ID
    override fun field11(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.CATEGORY_ID
    override fun field12(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.ID
    override fun field13(): Field<String?> = SryQuestionMaster.SRY_QUESTION_MASTER.CREATED_BY
    override fun component1(): OffsetDateTime? = updatedOn
    override fun component2(): Int? = displayOrder
    override fun component3(): String? = ciName
    override fun component4(): OffsetDateTime? = createdOn
    override fun component5(): Int? = maxScore
    override fun component6(): String? = updatedBy
    override fun component7(): String? = displayName
    override fun component8(): String? = name
    override fun component9(): Boolean? = showOnGraph
    override fun component10(): Long? = staleId
    override fun component11(): String? = categoryId
    override fun component12(): String? = id
    override fun component13(): String? = createdBy
    override fun value1(): OffsetDateTime? = updatedOn
    override fun value2(): Int? = displayOrder
    override fun value3(): String? = ciName
    override fun value4(): OffsetDateTime? = createdOn
    override fun value5(): Int? = maxScore
    override fun value6(): String? = updatedBy
    override fun value7(): String? = displayName
    override fun value8(): String? = name
    override fun value9(): Boolean? = showOnGraph
    override fun value10(): Long? = staleId
    override fun value11(): String? = categoryId
    override fun value12(): String? = id
    override fun value13(): String? = createdBy

    override fun value1(value: OffsetDateTime?): SryQuestionMasterRecord {
        this.updatedOn = value
        return this
    }

    override fun value2(value: Int?): SryQuestionMasterRecord {
        this.displayOrder = value
        return this
    }

    override fun value3(value: String?): SryQuestionMasterRecord {
        this.ciName = value
        return this
    }

    override fun value4(value: OffsetDateTime?): SryQuestionMasterRecord {
        this.createdOn = value
        return this
    }

    override fun value5(value: Int?): SryQuestionMasterRecord {
        this.maxScore = value
        return this
    }

    override fun value6(value: String?): SryQuestionMasterRecord {
        this.updatedBy = value
        return this
    }

    override fun value7(value: String?): SryQuestionMasterRecord {
        this.displayName = value
        return this
    }

    override fun value8(value: String?): SryQuestionMasterRecord {
        this.name = value
        return this
    }

    override fun value9(value: Boolean?): SryQuestionMasterRecord {
        this.showOnGraph = value
        return this
    }

    override fun value10(value: Long?): SryQuestionMasterRecord {
        this.staleId = value
        return this
    }

    override fun value11(value: String?): SryQuestionMasterRecord {
        this.categoryId = value
        return this
    }

    override fun value12(value: String?): SryQuestionMasterRecord {
        this.id = value
        return this
    }

    override fun value13(value: String?): SryQuestionMasterRecord {
        this.createdBy = value
        return this
    }

    override fun values(value1: OffsetDateTime?, value2: Int?, value3: String?, value4: OffsetDateTime?, value5: Int?, value6: String?, value7: String?, value8: String?, value9: Boolean?, value10: Long?, value11: String?, value12: String?, value13: String?): SryQuestionMasterRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised SryQuestionMasterRecord
     */
    constructor(updatedOn: OffsetDateTime? = null, displayOrder: Int? = null, ciName: String? = null, createdOn: OffsetDateTime? = null, maxScore: Int? = null, updatedBy: String? = null, displayName: String? = null, name: String? = null, showOnGraph: Boolean? = null, staleId: Long? = null, categoryId: String? = null, id: String? = null, createdBy: String? = null): this() {
        this.updatedOn = updatedOn
        this.displayOrder = displayOrder
        this.ciName = ciName
        this.createdOn = createdOn
        this.maxScore = maxScore
        this.updatedBy = updatedBy
        this.displayName = displayName
        this.name = name
        this.showOnGraph = showOnGraph
        this.staleId = staleId
        this.categoryId = categoryId
        this.id = id
        this.createdBy = createdBy
    }
}
