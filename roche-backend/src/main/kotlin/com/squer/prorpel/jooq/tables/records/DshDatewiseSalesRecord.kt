/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshDatewiseSales

import java.time.LocalDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshDatewiseSalesRecord() : TableRecordImpl<DshDatewiseSalesRecord>(DshDatewiseSales.DSH_DATEWISE_SALES), Record6<String?, String?, String?, LocalDateTime?, Int?, Double?> {

    open var divisionId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var locationId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var brandId: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var invoiceDate: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var quantity: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var amount: Double?
        set(value): Unit = set(5, value)
        get(): Double? = get(5) as Double?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<String?, String?, String?, LocalDateTime?, Int?, Double?> = super.fieldsRow() as Row6<String?, String?, String?, LocalDateTime?, Int?, Double?>
    override fun valuesRow(): Row6<String?, String?, String?, LocalDateTime?, Int?, Double?> = super.valuesRow() as Row6<String?, String?, String?, LocalDateTime?, Int?, Double?>
    override fun field1(): Field<String?> = DshDatewiseSales.DSH_DATEWISE_SALES.DIVISION_ID
    override fun field2(): Field<String?> = DshDatewiseSales.DSH_DATEWISE_SALES.LOCATION_ID
    override fun field3(): Field<String?> = DshDatewiseSales.DSH_DATEWISE_SALES.BRAND_ID
    override fun field4(): Field<LocalDateTime?> = DshDatewiseSales.DSH_DATEWISE_SALES.INVOICE_DATE
    override fun field5(): Field<Int?> = DshDatewiseSales.DSH_DATEWISE_SALES.QUANTITY
    override fun field6(): Field<Double?> = DshDatewiseSales.DSH_DATEWISE_SALES.AMOUNT
    override fun component1(): String? = divisionId
    override fun component2(): String? = locationId
    override fun component3(): String? = brandId
    override fun component4(): LocalDateTime? = invoiceDate
    override fun component5(): Int? = quantity
    override fun component6(): Double? = amount
    override fun value1(): String? = divisionId
    override fun value2(): String? = locationId
    override fun value3(): String? = brandId
    override fun value4(): LocalDateTime? = invoiceDate
    override fun value5(): Int? = quantity
    override fun value6(): Double? = amount

    override fun value1(value: String?): DshDatewiseSalesRecord {
        this.divisionId = value
        return this
    }

    override fun value2(value: String?): DshDatewiseSalesRecord {
        this.locationId = value
        return this
    }

    override fun value3(value: String?): DshDatewiseSalesRecord {
        this.brandId = value
        return this
    }

    override fun value4(value: LocalDateTime?): DshDatewiseSalesRecord {
        this.invoiceDate = value
        return this
    }

    override fun value5(value: Int?): DshDatewiseSalesRecord {
        this.quantity = value
        return this
    }

    override fun value6(value: Double?): DshDatewiseSalesRecord {
        this.amount = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: LocalDateTime?, value5: Int?, value6: Double?): DshDatewiseSalesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised DshDatewiseSalesRecord
     */
    constructor(divisionId: String? = null, locationId: String? = null, brandId: String? = null, invoiceDate: LocalDateTime? = null, quantity: Int? = null, amount: Double? = null): this() {
        this.divisionId = divisionId
        this.locationId = locationId
        this.brandId = brandId
        this.invoiceDate = invoiceDate
        this.quantity = quantity
        this.amount = amount
    }
}
