{"version":3,"file":"static/js/414.db45576f.chunk.js","mappings":"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","sources":["redux/selectors/filterSelectors.js","components/filters/HierarchyFilter.js","redux/actions/filter/filterActions.js","components/report/AttendanceReportComponent.js","redux/selectors/effortReportSelectors.js"],"sourcesContent":["import { createSelector } from 'reselect'\n\nconst filter = (state) => state.filter\nconst hierarchy = (state) => state.filter.hierarchy\n\nexport const selectHierarchy = createSelector(hierarchy,\n    (hierarchySelect) => hierarchySelect)\n","import PropTypes from 'prop-types';\nimport {selectAuthInfo, selectProfileInfo} from '../../redux/selectors/authSelectors';\nimport {connect} from 'react-redux';\nimport { Select, Spin} from 'antd';\nimport {employeeHierarchyStartAction} from '../../redux/actions/filter/filterActions';\nimport React, {useEffect, useState} from 'react';\nimport {selectHierarchy} from \"../../redux/selectors/filterSelectors\";\nimport _ from 'lodash'\nconst { Option } = Select;\nconst HierarchyFilter = ({authInfo,\n                          profileInfo,\n                          handleLoadSelect,\n                          hierarchy,\n                          onSelect}) => {\n\n    const [selectHierarchy, setSelectHierarchy] = useState([])\n    const [selectedValue, setSelectedValue] = useState()\n    useEffect(()=> {\n        handleLoadSelect({\n            locationId: profileInfo.location.id,\n            certificate: authInfo.token\n        })\n    },[])\n\n    useEffect(()=> {\n        setSelectHierarchy(hierarchy)\n    },[hierarchy])\n    const handleSelectEmployee = (value) => {\n        setSelectedValue(value)\n        onSelect(value)\n    }\n\n    const handleSearch  = (value) => {\n        const selected = hierarchy.filter(h => {\n            return h.location.ciName.startsWith(value.toLowerCase())})\n        setSelectHierarchy(selected)\n    }\n    return (\n        <Spin tip={'Loading Filters'} spinning={_.isEmpty(hierarchy)} >\n            <Select\n                showSearch\n                onSearch={handleSearch}\n                filterOption={false}\n                defaultValue={`${selectedValue ? selectedValue.value : ''}`}\n                style={{\n                    width: '100%',\n                }}\n                onChange={handleSelectEmployee}\n                allowClear>\n                {selectHierarchy.map(e =>\n                    <Option value={e.location.id} key={e.location.id}>\n                        {e.location.name}</Option>\n                )}\n            </Select>\n        </Spin>\n    )\n}\n\nHierarchyFilter.propTypes = {\n    authInfo: PropTypes.any,\n    profileInfo: PropTypes.any,\n    hierarchy: PropTypes.any,\n    handleLoadSelect: PropTypes.func,\n    onSelect: PropTypes.func\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const profileInfo = selectProfileInfo(state)\n    const hierarchy = selectHierarchy(state)\n    return { authInfo, profileInfo, hierarchy }\n}\n\nconst actions = {\n    handleLoadSelect: employeeHierarchyStartAction\n}\n\nexport default connect(mapState, actions)(HierarchyFilter)\n","import {EMPLOYEE_HIERARCHY_FAIL, EMPLOYEE_HIERARCHY_START, EMPLOYEE_HIERARCHY_SUCCESS} from \"./filterActionConstants\";\n\nexport const employeeHierarchyStartAction = (payload) => (dispatch) => {\n  dispatch({\n    type: EMPLOYEE_HIERARCHY_START,\n    payload: payload,\n  })\n}\n\nexport const employeeHierarchySuccessAction = (payload) => (dispatch) => {\n  dispatch({\n    type: EMPLOYEE_HIERARCHY_SUCCESS,\n    payload: payload,\n  })\n}\n\nexport const employeeHierarchyFailAction = (payload) => (dispatch) => {\n  dispatch({\n    type: EMPLOYEE_HIERARCHY_FAIL,\n    payload: payload,\n  })\n}\n\n","import PropTypes from 'prop-types';\nimport {selectAuthInfo, selectProfileInfo} from '../../redux/selectors/authSelectors';\nimport HierarchyFilter from '../filters/HierarchyFilter';\nimport TitleWidget from '../../widgets/TitleWidget';\nimport {Button, Col, DatePicker, Row, Table} from 'antd';\nimport {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {attendanceReportStartAction} from '../../redux/actions/effort-report/effortReportActions';\nimport {toYyyyMm} from '../../utils/DateUtils';\nimport {selectAttendanceReport} from '../../redux/selectors/effortReportSelectors';\nimport {Excel} from 'antd-table-saveas-excel';\n\nconst AttendanceReportComponent = ({handleSubmitReport, authInfo, report}) => {\n    const[form, setForm] = useState({})\n    const [columns, setColumns] = useState([])\n\n    useEffect(()=> {\n        let cols = [\n            {\n                title: 'Name',\n                width: 150,\n                dataIndex: 'employee',\n                key: 'user_name',\n                render: item => item.name,\n                fixed: 'left'\n            },\n            {\n                title: 'Location',\n                width: 150,\n                dataIndex: 'location',\n                key: 'location_name',\n                render: item => item.name,\n                fixed: 'left'\n            },\n            {\n                title: 'Date',\n                dataIndex: 'detailsList',\n                children: [...Array(report.numDays).keys()].map(i => {\n                        return {\n                            title: `${i+1}`,\n                            dataIndex: 'detailsList',\n                            width: 100,\n                            key: 'key-' + i,\n                            render: item => {\n                                switch (item[i].activityType) {\n                                    case 'NC':\n                                        return {\n                                            props: {\n                                                style: {background: 'orange'}\n                                            },\n                                            children: item[i].activityType\n                                        }\n                                    case 'WO':\n                                        return {\n                                            props: {\n                                                style: {background: 'red'}\n                                            },\n                                            children: item[i].activityType\n                                        }\n                                    default:\n\n                                        return {\n                                            props: {\n                                                style: {background: 'green'}\n                                            },\n                                            children: <>\n                                                {item[i].activityType + ': ' + item[i].countActivity}<br/>\n                                                {'# Ord:' +  item[i].countOrders}<br/>\n                                                {'# Inv:' +  item[i].countInvoices}\n                                            </>\n                                        }\n\n                                }\n                            }\n                        }\n                    }\n                )\n            }\n\n        ]\n\n\n        setColumns(cols)\n    },[report])\n\n    const changeForm = (value, field) => {\n        setForm({...form, [field]: value})\n    }\n\n    const submitReport = () => {\n        handleSubmitReport({\n            locationId: form.location,\n            yearMonth: toYyyyMm(form.date),\n            certificate: authInfo.token\n        })\n    }\n\n    const handleClick = () => {\n        const excel = new Excel();\n        excel\n            .addSheet('test')\n            .addColumns(columns)\n            .addDataSource(report.rows, {\n                str2Percent: true\n            })\n            .saveAs('Excel.xlsx');\n    };\n\n    return (\n        <>\n            <TitleWidget title={'Attendance Report'} />\n            <Row gutter={16}>\n                <Col span={4}>\n                    <HierarchyFilter onSelect={(value) => changeForm(value, 'location')}/>\n                </Col>\n                <Col span={3}>\n                    <DatePicker onChange={(date)=> changeForm(date, 'date')} picker='month' />\n                </Col>\n                <Col span={4}>\n                    <Button type={'primary'} onClick={submitReport}>Submit</Button>\n                </Col>\n            </Row>\n\n            <Table\n                style={{marginTop: 20}}\n                dataSource={report.rows}\n                columns={columns}\n                scroll={{\n                    x: 2000,\n                }}\n            />\n        </>\n    )\n}\n\nAttendanceReportComponent.propTypes = {\n    authInfo: PropTypes.any,\n    profileInfo: PropTypes.any,\n    handleSubmitReport: PropTypes.func,\n    report: PropTypes.any\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const profileInfo = selectProfileInfo(state)\n    const report = selectAttendanceReport(state)\n    return { authInfo, profileInfo, report }\n}\n\nconst actions = {\n    handleSubmitReport: attendanceReportStartAction\n}\n\nexport default connect(mapState, actions)(AttendanceReportComponent)\n","import { createSelector } from 'reselect'\n\nconst filter = (state) => state.effortReport\nconst attendanceReport = (state) => state.effortReport.attendanceReport\nconst effortReport = state => state.effortReport.effortReport\n\nexport const selectAttendanceReport = createSelector(attendanceReport,\n    (attendanceReportSelect) => attendanceReportSelect)\n\nexport const selectEffortReport = createSelector(effortReport,\n    (effortReportSelect) => effortReportSelect)\n"],"names":["selectHierarchy","createSelector","state","filter","hierarchy","hierarchySelect","Option","Select","actions","handleLoadSelect","payload","dispatch","type","EMPLOYEE_HIERARCHY_START","connect","authInfo","selectAuthInfo","profileInfo","selectProfileInfo","onSelect","useState","setSelectHierarchy","selectedValue","setSelectedValue","useEffect","locationId","location","id","certificate","token","tip","spinning","_","showSearch","onSearch","value","selected","h","ciName","startsWith","toLowerCase","filterOption","defaultValue","style","width","onChange","allowClear","map","e","name","handleSubmitReport","attendanceReportStartAction","report","selectAttendanceReport","form","setForm","columns","setColumns","cols","title","dataIndex","key","render","item","fixed","children","Array","numDays","keys","i","activityType","props","background","countActivity","countOrders","countInvoices","changeForm","field","gutter","span","date","picker","onClick","yearMonth","toYyyyMm","marginTop","dataSource","rows","scroll","x","effortReport","attendanceReport","attendanceReportSelect","selectEffortReport","effortReportSelect"],"sourceRoot":""}