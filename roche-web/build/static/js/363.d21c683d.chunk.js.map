{"version":3,"file":"static/js/363.d21c683d.chunk.js","mappings":"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","sources":["redux/selectors/filterSelectors.js","components/filters/HierarchyFilter.js","redux/actions/filter/filterActions.js","components/report/EffortReportComponent.js","redux/selectors/effortReportSelectors.js"],"sourcesContent":["import { createSelector } from 'reselect'\n\nconst filter = (state) => state.filter\nconst hierarchy = (state) => state.filter.hierarchy\n\nexport const selectHierarchy = createSelector(hierarchy,\n    (hierarchySelect) => hierarchySelect)\n","import PropTypes from 'prop-types';\nimport {selectAuthInfo, selectProfileInfo} from '../../redux/selectors/authSelectors';\nimport {connect} from 'react-redux';\nimport { Select, Spin} from 'antd';\nimport {employeeHierarchyStartAction} from '../../redux/actions/filter/filterActions';\nimport React, {useEffect, useState} from 'react';\nimport {selectHierarchy} from \"../../redux/selectors/filterSelectors\";\nimport _ from 'lodash'\nconst { Option } = Select;\nconst HierarchyFilter = ({authInfo,\n                          profileInfo,\n                          handleLoadSelect,\n                          hierarchy,\n                          onSelect}) => {\n\n    const [selectHierarchy, setSelectHierarchy] = useState([])\n    const [selectedValue, setSelectedValue] = useState()\n    useEffect(()=> {\n        handleLoadSelect({\n            locationId: profileInfo.location.id,\n            certificate: authInfo.certificate\n        })\n    },[])\n\n    useEffect(()=> {\n        setSelectHierarchy(hierarchy)\n    },[hierarchy])\n    const handleSelectEmployee = (value) => {\n        setSelectedValue(value)\n        onSelect(value)\n    }\n\n    const handleSearch  = (value) => {\n        const selected = hierarchy.filter(h => {\n            return h.location.ciName.startsWith(value.toLowerCase())})\n        setSelectHierarchy(selected)\n    }\n    return (\n        <Spin tip={'Loading Filters'} spinning={_.isEmpty(hierarchy)} >\n            <Select\n                showSearch\n                onSearch={handleSearch}\n                filterOption={false}\n                defaultValue={`${selectedValue ? selectedValue.value : ''}`}\n                style={{\n                    width: '100%',\n                }}\n                onChange={handleSelectEmployee}\n                allowClear>\n                {selectHierarchy.map(e =>\n                    <Option value={e.location.id} key={e.location.id}>\n                        {e.location.name}</Option>\n                )}\n            </Select>\n        </Spin>\n    )\n}\n\nHierarchyFilter.propTypes = {\n    authInfo: PropTypes.any,\n    profileInfo: PropTypes.any,\n    hierarchy: PropTypes.any,\n    handleLoadSelect: PropTypes.func,\n    onSelect: PropTypes.func\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const profileInfo = selectProfileInfo(state)\n    const hierarchy = selectHierarchy(state)\n    return { authInfo, profileInfo, hierarchy }\n}\n\nconst actions = {\n    handleLoadSelect: employeeHierarchyStartAction\n}\n\nexport default connect(mapState, actions)(HierarchyFilter)\n","import {EMPLOYEE_HIERARCHY_FAIL, EMPLOYEE_HIERARCHY_START, EMPLOYEE_HIERARCHY_SUCCESS} from \"./filterActionConstants\";\n\nexport const employeeHierarchyStartAction = (payload) => (dispatch) => {\n  dispatch({\n    type: EMPLOYEE_HIERARCHY_START,\n    payload: payload,\n  })\n}\n\nexport const employeeHierarchySuccessAction = (payload) => (dispatch) => {\n  dispatch({\n    type: EMPLOYEE_HIERARCHY_SUCCESS,\n    payload: payload,\n  })\n}\n\nexport const employeeHierarchyFailAction = (payload) => (dispatch) => {\n  dispatch({\n    type: EMPLOYEE_HIERARCHY_FAIL,\n    payload: payload,\n  })\n}\n\n","import PropTypes from 'prop-types';\nimport {selectAuthInfo, selectProfileInfo} from '../../redux/selectors/authSelectors';\nimport TitleWidget from '../../widgets/TitleWidget';\nimport {connect} from 'react-redux';\nimport {effortReportStartAction} from '../../redux/actions/effort-report/effortReportActions';\nimport {selectEffortReport} from '../../redux/selectors/effortReportSelectors';\nimport {Button, Col, DatePicker, Row, Table} from 'antd';\nimport HierarchyFilter from '../filters/HierarchyFilter';\nimport {useState} from 'react';\nimport {toYyyyMm} from '../../utils/DateUtils';\nimport {Excel} from 'antd-table-saveas-excel';\n\n\nconst EffortReportComponent = ({handleSubmitReport, authInfo, report}) => {\n    const[form, setForm] = useState({})\n    const columns = [\n        {\n            title: 'RTF',\n            width: 25,\n            dataIndex: 'rtfName',\n            key: 'rtfName',\n            fixed: 'left'\n        },\n        {\n            title: 'HQ Name',\n            width: 25,\n            dataIndex: 'hqName',\n            key: 'hqName',\n            fixed: 'left'\n        },\n        {\n            title: '# Field Days',\n            width: 10,\n            dataIndex: 'fwdNum',\n            key: 'fwdNum',\n            align: 'right',\n        },\n        {\n            title: '# Customers',\n            width: 15,\n            dataIndex: 'customerListNum',\n            key: 'customerListNum',\n            align: 'right',\n        },\n        {\n            title: '# Calls',\n            width: 10,\n            dataIndex: 'totalCallsDone',\n            key: 'totalCallsDone',\n            align: 'right',\n\n        },\n        {\n            title: '# Met Once',\n            width: 10,\n            dataIndex: 'totalMetOnce',\n            key: 'totalMetOnce',\n            align: 'right',\n        },\n        {\n            title: '# Met > 1',\n            width: 10,\n            dataIndex: 'totalMetMultiple',\n            key: 'totalMetMultiple',\n            align: 'right',\n        },\n        {\n            title: '# Missed',\n            width: 10,\n            dataIndex: 'totalMissedCalls',\n            key: 'totalMissedCalls',\n            align: 'right',\n        },\n        {\n            title: '# WholeSeller Repeat',\n            width: 20,\n            dataIndex: 'totalWholesellerRepeatCalls',\n            key: 'totalWholesellerRepeatCalls',\n            align: 'right',\n        },\n        {\n            title: '# Retailer Repeat',\n            width: 20,\n            dataIndex: 'totalRetailerRepeatCalls',\n            key: 'totalRetailerRepeatCalls',\n            align: 'right',\n        },\n        {\n            title: 'WholeSeller Order Value',\n            width: 20,\n            dataIndex: 'l2OrderValue',\n            key: 'l2OrderValue',\n            render: item => item.toFixed(2),\n            align: 'right',\n        },\n        {\n            title: 'Retailer Order Value',\n            width: 15,\n            dataIndex: 'l3OrderValue',\n            key: 'l3OrderValue',\n            render: item => item.toFixed(2),\n            align: 'right',\n        },\n        {\n            title: '# Productive Calls',\n            width: 15,\n            dataIndex: 'productiveCalls',\n            key: 'productiveCalls',\n            align: 'right',\n        },\n        {\n            title: '# Customer with Inv',\n            width: 15,\n            dataIndex: 'customersWithInventory',\n            key: 'customersWithInventory',\n            align: 'right',\n        },\n        {\n            title: '# WholeSeller Invoice',\n            width: 20,\n            dataIndex: 'l2InvoiceCount',\n            key: 'l2InvoiceCount',\n            align: 'right',\n        },\n        {\n            title: 'WholeSeller Invoice Value',\n            width: 20,\n            dataIndex: 'l2InvoiceValue',\n            key: 'l2InvoiceValue',\n            render: item => item.toFixed(2),\n            align: 'right',\n        },\n        {\n            title: '# Retailer Invoice',\n            width: 20,\n            dataIndex: 'l3InvoiceCount',\n            key: 'l3InvoiceCount',\n            align: 'right',\n        },\n        {\n            title: 'WholeSeller Retailer Value',\n            width: 20,\n            dataIndex: 'l3InvoiceValue',\n            key: 'l3InvoiceValue',\n            render: item => item.toFixed(2),\n            align: 'right',\n        },\n    ]\n    const changeForm = (value, field) => {\n        setForm({...form, [field]: value})\n    }\n\n    const handleClick = () => {\n        const excel = new Excel();\n        excel\n            .addSheet('test')\n            .addColumns(columns)\n            .addDataSource(report, {\n                str2Percent: true\n            })\n            .saveAs('Excel.xlsx');\n    };\n\n\n    const submitReport = () => {\n        handleSubmitReport({\n            locationId: form.location,\n            yearMonth: toYyyyMm(form.date),\n            certificate: authInfo.certificate\n        })\n    }\n\n    return (\n        <>\n            <TitleWidget title={'Effort Report'} />\n            <Row gutter={16}>\n                <Col span={4}>\n                    <HierarchyFilter onSelect={(value) => changeForm(value, 'location')}/>\n                </Col>\n                <Col span={3}>\n                    <DatePicker onChange={(date)=> changeForm(date, 'date')} picker='month' />\n                </Col>\n                <Col span={4}>\n                    <Button type={'primary'} onClick={submitReport}>Submit</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={2} offset={22}>\n                    <Button type={'primary'} onClick={handleClick}>Export</Button>\n                </Col>\n            </Row>\n            <Table\n                style={{marginTop: 20}}\n                dataSource={report}\n                columns={columns}\n                scroll={{\n                    x: 2000,\n                }}\n            />\n        </>\n    )\n}\n\nEffortReportComponent.propTypes = {\n    authInfo: PropTypes.any,\n    profileInfo: PropTypes.any,\n    handleSubmitReport: PropTypes.func,\n    report: PropTypes.any\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const profileInfo = selectProfileInfo(state)\n    const report = selectEffortReport(state)\n    console.log(report)\n    return { authInfo, profileInfo, report }\n}\n\nconst actions = {\n    handleSubmitReport: effortReportStartAction\n}\n\nexport default connect(mapState, actions)(EffortReportComponent)\n","import { createSelector } from 'reselect'\n\nconst filter = (state) => state.effortReport\nconst attendanceReport = (state) => state.effortReport.attendanceReport\nconst effortReport = state => state.effortReport.effortReport\n\nexport const selectAttendanceReport = createSelector(attendanceReport,\n    (attendanceReportSelect) => attendanceReportSelect)\n\nexport const selectEffortReport = createSelector(effortReport,\n    (effortReportSelect) => effortReportSelect)\n"],"names":["selectHierarchy","createSelector","state","filter","hierarchy","hierarchySelect","Option","Select","actions","handleLoadSelect","payload","dispatch","type","EMPLOYEE_HIERARCHY_START","connect","authInfo","selectAuthInfo","profileInfo","selectProfileInfo","onSelect","useState","setSelectHierarchy","selectedValue","setSelectedValue","useEffect","locationId","location","id","certificate","tip","spinning","_","showSearch","onSearch","value","selected","h","ciName","startsWith","toLowerCase","filterOption","defaultValue","style","width","onChange","allowClear","map","e","name","handleSubmitReport","effortReportStartAction","report","selectEffortReport","console","log","form","setForm","columns","title","dataIndex","key","fixed","align","render","item","toFixed","changeForm","field","gutter","span","date","picker","onClick","yearMonth","toYyyyMm","offset","Excel","addSheet","addColumns","addDataSource","str2Percent","saveAs","marginTop","dataSource","scroll","x","selectAttendanceReport","effortReport","attendanceReport","attendanceReportSelect","effortReportSelect"],"sourceRoot":""}