/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.TmpEffortUpload

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record19
import org.jooq.Row19
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class TmpEffortUploadRecord() : TableRecordImpl<TmpEffortUploadRecord>(TmpEffortUpload.TMP_EFFORT_UPLOAD), Record19<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Long?, Int?, String?, String?> {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var assignedAlias: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var accountOwner: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var accountId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var accountName: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var status: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var date_1: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var dueTime: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var endDate: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var lastModifiedDate: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var countsAgainstTarget: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var employeeId: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var locationId: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var customerId: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var customerClassification: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var jobExecutionId: Long?
        set(value): Unit = set(15, value)
        get(): Long? = get(15) as Long?

    open var yyyymmDate1: Int?
        set(value): Unit = set(16, value)
        get(): Int? = get(16) as Int?

    open var errorMessage: String?
        set(value): Unit = set(17, value)
        get(): String? = get(17) as String?

    open var customerType: String?
        set(value): Unit = set(18, value)
        get(): String? = get(18) as String?

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row19<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Long?, Int?, String?, String?> = super.fieldsRow() as Row19<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Long?, Int?, String?, String?>
    override fun valuesRow(): Row19<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Long?, Int?, String?, String?> = super.valuesRow() as Row19<Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Long?, Int?, String?, String?>
    override fun field1(): Field<Int?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.ID
    override fun field2(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.ASSIGNED_ALIAS
    override fun field3(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.ACCOUNT_OWNER
    override fun field4(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.ACCOUNT_ID
    override fun field5(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.ACCOUNT_NAME
    override fun field6(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.STATUS
    override fun field7(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.DATE_1
    override fun field8(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.DUE_TIME
    override fun field9(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.END_DATE
    override fun field10(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.LAST_MODIFIED_DATE
    override fun field11(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.COUNTS_AGAINST_TARGET
    override fun field12(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.EMPLOYEE_ID
    override fun field13(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.LOCATION_ID
    override fun field14(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.CUSTOMER_ID
    override fun field15(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.CUSTOMER_CLASSIFICATION
    override fun field16(): Field<Long?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.JOB_EXECUTION_ID
    override fun field17(): Field<Int?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.YYYYMM_DATE1
    override fun field18(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.ERROR_MESSAGE
    override fun field19(): Field<String?> = TmpEffortUpload.TMP_EFFORT_UPLOAD.CUSTOMER_TYPE
    override fun component1(): Int? = id
    override fun component2(): String? = assignedAlias
    override fun component3(): String? = accountOwner
    override fun component4(): String? = accountId
    override fun component5(): String? = accountName
    override fun component6(): String? = status
    override fun component7(): String? = date_1
    override fun component8(): String? = dueTime
    override fun component9(): String? = endDate
    override fun component10(): String? = lastModifiedDate
    override fun component11(): String? = countsAgainstTarget
    override fun component12(): String? = employeeId
    override fun component13(): String? = locationId
    override fun component14(): String? = customerId
    override fun component15(): String? = customerClassification
    override fun component16(): Long? = jobExecutionId
    override fun component17(): Int? = yyyymmDate1
    override fun component18(): String? = errorMessage
    override fun component19(): String? = customerType
    override fun value1(): Int? = id
    override fun value2(): String? = assignedAlias
    override fun value3(): String? = accountOwner
    override fun value4(): String? = accountId
    override fun value5(): String? = accountName
    override fun value6(): String? = status
    override fun value7(): String? = date_1
    override fun value8(): String? = dueTime
    override fun value9(): String? = endDate
    override fun value10(): String? = lastModifiedDate
    override fun value11(): String? = countsAgainstTarget
    override fun value12(): String? = employeeId
    override fun value13(): String? = locationId
    override fun value14(): String? = customerId
    override fun value15(): String? = customerClassification
    override fun value16(): Long? = jobExecutionId
    override fun value17(): Int? = yyyymmDate1
    override fun value18(): String? = errorMessage
    override fun value19(): String? = customerType

    override fun value1(value: Int?): TmpEffortUploadRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): TmpEffortUploadRecord {
        this.assignedAlias = value
        return this
    }

    override fun value3(value: String?): TmpEffortUploadRecord {
        this.accountOwner = value
        return this
    }

    override fun value4(value: String?): TmpEffortUploadRecord {
        this.accountId = value
        return this
    }

    override fun value5(value: String?): TmpEffortUploadRecord {
        this.accountName = value
        return this
    }

    override fun value6(value: String?): TmpEffortUploadRecord {
        this.status = value
        return this
    }

    override fun value7(value: String?): TmpEffortUploadRecord {
        this.date_1 = value
        return this
    }

    override fun value8(value: String?): TmpEffortUploadRecord {
        this.dueTime = value
        return this
    }

    override fun value9(value: String?): TmpEffortUploadRecord {
        this.endDate = value
        return this
    }

    override fun value10(value: String?): TmpEffortUploadRecord {
        this.lastModifiedDate = value
        return this
    }

    override fun value11(value: String?): TmpEffortUploadRecord {
        this.countsAgainstTarget = value
        return this
    }

    override fun value12(value: String?): TmpEffortUploadRecord {
        this.employeeId = value
        return this
    }

    override fun value13(value: String?): TmpEffortUploadRecord {
        this.locationId = value
        return this
    }

    override fun value14(value: String?): TmpEffortUploadRecord {
        this.customerId = value
        return this
    }

    override fun value15(value: String?): TmpEffortUploadRecord {
        this.customerClassification = value
        return this
    }

    override fun value16(value: Long?): TmpEffortUploadRecord {
        this.jobExecutionId = value
        return this
    }

    override fun value17(value: Int?): TmpEffortUploadRecord {
        this.yyyymmDate1 = value
        return this
    }

    override fun value18(value: String?): TmpEffortUploadRecord {
        this.errorMessage = value
        return this
    }

    override fun value19(value: String?): TmpEffortUploadRecord {
        this.customerType = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: String?, value12: String?, value13: String?, value14: String?, value15: String?, value16: Long?, value17: Int?, value18: String?, value19: String?): TmpEffortUploadRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        this.value17(value17)
        this.value18(value18)
        this.value19(value19)
        return this
    }

    /**
     * Create a detached, initialised TmpEffortUploadRecord
     */
    constructor(id: Int? = null, assignedAlias: String? = null, accountOwner: String? = null, accountId: String? = null, accountName: String? = null, status: String? = null, date_1: String? = null, dueTime: String? = null, endDate: String? = null, lastModifiedDate: String? = null, countsAgainstTarget: String? = null, employeeId: String? = null, locationId: String? = null, customerId: String? = null, customerClassification: String? = null, jobExecutionId: Long? = null, yyyymmDate1: Int? = null, errorMessage: String? = null, customerType: String? = null): this() {
        this.id = id
        this.assignedAlias = assignedAlias
        this.accountOwner = accountOwner
        this.accountId = accountId
        this.accountName = accountName
        this.status = status
        this.date_1 = date_1
        this.dueTime = dueTime
        this.endDate = endDate
        this.lastModifiedDate = lastModifiedDate
        this.countsAgainstTarget = countsAgainstTarget
        this.employeeId = employeeId
        this.locationId = locationId
        this.customerId = customerId
        this.customerClassification = customerClassification
        this.jobExecutionId = jobExecutionId
        this.yyyymmDate1 = yyyymmDate1
        this.errorMessage = errorMessage
        this.customerType = customerType
    }
}
