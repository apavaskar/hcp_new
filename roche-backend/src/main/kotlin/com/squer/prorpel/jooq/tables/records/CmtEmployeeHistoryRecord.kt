/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.CmtEmployeeHistory

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class CmtEmployeeHistoryRecord() : TableRecordImpl<CmtEmployeeHistoryRecord>(CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY), Record4<String?, String?, OffsetDateTime?, String?> {

    open var employeeId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var locationId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var createdDate: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    open var id: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<String?, String?, OffsetDateTime?, String?> = super.fieldsRow() as Row4<String?, String?, OffsetDateTime?, String?>
    override fun valuesRow(): Row4<String?, String?, OffsetDateTime?, String?> = super.valuesRow() as Row4<String?, String?, OffsetDateTime?, String?>
    override fun field1(): Field<String?> = CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY.EMPLOYEE_ID
    override fun field2(): Field<String?> = CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY.LOCATION_ID
    override fun field3(): Field<OffsetDateTime?> = CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY.CREATED_DATE
    override fun field4(): Field<String?> = CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY.ID
    override fun component1(): String? = employeeId
    override fun component2(): String? = locationId
    override fun component3(): OffsetDateTime? = createdDate
    override fun component4(): String? = id
    override fun value1(): String? = employeeId
    override fun value2(): String? = locationId
    override fun value3(): OffsetDateTime? = createdDate
    override fun value4(): String? = id

    override fun value1(value: String?): CmtEmployeeHistoryRecord {
        this.employeeId = value
        return this
    }

    override fun value2(value: String?): CmtEmployeeHistoryRecord {
        this.locationId = value
        return this
    }

    override fun value3(value: OffsetDateTime?): CmtEmployeeHistoryRecord {
        this.createdDate = value
        return this
    }

    override fun value4(value: String?): CmtEmployeeHistoryRecord {
        this.id = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: OffsetDateTime?, value4: String?): CmtEmployeeHistoryRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised CmtEmployeeHistoryRecord
     */
    constructor(employeeId: String? = null, locationId: String? = null, createdDate: OffsetDateTime? = null, id: String? = null): this() {
        this.employeeId = employeeId
        this.locationId = locationId
        this.createdDate = createdDate
        this.id = id
    }
}
