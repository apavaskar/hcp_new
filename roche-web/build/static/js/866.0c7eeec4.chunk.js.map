{"version":3,"file":"static/js/866.0c7eeec4.chunk.js","mappings":"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","sources":["components/auth/Login.js","components/widgets/formbuilder/SelectField.js","components/widgets/formbuilder/MultiSelectField.js","components/widgets/formbuilder/SquerForm.js","redux/selectors/uiSelectors.js","widgets/SideMenuComponent.js","components/common/CommonUpdateComponent.js","components/common/CommonNewComponent.js","navigations/routes.js","components/header/HeaderComponent.js","layout/DefaultLayout.js","redux/selectors/commonSelectors.js","widgets/TitleWidget.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { loginStartAction } from '../../redux/actions/auth/authActions'\nimport { selectAuthInfo, selectLoggedIn } from '../../redux/selectors/authSelectors'\nimport { Button, Col, Form, Input, Layout, Row, Typography } from 'antd'\nimport './Login.less'\nimport { Navigate } from 'react-router-dom'\n\nconst Login = ({ handleLogin, authInfo, loggedIn }) => {\n  const [form] = Form.useForm()\n  const { Title } = Typography\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 19 },\n  }\n  const tailLayout = {\n    wrapperCol: { offset: 18, span: 1 },\n  }\n  const onFinish = () => {\n    console.log('On finish', form)\n  }\n\n  const handleFormSubmit = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        handleLogin({ data: values })\n      })\n      .catch((errorInfo) => {})\n  }\n  return loggedIn ? (\n    <Navigate push to=\"/home/dashboard\" />\n  ) : (\n    <Layout className={'login-page'}>\n      <Row>\n        <Col span={6} offset={2}>\n          <Form\n            {...layout}\n            form={form}\n            name=\"login-form\"\n            onFinish={onFinish}\n            className={'login-form'}\n            autoComplete=\"off\"\n          >\n            <Title level={3}>Login</Title>\n            <Form.Item\n              label={'Username'}\n              name=\"username\"\n              rules={[{ required: true, message: 'Username is required' }]}\n            >\n              <Input placeholder=\"Username\" />\n            </Form.Item>\n            <Form.Item\n              label={'Password'}\n              name=\"password\"\n              rules={[{ required: true, message: 'Password is required' }]}\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" onClick={handleFormSubmit}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nLogin.propTypes = {\n  authInfo: PropTypes.any,\n  handleLogin: PropTypes.func,\n  navigation: PropTypes.any,\n  loggedIn: PropTypes.bool,\n}\n\nconst mapState = (state) => {\n  const authInfo = selectAuthInfo(state)\n  const loggedIn = selectLoggedIn(state)\n  return { authInfo, loggedIn }\n}\n\nconst actions = {\n  handleLogin: loginStartAction,\n}\n\nexport default connect(mapState, actions)(Login)\n","import React, {useEffect} from \"react\";\nimport {Select} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport {selectAuthInfo} from \"../../../redux/selectors/authSelectors\";\nimport {connect} from \"react-redux\";\nimport {commonSelectStartAction} from \"../../../redux/actions/common/commonActions\";\nimport {selectSelectResult} from \"../../../redux/selectors/commonSelectors\";\n\nconst SelectField = ({onChange, handleInitSelect, init, name, authInfo, selectResult, value}) => {\n    console.log(value)\n    useEffect(() => {\n        handleInitSelect({\n            api: init,\n            token: authInfo.token,\n            name: name\n        })\n    }, [name])\n\n\n    return <Select\n        style={{width: '100%'}}\n        onChange={onChange}\n        value={(value && value.id) ? value.id : value}\n        options={selectResult[name]}\n    />\n}\n\nSelectField.propTypes = {\n    authInfo: PropTypes.any,\n    handleInitSelect: PropTypes.func,\n    onChange: PropTypes.func,\n    init: PropTypes.string,\n    name: PropTypes.string,\n    selectResult: PropTypes.any\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const selectResult = selectSelectResult(state)\n    return {authInfo, selectResult}\n}\n\nconst actions = {\n    handleInitSelect: commonSelectStartAction\n}\n\nexport default connect(mapState, actions)(SelectField)\n","import React, {useEffect} from \"react\";\nimport {Select} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport {selectAuthInfo} from \"../../../redux/selectors/authSelectors\";\nimport {connect} from \"react-redux\";\nimport {commonSelectStartAction} from \"../../../redux/actions/common/commonActions\";\nimport {selectSelectResult} from \"../../../redux/selectors/commonSelectors\";\n\nconst MultiSelectField = ({onChange, handleInitSelect, init, name, authInfo, selectResult, value}) => {\n    console.log(init)\n    useEffect(() => {\n        handleInitSelect({\n            api: init,\n            token: authInfo.token,\n            name: name\n        })\n    }, [name])\n\n\n    return <Select\n        mode={'multiple'}\n        style={{width: '100%'}}\n        onChange={onChange}\n        value={(value && value.id) ? value.id : value}\n        options={selectResult[name]}\n    />\n}\n\nMultiSelectField.propTypes = {\n    authInfo: PropTypes.any,\n    handleInitSelect: PropTypes.func,\n    onChange: PropTypes.func,\n    init: PropTypes.string,\n    name: PropTypes.string,\n    selectResult: PropTypes.any\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const selectResult = selectSelectResult(state)\n    return {authInfo, selectResult}\n}\n\nconst actions = {\n    handleInitSelect: commonSelectStartAction\n}\n\nexport default connect(mapState, actions)(MultiSelectField)\n","import React from 'react';\nimport {Button, Col, Form, Input} from \"antd\";\nimport {template} from \"lodash\";\nimport SelectField from \"./SelectField\";\nimport MultiSelectField from \"./MultiSelectField\";\n\nconst SquerForm = ({meta, actions, initialValues}) => {\n    const [form] = Form.useForm()\n    if (meta === undefined || meta.attributes === undefined) {\n        return <></>\n    }\n    const onFinish = (values) => {\n        actions['submitAction'](values)\n    };\n    return (\n        <Col span={24}>\n            <Form\n                form={form}\n                onFinish={onFinish}\n                labelCol={{span: 6}}\n                layout={meta.inline ? 'inline' : 'horizontal'}\n                initialValues={initialValues}\n            >\n                {meta.attributes.map((element, index) => {\n                    if (element.type.toUpperCase() === 'SUBMIT') {\n\n                    }\n                    const w = element.span / 24 * 100\n                    let validations = []\n                    if (element.validations) {\n                        const validation = element.validations\n                        const message = template(validation.message)({[element.name]: element.props.label})\n                        if (validation.isRequired === true) {\n                            validations.push({required: true, message: message})\n                        }\n                    }\n                    return (\n                        <Form.Item key={index}\n                                   wrapperCol={{\n                                       offset: `${element.offset}`,\n                                   }}\n                                   rules={validations}\n                                   style={{width: `calc(${w}%)`}}\n                                   name={element.name}\n                                   label={element.type === 'SUBMIT' || element.type === 'button' ? null : element.props.label}>\n                            <FormElement type={element.type} element={element} actions={actions}/>\n                        </Form.Item>\n                    )\n                })}\n            </Form>\n        </Col>\n    );\n}\n\nconst FormElement = ({type, element, actions, onChange, value}) => {\n    switch (type.toUpperCase()) {\n        case 'TEXT':\n            return <Input placeholder={element.props.placeholder} onChange={onChange} value={value}/>\n        case 'SUBMIT':\n            return <Button type={'primary'} htmlType=\"submit\">{element.props.label}</Button>\n        case 'BUTTON':\n            console.log(actions, element)\n            return <Button onClick={actions[element.props.action]}>{element.props.label}</Button>\n        case 'SELECT':\n            return <SelectField name={element.name} init={element.onSearch} onChange={onChange} value={value}/>\n        case 'MULTI_SELECT':\n            return <MultiSelectField name={element.name} init={element.onSearch} onChange={onChange} value={value}/>\n        default:\n            return type\n    }\n}\n\n\nexport default SquerForm\n","import { createSelector } from 'reselect'\n\nconst menus = (state) => state.ui.menus\nconst title = (state) => state.ui.pageTitle\n\nexport const selectMenus = createSelector(menus, (menusSelect) => menusSelect)\nexport const selectPageTitle = createSelector(title, (titleSelect) => titleSelect)\n","import PropTypes from 'prop-types'\nimport { selectAuthInfo } from '../redux/selectors/authSelectors'\nimport { connect } from 'react-redux'\nimport {Menu, Spin} from 'antd'\nimport { selectMenus } from '../redux/selectors/uiSelectors'\nimport React, { useState, useEffect } from 'react'\nimport { setPageTitle, uiMenuStartAction } from '../redux/actions/ui/uiActions'\nimport { useNavigate } from 'react-router-dom'\n\nconst SideMenuComponent = ({ menus, authInfo, handleLoadMenus, handleMenuClicked }) => {\n  const navigate = useNavigate()\n  useEffect(() => {\n    handleLoadMenus({\n      id: authInfo.userId,\n      certificate: authInfo.token,\n    })\n  }, [])\n\n  const menuClicked = (e) => {\n    handleMenuClicked({ title: e.item.props.title })\n    navigate(e.item.props.path)\n  }\n\n  return (\n      <Spin tip={'Loading Menus'} spinning={menus.length === 0} >\n    <Menu\n      onClick={menuClicked}\n      theme=\"light\"\n      defaultSelectedKeys={['1']}\n      mode=\"inline\"\n      items={menus}\n    />\n      </Spin>\n  )\n}\n\nSideMenuComponent.propTypes = {\n  authInfo: PropTypes.any,\n  menus: PropTypes.array,\n  handleLoadMenus: PropTypes.func,\n  handleMenuClicked: PropTypes.func,\n}\n\nconst mapState = (state) => {\n  const authInfo = selectAuthInfo(state)\n  const menus = selectMenus(state)\n    console.log(menus);\n  return { authInfo, menus }\n}\n\nconst actions = {\n  handleLoadMenus: uiMenuStartAction,\n  handleMenuClicked: setPageTitle,\n}\n\nexport default connect(mapState, actions)(SideMenuComponent)\n","import React, {useEffect} from 'react'\nimport PropTypes from \"prop-types\";\nimport {selectAuthInfo} from \"../../redux/selectors/authSelectors\";\nimport {connect} from \"react-redux\";\nimport {commonSearchMetaStartAction, commonSearchStartAction, commonUpdateInitStartAction, getFormMetaStartAction} from \"../../redux/actions/common/commonActions\";\nimport TitleWidget from \"../../widgets/TitleWidget\";\nimport {selectFormInitValues, selectFormMeta, selectSearchMeta, selectSearchResults} from \"../../redux/selectors/commonSelectors\";\nimport {Col, Row} from \"antd\";\nimport {useParams} from \"react-router-dom\";\nimport SquerForm from \"../widgets/formbuilder/SquerForm\";\n\nconst CommonUpdateComponent = ({\n                                   authInfo, formMeta, searchMeta,\n                                   handleSearch, handleLoadFormMeta,\n                                   handleLoadSearchMeta, searchResult,\n                                   handleInitForm, initialValues\n                               }) => {\n    const params = useParams()\n    console.log(params)\n\n    useEffect(() => {\n        handleInitForm({\n            code: `edit-${params.code}`,\n            id: params.id,\n            token: authInfo.token\n        })\n    }, [params.id, params.code])\n\n\n    return (\n        <Row gutter={[16, 16]}>\n            <Col span={24}>\n                <TitleWidget title={formMeta.title}/>\n            </Col>\n            <Col span={24}>\n                <SquerForm meta={formMeta} actions={{submitAction: (data) => console.log(data)}} initialValues={initialValues}/>\n            </Col>\n\n        </Row>\n    )\n}\n\nCommonUpdateComponent.propTypes = {\n    authInfo: PropTypes.any,\n    handleSearch: PropTypes.func,\n    navigation: PropTypes.any,\n    searchMeta: PropTypes.any,\n    searchResult: PropTypes.array,\n    handleLoadSearchMeta: PropTypes.func,\n    handleInitForm: PropTypes.func,\n    initialValues: PropTypes.any\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const formMeta = selectFormMeta(state)\n    const searchMeta = selectSearchMeta(state)\n    const searchResult = selectSearchResults(state)\n    const initialValues = selectFormInitValues(state)\n    return {authInfo, formMeta, searchMeta, searchResult, initialValues}\n}\n\nconst actions = {\n    handleSearch: commonSearchStartAction,\n    handleLoadFormMeta: getFormMetaStartAction,\n    handleLoadSearchMeta: commonSearchMetaStartAction,\n    handleInitForm: commonUpdateInitStartAction\n}\n\nexport default connect(mapState, actions)(CommonUpdateComponent)\n","import React, {useEffect} from 'react'\nimport PropTypes from \"prop-types\";\nimport {selectAuthInfo} from \"../../redux/selectors/authSelectors\";\nimport {connect} from \"react-redux\";\nimport {commonSearchMetaStartAction, commonSearchStartAction, commonUpdateInitStartAction, getFormMetaStartAction} from \"../../redux/actions/common/commonActions\";\nimport TitleWidget from \"../../widgets/TitleWidget\";\nimport {selectFormInitValues, selectFormMeta, selectSearchMeta, selectSearchResults} from \"../../redux/selectors/commonSelectors\";\nimport {Col, Row} from \"antd\";\nimport {useParams} from \"react-router-dom\";\nimport SquerForm from \"../widgets/formbuilder/SquerForm\";\n\nconst CommonNewComponent = ({\n                                authInfo, formMeta, searchMeta,\n                                handleSearch, handleLoadFormMeta,\n                                handleLoadSearchMeta, searchResult,\n                                handleInitForm, initialValues\n                            }) => {\n    const params = useParams()\n\n    useEffect(() => {\n        handleLoadFormMeta({\n            code: `add-${params.code}`,\n            token: authInfo.token\n        })\n    }, [params.id, params.code])\n\n\n    return (\n        <Row gutter={[16, 16]}>\n            <Col span={24}>\n                <TitleWidget title={formMeta.title}/>\n            </Col>\n            <Col span={24}>\n                <SquerForm meta={formMeta} actions={{submitAction: (data) => console.log(data)}} initialValues={initialValues}/>\n            </Col>\n\n        </Row>\n    )\n}\n\nCommonNewComponent.propTypes = {\n    authInfo: PropTypes.any,\n    handleSearch: PropTypes.func,\n    navigation: PropTypes.any,\n    searchMeta: PropTypes.any,\n    searchResult: PropTypes.array,\n    handleLoadSearchMeta: PropTypes.func,\n    handleInitForm: PropTypes.func,\n    initialValues: PropTypes.any\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const formMeta = selectFormMeta(state)\n    const searchMeta = selectSearchMeta(state)\n    const searchResult = selectSearchResults(state)\n    const initialValues = selectFormInitValues(state)\n    return {authInfo, formMeta, searchMeta, searchResult, initialValues}\n}\n\nconst actions = {\n    handleSearch: commonSearchStartAction,\n    handleLoadFormMeta: getFormMetaStartAction,\n    handleLoadSearchMeta: commonSearchMetaStartAction,\n    handleInitForm: commonUpdateInitStartAction\n}\n\nexport default connect(mapState, actions)(CommonNewComponent)\n","import React from 'react'\nimport Login from \"../components/auth/Login\";\nimport CommonUpdateComponent from \"../components/common/CommonUpdateComponent\";\nimport CommonNewComponent from \"../components/common/CommonNewComponent\";\n\nconst Dashboard = React.lazy(() => import('../components/dashboard/DashboardComponent'))\nconst EffortReport = React.lazy(()=> import('../components/report/EffortReportComponent'))\nconst AttendanceReport = React.lazy(()=> import('../components/report/AttendanceReportComponent'))\nconst SearchClaimExpenseComponent = React.lazy(()=> import('../components/expense/claim/SearchClaimExpenseComponent'))\nconst PortletWrapper = React.lazy(()=> import('../components/portlet/PortletWrapperComponent'))\nconst CommonSearchComponent = React.lazy(() => import('../components/common/CommonSearchComponent'))\n\nconst routes = [\n    { path: '/home/dashboard', name: 'Dashboard', element: Dashboard },\n    { path: '/home/reports/effort', name: 'Effort Report', element: EffortReport},\n    { path: '/home/reports/attendance', name: 'Attendance Report', element: AttendanceReport},\n    { path: '/home/expense/claim', name: 'Expense Claim', element: SearchClaimExpenseComponent},\n    {path: '/portlet', name: 'Portlet', element: PortletWrapper},\n    {path: '/home/:code/search', name: 'Search Stores', element: CommonSearchComponent},\n    {path: '/admin/:code/edit/:id', name: 'Search Stores', element: CommonUpdateComponent},\n    {path: '/admin/:code/new', name: 'New', element: CommonNewComponent},\n    { path: '/login', name: 'Login', element: Login },\n]\n\nexport default routes\n","import React, { useEffect } from 'react'\nimport {Col, Divider, Row, Skeleton, Typography} from 'antd'\nimport PropTypes from 'prop-types'\nimport { selectAuthInfo, selectProfileInfo } from '../../redux/selectors/authSelectors'\nimport { connect } from 'react-redux'\nimport { loadUserProfileStartAction } from '../../redux/actions/auth/authActions'\nimport { selectPageTitle } from '../../redux/selectors/uiSelectors'\nimport './HeaderComponent.less'\nconst HeaderComponent = ({ authInfo, profileInfo, handleLoadProfileInfo, pageTitle }) => {\n  useEffect(() => {\n    handleLoadProfileInfo({\n      certificate: authInfo.token,\n      id: authInfo.userId,\n    })\n  }, [])\n  const {Title} = Typography\n  return (\n    <Row justify={'space-between'} style={{ height: '100%' }}>\n      <Col span={4} offset={20}>\n        <Skeleton loading={profileInfo === null} size={'small'} paragraph={{ rows: 0 }}>\n          <Title level={5}>{profileInfo === null ? '' : profileInfo.user.name}</Title>\n        </Skeleton>\n      </Col>\n    </Row>\n  )\n}\n\nHeaderComponent.propTypes = {\n  authInfo: PropTypes.any,\n  profileInfo: PropTypes.any,\n  pageTitle: PropTypes.any,\n  handleLoadProfileInfo: PropTypes.func,\n}\n\nconst mapState = (state) => {\n  const authInfo = selectAuthInfo(state)\n  const profileInfo = selectProfileInfo(state)\n  const pageTitle = selectPageTitle(state)\n  return { authInfo, profileInfo, pageTitle }\n}\n\nconst actions = {\n  handleLoadProfileInfo: loadUserProfileStartAction,\n}\n\nexport default connect(mapState, actions)(HeaderComponent)\n","import React, { Suspense } from 'react'\nimport { Divider, Layout, Spin } from 'antd'\nimport './DefaultLayout.less'\nimport { Content, Header } from 'antd/es/layout/layout'\nimport Sider from 'antd/es/layout/Sider'\nimport SideMenuComponent from '../widgets/SideMenuComponent'\nimport PropTypes from 'prop-types'\nimport { selectAuthInfo } from '../redux/selectors/authSelectors'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport routes from '../navigations/routes'\nimport { connect } from 'react-redux'\nimport HeaderComponent from '../components/header/HeaderComponent'\n\nconst DefaultLayout = ({ authInfo }) => {\n  return (\n    <Layout\n      style={{\n        minHeight: '100vh',\n      }}\n    >\n      <Sider width={172}>\n        <div style={{ height: '60px', color: '#fff', padding: '20px' }}>LOGO</div>\n        <SideMenuComponent />\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header>\n          <HeaderComponent />\n        </Header>\n        <Content className={'content-layout'}>\n          <Suspense fallback={<Spin />}>\n            <Routes>\n              {routes.map((route, idx) => {\n                return (\n                  route.element && (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      element={<route.element />}\n                    />\n                  )\n                )\n              })}\n              <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n            </Routes>\n          </Suspense>\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nDefaultLayout.propTypes = {\n  authInfo: PropTypes.any,\n}\n\nconst mapState = (state) => {\n  const authInfo = selectAuthInfo(state)\n  return { authInfo }\n}\n\nconst actions = {}\n\nexport default connect(mapState, actions)(DefaultLayout)\n","import {createSelector} from 'reselect'\n\nconst common = (state) => state.common\nconst formMeta = (state) => state.common.formMeta\nconst searchMeta = (state) => state.common.searchMeta\nconst searchResults = state => state.common.searchResults\nconst selectResult = state => state.common.selectResult\nconst initValues = state => state.common.formInitValues\n\n\nexport const selectFormMeta = createSelector(formMeta, (formMetaSelect) => formMetaSelect)\nexport const selectSearchMeta = createSelector(searchMeta, (searchMetaSelect) => searchMetaSelect)\nexport const selectSearchResults = createSelector(searchResults, (searchResultsSelect) => searchResultsSelect)\nexport const selectSelectResult = createSelector(selectResult, (selectResultSelect) => selectResultSelect)\nexport const selectFormInitValues = createSelector(initValues, (initValuesSelect) => initValuesSelect)\n","import React from 'react'\nimport {Divider, PageHeader, Typography} from 'antd'\nimport PropTypes from 'prop-types'\n\nconst TitleWidget = ({ title, subTitle}) => {\n  const {Title} = Typography\n  return (\n      <>\n        <PageHeader style={{paddingTop: 0, paddingBottom: 0}}\n                    title={title}\n            subTitle={subTitle}\n        />\n        <Divider style={{paddingBottom: 0, marginTop: 0, backgroundColor: '#9B51E0'}}/>\n     </>\n  )\n}\n\nTitleWidget.propTypes = {\n  title: PropTypes.string,\n  subTitle: PropTypes.string\n}\nexport default TitleWidget\n"],"names":["actions","handleLogin","loginStartAction","connect","state","authInfo","selectAuthInfo","loggedIn","selectLoggedIn","Form","form","Title","Typography","push","to","className","span","offset","labelCol","wrapperCol","name","onFinish","console","log","autoComplete","level","label","rules","required","message","placeholder","type","onClick","validateFields","then","values","data","catch","errorInfo","handleInitSelect","commonSelectStartAction","selectResult","selectSelectResult","onChange","init","value","useEffect","api","token","style","width","id","options","mode","FormElement","element","toUpperCase","props","htmlType","action","onSearch","meta","initialValues","undefined","attributes","layout","inline","map","index","w","validations","validation","template","isRequired","selectMenus","createSelector","ui","menus","menusSelect","selectPageTitle","pageTitle","titleSelect","handleLoadMenus","uiMenuStartAction","handleMenuClicked","setPageTitle","navigate","useNavigate","userId","certificate","tip","spinning","length","e","title","item","path","theme","defaultSelectedKeys","items","handleSearch","commonSearchStartAction","handleLoadFormMeta","getFormMetaStartAction","handleLoadSearchMeta","commonSearchMetaStartAction","handleInitForm","commonUpdateInitStartAction","formMeta","selectFormMeta","searchMeta","selectSearchMeta","searchResult","selectSearchResults","selectFormInitValues","params","useParams","code","gutter","TitleWidget","SquerForm","submitAction","React","CommonUpdateComponent","CommonNewComponent","Login","handleLoadProfileInfo","loadUserProfileStartAction","profileInfo","selectProfileInfo","justify","height","loading","size","paragraph","rows","user","minHeight","Sider","color","padding","Suspense","fallback","routes","route","idx","exact","replace","common","formMetaSelect","searchMetaSelect","searchResults","searchResultsSelect","selectResultSelect","formInitValues","initValuesSelect","subTitle","paddingTop","paddingBottom","marginTop","backgroundColor"],"sourceRoot":""}