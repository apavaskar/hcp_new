/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.SlsGmTarget

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class SlsGmTargetRecord() : TableRecordImpl<SlsGmTargetRecord>(SlsGmTarget.SLS_GM_TARGET), Record5<String?, Int?, Int?, Double?, Double?> {

    open var locationId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var month: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var year: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var toTarget: Double?
        set(value): Unit = set(3, value)
        get(): Double? = get(3) as Double?

    open var moTarget: Double?
        set(value): Unit = set(4, value)
        get(): Double? = get(4) as Double?

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<String?, Int?, Int?, Double?, Double?> = super.fieldsRow() as Row5<String?, Int?, Int?, Double?, Double?>
    override fun valuesRow(): Row5<String?, Int?, Int?, Double?, Double?> = super.valuesRow() as Row5<String?, Int?, Int?, Double?, Double?>
    override fun field1(): Field<String?> = SlsGmTarget.SLS_GM_TARGET.LOCATION_ID
    override fun field2(): Field<Int?> = SlsGmTarget.SLS_GM_TARGET.MONTH
    override fun field3(): Field<Int?> = SlsGmTarget.SLS_GM_TARGET.YEAR
    override fun field4(): Field<Double?> = SlsGmTarget.SLS_GM_TARGET.TO_TARGET
    override fun field5(): Field<Double?> = SlsGmTarget.SLS_GM_TARGET.MO_TARGET
    override fun component1(): String? = locationId
    override fun component2(): Int? = month
    override fun component3(): Int? = year
    override fun component4(): Double? = toTarget
    override fun component5(): Double? = moTarget
    override fun value1(): String? = locationId
    override fun value2(): Int? = month
    override fun value3(): Int? = year
    override fun value4(): Double? = toTarget
    override fun value5(): Double? = moTarget

    override fun value1(value: String?): SlsGmTargetRecord {
        this.locationId = value
        return this
    }

    override fun value2(value: Int?): SlsGmTargetRecord {
        this.month = value
        return this
    }

    override fun value3(value: Int?): SlsGmTargetRecord {
        this.year = value
        return this
    }

    override fun value4(value: Double?): SlsGmTargetRecord {
        this.toTarget = value
        return this
    }

    override fun value5(value: Double?): SlsGmTargetRecord {
        this.moTarget = value
        return this
    }

    override fun values(value1: String?, value2: Int?, value3: Int?, value4: Double?, value5: Double?): SlsGmTargetRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised SlsGmTargetRecord
     */
    constructor(locationId: String? = null, month: Int? = null, year: Int? = null, toTarget: Double? = null, moTarget: Double? = null): this() {
        this.locationId = locationId
        this.month = month
        this.year = year
        this.toTarget = toTarget
        this.moTarget = moTarget
    }
}
