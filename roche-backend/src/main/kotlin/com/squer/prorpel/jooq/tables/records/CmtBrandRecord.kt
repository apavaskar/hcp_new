/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.CmtBrand

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record15
import org.jooq.Row15
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class CmtBrandRecord() : UpdatableRecordImpl<CmtBrandRecord>(CmtBrand.CMT_BRAND), Record15<String?, OffsetDateTime?, Long?, String?, OffsetDateTime?, String?, String?, String?, String?, String?, String?, String?, Boolean?, Double?, Boolean?> {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(1, value)
        get(): OffsetDateTime? = get(1) as OffsetDateTime?

    open var staleId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var ciName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(4, value)
        get(): OffsetDateTime? = get(4) as OffsetDateTime?

    open var divisionId: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var code: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var id: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var statusId: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var updatedBy: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var externalId: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var createdBy: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsCompetition")
    open var isCompetition: Boolean?
        set(value): Unit = set(12, value)
        get(): Boolean? = get(12) as Boolean?

    open var price: Double?
        set(value): Unit = set(13, value)
        get(): Double? = get(13) as Double?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsDisplay")
    open var isDisplay: Boolean?
        set(value): Unit = set(14, value)
        get(): Boolean? = get(14) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row15<String?, OffsetDateTime?, Long?, String?, OffsetDateTime?, String?, String?, String?, String?, String?, String?, String?, Boolean?, Double?, Boolean?> = super.fieldsRow() as Row15<String?, OffsetDateTime?, Long?, String?, OffsetDateTime?, String?, String?, String?, String?, String?, String?, String?, Boolean?, Double?, Boolean?>
    override fun valuesRow(): Row15<String?, OffsetDateTime?, Long?, String?, OffsetDateTime?, String?, String?, String?, String?, String?, String?, String?, Boolean?, Double?, Boolean?> = super.valuesRow() as Row15<String?, OffsetDateTime?, Long?, String?, OffsetDateTime?, String?, String?, String?, String?, String?, String?, String?, Boolean?, Double?, Boolean?>
    override fun field1(): Field<String?> = CmtBrand.CMT_BRAND.NAME
    override fun field2(): Field<OffsetDateTime?> = CmtBrand.CMT_BRAND.UPDATED_ON
    override fun field3(): Field<Long?> = CmtBrand.CMT_BRAND.STALE_ID
    override fun field4(): Field<String?> = CmtBrand.CMT_BRAND.CI_NAME
    override fun field5(): Field<OffsetDateTime?> = CmtBrand.CMT_BRAND.CREATED_ON
    override fun field6(): Field<String?> = CmtBrand.CMT_BRAND.DIVISION_ID
    override fun field7(): Field<String?> = CmtBrand.CMT_BRAND.CODE
    override fun field8(): Field<String?> = CmtBrand.CMT_BRAND.ID
    override fun field9(): Field<String?> = CmtBrand.CMT_BRAND.STATUS_ID
    override fun field10(): Field<String?> = CmtBrand.CMT_BRAND.UPDATED_BY
    override fun field11(): Field<String?> = CmtBrand.CMT_BRAND.EXTERNAL_ID
    override fun field12(): Field<String?> = CmtBrand.CMT_BRAND.CREATED_BY
    override fun field13(): Field<Boolean?> = CmtBrand.CMT_BRAND.IS_COMPETITION
    override fun field14(): Field<Double?> = CmtBrand.CMT_BRAND.PRICE
    override fun field15(): Field<Boolean?> = CmtBrand.CMT_BRAND.IS_DISPLAY
    override fun component1(): String? = name
    override fun component2(): OffsetDateTime? = updatedOn
    override fun component3(): Long? = staleId
    override fun component4(): String? = ciName
    override fun component5(): OffsetDateTime? = createdOn
    override fun component6(): String? = divisionId
    override fun component7(): String? = code
    override fun component8(): String? = id
    override fun component9(): String? = statusId
    override fun component10(): String? = updatedBy
    override fun component11(): String? = externalId
    override fun component12(): String? = createdBy
    override fun component13(): Boolean? = isCompetition
    override fun component14(): Double? = price
    override fun component15(): Boolean? = isDisplay
    override fun value1(): String? = name
    override fun value2(): OffsetDateTime? = updatedOn
    override fun value3(): Long? = staleId
    override fun value4(): String? = ciName
    override fun value5(): OffsetDateTime? = createdOn
    override fun value6(): String? = divisionId
    override fun value7(): String? = code
    override fun value8(): String? = id
    override fun value9(): String? = statusId
    override fun value10(): String? = updatedBy
    override fun value11(): String? = externalId
    override fun value12(): String? = createdBy
    override fun value13(): Boolean? = isCompetition
    override fun value14(): Double? = price
    override fun value15(): Boolean? = isDisplay

    override fun value1(value: String?): CmtBrandRecord {
        this.name = value
        return this
    }

    override fun value2(value: OffsetDateTime?): CmtBrandRecord {
        this.updatedOn = value
        return this
    }

    override fun value3(value: Long?): CmtBrandRecord {
        this.staleId = value
        return this
    }

    override fun value4(value: String?): CmtBrandRecord {
        this.ciName = value
        return this
    }

    override fun value5(value: OffsetDateTime?): CmtBrandRecord {
        this.createdOn = value
        return this
    }

    override fun value6(value: String?): CmtBrandRecord {
        this.divisionId = value
        return this
    }

    override fun value7(value: String?): CmtBrandRecord {
        this.code = value
        return this
    }

    override fun value8(value: String?): CmtBrandRecord {
        this.id = value
        return this
    }

    override fun value9(value: String?): CmtBrandRecord {
        this.statusId = value
        return this
    }

    override fun value10(value: String?): CmtBrandRecord {
        this.updatedBy = value
        return this
    }

    override fun value11(value: String?): CmtBrandRecord {
        this.externalId = value
        return this
    }

    override fun value12(value: String?): CmtBrandRecord {
        this.createdBy = value
        return this
    }

    override fun value13(value: Boolean?): CmtBrandRecord {
        this.isCompetition = value
        return this
    }

    override fun value14(value: Double?): CmtBrandRecord {
        this.price = value
        return this
    }

    override fun value15(value: Boolean?): CmtBrandRecord {
        this.isDisplay = value
        return this
    }

    override fun values(value1: String?, value2: OffsetDateTime?, value3: Long?, value4: String?, value5: OffsetDateTime?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: String?, value12: String?, value13: Boolean?, value14: Double?, value15: Boolean?): CmtBrandRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        return this
    }

    /**
     * Create a detached, initialised CmtBrandRecord
     */
    constructor(name: String? = null, updatedOn: OffsetDateTime? = null, staleId: Long? = null, ciName: String? = null, createdOn: OffsetDateTime? = null, divisionId: String? = null, code: String? = null, id: String? = null, statusId: String? = null, updatedBy: String? = null, externalId: String? = null, createdBy: String? = null, isCompetition: Boolean? = null, price: Double? = null, isDisplay: Boolean? = null): this() {
        this.name = name
        this.updatedOn = updatedOn
        this.staleId = staleId
        this.ciName = ciName
        this.createdOn = createdOn
        this.divisionId = divisionId
        this.code = code
        this.id = id
        this.statusId = statusId
        this.updatedBy = updatedBy
        this.externalId = externalId
        this.createdBy = createdBy
        this.isCompetition = isCompetition
        this.price = price
        this.isDisplay = isDisplay
    }
}
