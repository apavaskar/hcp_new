/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.TmpSalesPendingUpload

import javax.annotation.processing.Generated

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class TmpSalesPendingUploadRecord() : TableRecordImpl<TmpSalesPendingUploadRecord>(TmpSalesPendingUpload.TMP_SALES_PENDING_UPLOAD) {

    open var purchaseOrderNumber: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var salesDocument: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var salesDocumentType: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var customer: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var name1sp: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var shipToParty: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var name1sh: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var citysp: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var endCustomer: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var endCustomerName: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var citysh: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var material: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var description: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var profitCenter: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var createdOn: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var openQuantity: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    open var openValue: String?
        set(value): Unit = set(16, value)
        get(): String? = get(16) as String?

    open var productId: String?
        set(value): Unit = set(17, value)
        get(): String? = get(17) as String?

    open var customerId: String?
        set(value): Unit = set(18, value)
        get(): String? = get(18) as String?

    open var locationSapCode: String?
        set(value): Unit = set(19, value)
        get(): String? = get(19) as String?

    open var divisionId: String?
        set(value): Unit = set(20, value)
        get(): String? = get(20) as String?

    open var jobExecutionId: Long?
        set(value): Unit = set(21, value)
        get(): Long? = get(21) as Long?

    open var errorMessage: String?
        set(value): Unit = set(22, value)
        get(): String? = get(22) as String?

    open var productName: String?
        set(value): Unit = set(23, value)
        get(): String? = get(23) as String?

    open var divisionName: String?
        set(value): Unit = set(24, value)
        get(): String? = get(24) as String?

    open var parentId: String?
        set(value): Unit = set(25, value)
        get(): String? = get(25) as String?

    /**
     * Create a detached, initialised TmpSalesPendingUploadRecord
     */
    constructor(purchaseOrderNumber: String? = null, salesDocument: String? = null, salesDocumentType: String? = null, customer: String? = null, name1sp: String? = null, shipToParty: String? = null, name1sh: String? = null, citysp: String? = null, endCustomer: String? = null, endCustomerName: String? = null, citysh: String? = null, material: String? = null, description: String? = null, profitCenter: String? = null, createdOn: String? = null, openQuantity: String? = null, openValue: String? = null, productId: String? = null, customerId: String? = null, locationSapCode: String? = null, divisionId: String? = null, jobExecutionId: Long? = null, errorMessage: String? = null, productName: String? = null, divisionName: String? = null, parentId: String? = null): this() {
        this.purchaseOrderNumber = purchaseOrderNumber
        this.salesDocument = salesDocument
        this.salesDocumentType = salesDocumentType
        this.customer = customer
        this.name1sp = name1sp
        this.shipToParty = shipToParty
        this.name1sh = name1sh
        this.citysp = citysp
        this.endCustomer = endCustomer
        this.endCustomerName = endCustomerName
        this.citysh = citysh
        this.material = material
        this.description = description
        this.profitCenter = profitCenter
        this.createdOn = createdOn
        this.openQuantity = openQuantity
        this.openValue = openValue
        this.productId = productId
        this.customerId = customerId
        this.locationSapCode = locationSapCode
        this.divisionId = divisionId
        this.jobExecutionId = jobExecutionId
        this.errorMessage = errorMessage
        this.productName = productName
        this.divisionName = divisionName
        this.parentId = parentId
    }
}
