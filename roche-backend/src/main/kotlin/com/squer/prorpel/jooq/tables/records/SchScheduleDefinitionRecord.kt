/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.SchScheduleDefinition

import java.time.LocalDate
import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record14
import org.jooq.Row14
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class SchScheduleDefinitionRecord() : UpdatableRecordImpl<SchScheduleDefinitionRecord>(SchScheduleDefinition.SCH_SCHEDULE_DEFINITION), Record14<String?, String?, String?, String?, LocalDate?, String?, String?, String?, String?, String?, LocalDate?, OffsetDateTime?, OffsetDateTime?, Long?> {

    open var groupName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var id: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var createdBy: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var startTime: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var startDate: LocalDate?
        set(value): Unit = set(4, value)
        get(): LocalDate? = get(4) as LocalDate?

    open var staleId: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var status: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var jobId: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var updatedBy: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var frequencyUnit: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var endDate: LocalDate?
        set(value): Unit = set(10, value)
        get(): LocalDate? = get(10) as LocalDate?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(11, value)
        get(): OffsetDateTime? = get(11) as OffsetDateTime?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(12, value)
        get(): OffsetDateTime? = get(12) as OffsetDateTime?

    open var scheduleFrequency: Long?
        set(value): Unit = set(13, value)
        get(): Long? = get(13) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row14<String?, String?, String?, String?, LocalDate?, String?, String?, String?, String?, String?, LocalDate?, OffsetDateTime?, OffsetDateTime?, Long?> = super.fieldsRow() as Row14<String?, String?, String?, String?, LocalDate?, String?, String?, String?, String?, String?, LocalDate?, OffsetDateTime?, OffsetDateTime?, Long?>
    override fun valuesRow(): Row14<String?, String?, String?, String?, LocalDate?, String?, String?, String?, String?, String?, LocalDate?, OffsetDateTime?, OffsetDateTime?, Long?> = super.valuesRow() as Row14<String?, String?, String?, String?, LocalDate?, String?, String?, String?, String?, String?, LocalDate?, OffsetDateTime?, OffsetDateTime?, Long?>
    override fun field1(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.GROUP_NAME
    override fun field2(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.ID
    override fun field3(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.CREATED_BY
    override fun field4(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.START_TIME
    override fun field5(): Field<LocalDate?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.START_DATE
    override fun field6(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.STALE_ID
    override fun field7(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.STATUS
    override fun field8(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.JOB_ID
    override fun field9(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.UPDATED_BY
    override fun field10(): Field<String?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.FREQUENCY_UNIT
    override fun field11(): Field<LocalDate?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.END_DATE
    override fun field12(): Field<OffsetDateTime?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.UPDATED_ON
    override fun field13(): Field<OffsetDateTime?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.CREATED_ON
    override fun field14(): Field<Long?> = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION.SCHEDULE_FREQUENCY
    override fun component1(): String? = groupName
    override fun component2(): String? = id
    override fun component3(): String? = createdBy
    override fun component4(): String? = startTime
    override fun component5(): LocalDate? = startDate
    override fun component6(): String? = staleId
    override fun component7(): String? = status
    override fun component8(): String? = jobId
    override fun component9(): String? = updatedBy
    override fun component10(): String? = frequencyUnit
    override fun component11(): LocalDate? = endDate
    override fun component12(): OffsetDateTime? = updatedOn
    override fun component13(): OffsetDateTime? = createdOn
    override fun component14(): Long? = scheduleFrequency
    override fun value1(): String? = groupName
    override fun value2(): String? = id
    override fun value3(): String? = createdBy
    override fun value4(): String? = startTime
    override fun value5(): LocalDate? = startDate
    override fun value6(): String? = staleId
    override fun value7(): String? = status
    override fun value8(): String? = jobId
    override fun value9(): String? = updatedBy
    override fun value10(): String? = frequencyUnit
    override fun value11(): LocalDate? = endDate
    override fun value12(): OffsetDateTime? = updatedOn
    override fun value13(): OffsetDateTime? = createdOn
    override fun value14(): Long? = scheduleFrequency

    override fun value1(value: String?): SchScheduleDefinitionRecord {
        this.groupName = value
        return this
    }

    override fun value2(value: String?): SchScheduleDefinitionRecord {
        this.id = value
        return this
    }

    override fun value3(value: String?): SchScheduleDefinitionRecord {
        this.createdBy = value
        return this
    }

    override fun value4(value: String?): SchScheduleDefinitionRecord {
        this.startTime = value
        return this
    }

    override fun value5(value: LocalDate?): SchScheduleDefinitionRecord {
        this.startDate = value
        return this
    }

    override fun value6(value: String?): SchScheduleDefinitionRecord {
        this.staleId = value
        return this
    }

    override fun value7(value: String?): SchScheduleDefinitionRecord {
        this.status = value
        return this
    }

    override fun value8(value: String?): SchScheduleDefinitionRecord {
        this.jobId = value
        return this
    }

    override fun value9(value: String?): SchScheduleDefinitionRecord {
        this.updatedBy = value
        return this
    }

    override fun value10(value: String?): SchScheduleDefinitionRecord {
        this.frequencyUnit = value
        return this
    }

    override fun value11(value: LocalDate?): SchScheduleDefinitionRecord {
        this.endDate = value
        return this
    }

    override fun value12(value: OffsetDateTime?): SchScheduleDefinitionRecord {
        this.updatedOn = value
        return this
    }

    override fun value13(value: OffsetDateTime?): SchScheduleDefinitionRecord {
        this.createdOn = value
        return this
    }

    override fun value14(value: Long?): SchScheduleDefinitionRecord {
        this.scheduleFrequency = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: LocalDate?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: LocalDate?, value12: OffsetDateTime?, value13: OffsetDateTime?, value14: Long?): SchScheduleDefinitionRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        return this
    }

    /**
     * Create a detached, initialised SchScheduleDefinitionRecord
     */
    constructor(groupName: String? = null, id: String? = null, createdBy: String? = null, startTime: String? = null, startDate: LocalDate? = null, staleId: String? = null, status: String? = null, jobId: String? = null, updatedBy: String? = null, frequencyUnit: String? = null, endDate: LocalDate? = null, updatedOn: OffsetDateTime? = null, createdOn: OffsetDateTime? = null, scheduleFrequency: Long? = null): this() {
        this.groupName = groupName
        this.id = id
        this.createdBy = createdBy
        this.startTime = startTime
        this.startDate = startDate
        this.staleId = staleId
        this.status = status
        this.jobId = jobId
        this.updatedBy = updatedBy
        this.frequencyUnit = frequencyUnit
        this.endDate = endDate
        this.updatedOn = updatedOn
        this.createdOn = createdOn
        this.scheduleFrequency = scheduleFrequency
    }
}
