/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.Searchcolumnmeta

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class SearchcolumnmetaRecord() : UpdatableRecordImpl<SearchcolumnmetaRecord>(Searchcolumnmeta.SEARCHCOLUMNMETA), Record7<Long?, Long?, String?, String?, String?, String?, Int?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var searchMetaId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var dataIndex: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var key: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var render: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var displayOrder: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<Long?, Long?, String?, String?, String?, String?, Int?> = super.fieldsRow() as Row7<Long?, Long?, String?, String?, String?, String?, Int?>
    override fun valuesRow(): Row7<Long?, Long?, String?, String?, String?, String?, Int?> = super.valuesRow() as Row7<Long?, Long?, String?, String?, String?, String?, Int?>
    override fun field1(): Field<Long?> = Searchcolumnmeta.SEARCHCOLUMNMETA.ID
    override fun field2(): Field<Long?> = Searchcolumnmeta.SEARCHCOLUMNMETA.SEARCH_META_ID
    override fun field3(): Field<String?> = Searchcolumnmeta.SEARCHCOLUMNMETA.TITLE
    override fun field4(): Field<String?> = Searchcolumnmeta.SEARCHCOLUMNMETA.DATA_INDEX
    override fun field5(): Field<String?> = Searchcolumnmeta.SEARCHCOLUMNMETA.KEY
    override fun field6(): Field<String?> = Searchcolumnmeta.SEARCHCOLUMNMETA.RENDER
    override fun field7(): Field<Int?> = Searchcolumnmeta.SEARCHCOLUMNMETA.DISPLAY_ORDER
    override fun component1(): Long? = id
    override fun component2(): Long? = searchMetaId
    override fun component3(): String? = title
    override fun component4(): String? = dataIndex
    override fun component5(): String? = key
    override fun component6(): String? = render
    override fun component7(): Int? = displayOrder
    override fun value1(): Long? = id
    override fun value2(): Long? = searchMetaId
    override fun value3(): String? = title
    override fun value4(): String? = dataIndex
    override fun value5(): String? = key
    override fun value6(): String? = render
    override fun value7(): Int? = displayOrder

    override fun value1(value: Long?): SearchcolumnmetaRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): SearchcolumnmetaRecord {
        this.searchMetaId = value
        return this
    }

    override fun value3(value: String?): SearchcolumnmetaRecord {
        this.title = value
        return this
    }

    override fun value4(value: String?): SearchcolumnmetaRecord {
        this.dataIndex = value
        return this
    }

    override fun value5(value: String?): SearchcolumnmetaRecord {
        this.key = value
        return this
    }

    override fun value6(value: String?): SearchcolumnmetaRecord {
        this.render = value
        return this
    }

    override fun value7(value: Int?): SearchcolumnmetaRecord {
        this.displayOrder = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: String?, value4: String?, value5: String?, value6: String?, value7: Int?): SearchcolumnmetaRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised SearchcolumnmetaRecord
     */
    constructor(id: Long? = null, searchMetaId: Long? = null, title: String? = null, dataIndex: String? = null, key: String? = null, render: String? = null, displayOrder: Int? = null): this() {
        this.id = id
        this.searchMetaId = searchMetaId
        this.title = title
        this.dataIndex = dataIndex
        this.key = key
        this.render = render
        this.displayOrder = displayOrder
    }
}
