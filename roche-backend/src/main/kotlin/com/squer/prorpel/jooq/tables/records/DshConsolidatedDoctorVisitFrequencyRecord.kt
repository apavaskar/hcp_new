/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshConsolidatedDoctorVisitFrequency

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshConsolidatedDoctorVisitFrequencyRecord() : TableRecordImpl<DshConsolidatedDoctorVisitFrequencyRecord>(DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY), Record8<String?, String?, String?, String?, Int?, Int?, Int?, Int?> {

    open var employeeId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var doctorId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var classificationId: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var locationId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var visits: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var month: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var year: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var yearmonth: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<String?, String?, String?, String?, Int?, Int?, Int?, Int?> = super.fieldsRow() as Row8<String?, String?, String?, String?, Int?, Int?, Int?, Int?>
    override fun valuesRow(): Row8<String?, String?, String?, String?, Int?, Int?, Int?, Int?> = super.valuesRow() as Row8<String?, String?, String?, String?, Int?, Int?, Int?, Int?>
    override fun field1(): Field<String?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.EMPLOYEE_ID
    override fun field2(): Field<String?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.DOCTOR_ID
    override fun field3(): Field<String?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.CLASSIFICATION_ID
    override fun field4(): Field<String?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.LOCATION_ID
    override fun field5(): Field<Int?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.VISITS
    override fun field6(): Field<Int?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.MONTH
    override fun field7(): Field<Int?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.YEAR
    override fun field8(): Field<Int?> = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY.YEARMONTH
    override fun component1(): String? = employeeId
    override fun component2(): String? = doctorId
    override fun component3(): String? = classificationId
    override fun component4(): String? = locationId
    override fun component5(): Int? = visits
    override fun component6(): Int? = month
    override fun component7(): Int? = year
    override fun component8(): Int? = yearmonth
    override fun value1(): String? = employeeId
    override fun value2(): String? = doctorId
    override fun value3(): String? = classificationId
    override fun value4(): String? = locationId
    override fun value5(): Int? = visits
    override fun value6(): Int? = month
    override fun value7(): Int? = year
    override fun value8(): Int? = yearmonth

    override fun value1(value: String?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.employeeId = value
        return this
    }

    override fun value2(value: String?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.doctorId = value
        return this
    }

    override fun value3(value: String?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.classificationId = value
        return this
    }

    override fun value4(value: String?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.locationId = value
        return this
    }

    override fun value5(value: Int?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.visits = value
        return this
    }

    override fun value6(value: Int?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.month = value
        return this
    }

    override fun value7(value: Int?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.year = value
        return this
    }

    override fun value8(value: Int?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.yearmonth = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: Int?, value6: Int?, value7: Int?, value8: Int?): DshConsolidatedDoctorVisitFrequencyRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised DshConsolidatedDoctorVisitFrequencyRecord
     */
    constructor(employeeId: String? = null, doctorId: String? = null, classificationId: String? = null, locationId: String? = null, visits: Int? = null, month: Int? = null, year: Int? = null, yearmonth: Int? = null): this() {
        this.employeeId = employeeId
        this.doctorId = doctorId
        this.classificationId = classificationId
        this.locationId = locationId
        this.visits = visits
        this.month = month
        this.year = year
        this.yearmonth = yearmonth
    }
}
