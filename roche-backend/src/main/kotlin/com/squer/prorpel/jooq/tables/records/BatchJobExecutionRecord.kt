/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.BatchJobExecution

import java.time.LocalDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class BatchJobExecutionRecord() : UpdatableRecordImpl<BatchJobExecutionRecord>(BatchJobExecution.BATCH_JOB_EXECUTION), Record11<Long?, Long?, Long?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, String?, String?, LocalDateTime?, String?> {

    open var jobExecutionId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var version: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var jobInstanceId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var createTime: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var startTime: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    open var endTime: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    open var status: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var exitCode: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var exitMessage: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var lastUpdated: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    open var jobConfigurationLocation: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<Long?, Long?, Long?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, String?, String?, LocalDateTime?, String?> = super.fieldsRow() as Row11<Long?, Long?, Long?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, String?, String?, LocalDateTime?, String?>
    override fun valuesRow(): Row11<Long?, Long?, Long?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, String?, String?, LocalDateTime?, String?> = super.valuesRow() as Row11<Long?, Long?, Long?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, String?, String?, LocalDateTime?, String?>
    override fun field1(): Field<Long?> = BatchJobExecution.BATCH_JOB_EXECUTION.JOB_EXECUTION_ID
    override fun field2(): Field<Long?> = BatchJobExecution.BATCH_JOB_EXECUTION.VERSION
    override fun field3(): Field<Long?> = BatchJobExecution.BATCH_JOB_EXECUTION.JOB_INSTANCE_ID
    override fun field4(): Field<LocalDateTime?> = BatchJobExecution.BATCH_JOB_EXECUTION.CREATE_TIME
    override fun field5(): Field<LocalDateTime?> = BatchJobExecution.BATCH_JOB_EXECUTION.START_TIME
    override fun field6(): Field<LocalDateTime?> = BatchJobExecution.BATCH_JOB_EXECUTION.END_TIME
    override fun field7(): Field<String?> = BatchJobExecution.BATCH_JOB_EXECUTION.STATUS
    override fun field8(): Field<String?> = BatchJobExecution.BATCH_JOB_EXECUTION.EXIT_CODE
    override fun field9(): Field<String?> = BatchJobExecution.BATCH_JOB_EXECUTION.EXIT_MESSAGE
    override fun field10(): Field<LocalDateTime?> = BatchJobExecution.BATCH_JOB_EXECUTION.LAST_UPDATED
    override fun field11(): Field<String?> = BatchJobExecution.BATCH_JOB_EXECUTION.JOB_CONFIGURATION_LOCATION
    override fun component1(): Long? = jobExecutionId
    override fun component2(): Long? = version
    override fun component3(): Long? = jobInstanceId
    override fun component4(): LocalDateTime? = createTime
    override fun component5(): LocalDateTime? = startTime
    override fun component6(): LocalDateTime? = endTime
    override fun component7(): String? = status
    override fun component8(): String? = exitCode
    override fun component9(): String? = exitMessage
    override fun component10(): LocalDateTime? = lastUpdated
    override fun component11(): String? = jobConfigurationLocation
    override fun value1(): Long? = jobExecutionId
    override fun value2(): Long? = version
    override fun value3(): Long? = jobInstanceId
    override fun value4(): LocalDateTime? = createTime
    override fun value5(): LocalDateTime? = startTime
    override fun value6(): LocalDateTime? = endTime
    override fun value7(): String? = status
    override fun value8(): String? = exitCode
    override fun value9(): String? = exitMessage
    override fun value10(): LocalDateTime? = lastUpdated
    override fun value11(): String? = jobConfigurationLocation

    override fun value1(value: Long?): BatchJobExecutionRecord {
        this.jobExecutionId = value
        return this
    }

    override fun value2(value: Long?): BatchJobExecutionRecord {
        this.version = value
        return this
    }

    override fun value3(value: Long?): BatchJobExecutionRecord {
        this.jobInstanceId = value
        return this
    }

    override fun value4(value: LocalDateTime?): BatchJobExecutionRecord {
        this.createTime = value
        return this
    }

    override fun value5(value: LocalDateTime?): BatchJobExecutionRecord {
        this.startTime = value
        return this
    }

    override fun value6(value: LocalDateTime?): BatchJobExecutionRecord {
        this.endTime = value
        return this
    }

    override fun value7(value: String?): BatchJobExecutionRecord {
        this.status = value
        return this
    }

    override fun value8(value: String?): BatchJobExecutionRecord {
        this.exitCode = value
        return this
    }

    override fun value9(value: String?): BatchJobExecutionRecord {
        this.exitMessage = value
        return this
    }

    override fun value10(value: LocalDateTime?): BatchJobExecutionRecord {
        this.lastUpdated = value
        return this
    }

    override fun value11(value: String?): BatchJobExecutionRecord {
        this.jobConfigurationLocation = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: Long?, value4: LocalDateTime?, value5: LocalDateTime?, value6: LocalDateTime?, value7: String?, value8: String?, value9: String?, value10: LocalDateTime?, value11: String?): BatchJobExecutionRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised BatchJobExecutionRecord
     */
    constructor(jobExecutionId: Long? = null, version: Long? = null, jobInstanceId: Long? = null, createTime: LocalDateTime? = null, startTime: LocalDateTime? = null, endTime: LocalDateTime? = null, status: String? = null, exitCode: String? = null, exitMessage: String? = null, lastUpdated: LocalDateTime? = null, jobConfigurationLocation: String? = null): this() {
        this.jobExecutionId = jobExecutionId
        this.version = version
        this.jobInstanceId = jobInstanceId
        this.createTime = createTime
        this.startTime = startTime
        this.endTime = endTime
        this.status = status
        this.exitCode = exitCode
        this.exitMessage = exitMessage
        this.lastUpdated = lastUpdated
        this.jobConfigurationLocation = jobConfigurationLocation
    }
}
