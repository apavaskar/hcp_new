{"version":3,"file":"static/js/11.9c0fc63c.chunk.js","mappings":"kxCAYMA,sBAAwB,SAAxBA,sBAAqB,MAKW,IAJHC,SAAQ,KAARA,SAAUC,SAAQ,KAARA,SAAUC,WAAU,KAAVA,WACpBC,aAAY,KAAZA,aAAcC,mBAAkB,KAAlBA,mBACdC,qBAAoB,KAApBA,qBAAsBC,aAAY,KAAZA,aACtBC,oBAAmB,KAAnBA,oBAG3BC,UAAWC,EAAAA,8CAAAA,MACXC,QAASC,EAAAA,8CAAAA,MAEb,WAAoCC,EAAAA,mCAAAA,YAAU,qJAAvCC,WAAU,cAAEC,cAAa,cAE1BC,UAAY,SAACC,EAAMC,GACrB,OAAO,sDAAC,oCAAM,CAACC,QAASD,EAAKE,KAAM,OAAO,SAAC,QAC/C,GAEAC,EAAAA,mCAAAA,YAAU,WASN,OARAhB,mBAAmB,CACfiB,KAAK,UAAD,OAAYX,OAAOW,MACvBC,YAAatB,SAASsB,cAE1BjB,qBAAqB,CACjBkB,YAAY,UAAD,OAAYb,OAAOW,MAC9BC,YAAatB,SAASsB,cAEnB,kBAAMf,qBAAqB,CACtC,GAAG,CAACG,UAEJU,EAAAA,mCAAAA,YAAU,gBACoBI,IAAtBtB,WAAWuB,QACXX,cAAcZ,WAAWuB,OAAOC,KAAI,SAAAC,KAIhC,OAHmB,OAAfA,IAAIC,SACJD,IAAIC,OAASC,KAAKF,IAAIC,SAEnBD,GACX,IAER,GAAG,CAACzB,WAAWuB,SAEf,IAAMK,oBAAsB,SAACC,GACzB5B,aAAa,CACT6B,UAAW/B,SAASgC,aACpBX,YAAatB,SAASsB,YACtBS,KAAMA,GAEd,EAEMG,iBAAmB,SAACH,GACtBvB,SAAS,UAAD,OAAWE,OAAOW,KAAI,QAClC,EAGA,OACI,uDAAC,qCAAG,CAACc,OAAQ,CAAC,GAAI,IAAI,WAClB,sDAAC,qCAAG,CAACC,KAAM,GAAG,UACV,sDAAC,oDAAW,CAACC,MAAOpC,SAASoC,WAEjC,sDAAC,qCAAG,CAACD,KAAM,GAAG,UACV,sDAAC,8DAAS,CAACE,KAAMrC,SAAUsC,QAAS,CAACN,aAAcH,oBAAqBI,iBAAkBA,uBAE9F,sDAAC,qCAAG,CAACE,KAAM,GAAG,UACV,sDAAC,qCAAK,CAACI,WAAYlC,aAAcmC,QAAS5B,WAAY6B,OAAQ,WAI9E,EAYMC,SAAW,SAACC,GAKd,MAAO,CAAC5C,UAJS6C,EAAAA,4DAAAA,IAAeD,GAId3C,UAHD6C,EAAAA,8DAAAA,IAAeF,GAGJ1C,YAFT6C,EAAAA,8DAAAA,IAAiBH,GAEItC,cADnB0C,EAAAA,8DAAAA,IAAoBJ,GAE7C,EAEML,QAAU,CACZpC,aAAc8C,kEAAAA,GACd7C,mBAAoB8C,kEAAAA,GACpB7C,qBAAsB8C,kEAAAA,GACtB5C,oBAAqB6C,kEAAAA,IAGzB,6BAAeC,EAAAA,yCAAAA,IAAQV,SAAUJ,QAAjC,CAA0CxC,sB","sources":["components/common/CommonSearchComponent.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport PropTypes from \"prop-types\";\nimport {selectAuthInfo} from \"../../redux/selectors/authSelectors\";\nimport {connect} from \"react-redux\";\nimport {commonSearchMetaStartAction, commonSearchResetAction, commonSearchStartAction, getFormMetaStartAction} from \"../../redux/actions/common/commonActions\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport TitleWidget from \"../../widgets/TitleWidget\";\nimport {selectFormMeta, selectSearchMeta, selectSearchResults} from \"../../redux/selectors/commonSelectors\";\nimport {Button, Col, Row, Table} from \"antd\";\nimport SquerForm from \"../widgets/formbuilder/SquerForm\";\n\n\nconst CommonSearchComponent = ({\n                                   authInfo, formMeta, searchMeta,\n                                   handleSearch, handleLoadFormMeta,\n                                   handleLoadSearchMeta, searchResult,\n                                   handleResetFormMeta\n                               }) => {\n\n    let navigate = useNavigate();\n    let params = useParams();\n\n    const [resultMeta, setResultMeta] = useState()\n\n    const paintLink = (item, fun) => {\n        return <Button onClick={fun} type={'link'}>Edit</Button>\n    }\n\n    useEffect(() => {\n        handleLoadFormMeta({\n            code: `search-${params.code}`,\n            certificate: authInfo.certificate\n        })\n        handleLoadSearchMeta({\n            entity_name: `search-${params.code}`,\n            certificate: authInfo.certificate\n        })\n        return () => handleResetFormMeta()\n    }, [params])\n\n    useEffect(() => {\n        if (searchMeta.result !== undefined) {\n            setResultMeta(searchMeta.result.map(row => {\n                if (row.render !== null) {\n                    row.render = eval(row.render)\n                }\n                return row\n            }))\n        }\n    }, [searchMeta.result])\n\n    const handleSearchPressed = (data) => {\n        handleSearch({\n            searchAPI: formMeta.submitAction,\n            certificate: authInfo.certificate,\n            data: data\n        })\n    }\n\n    const handleAddPressed = (data) => {\n        navigate(`/admin/${params.code}/new`)\n    }\n\n\n    return (\n        <Row gutter={[16, 16]}>\n            <Col span={24}>\n                <TitleWidget title={formMeta.title}/>\n            </Col>\n            <Col span={24}>\n                <SquerForm meta={formMeta} actions={{submitAction: handleSearchPressed, handleAddPressed: handleAddPressed}}/>\n            </Col>\n            <Col span={24}>\n                <Table dataSource={searchResult} columns={resultMeta} rowKey={'id'}/>\n            </Col>\n        </Row>\n    )\n}\n\nCommonSearchComponent.propTypes = {\n    authInfo: PropTypes.any,\n    handleSearch: PropTypes.func,\n    navigation: PropTypes.any,\n    searchMeta: PropTypes.any,\n    searchResult: PropTypes.array,\n    handleLoadSearchMeta: PropTypes.func,\n    handleResetFormMeta: PropTypes.func\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const formMeta = selectFormMeta(state)\n    const searchMeta = selectSearchMeta(state)\n    const searchResult = selectSearchResults(state)\n    return {authInfo, formMeta, searchMeta, searchResult}\n}\n\nconst actions = {\n    handleSearch: commonSearchStartAction,\n    handleLoadFormMeta: getFormMetaStartAction,\n    handleLoadSearchMeta: commonSearchMetaStartAction,\n    handleResetFormMeta: commonSearchResetAction\n}\n\nexport default connect(mapState, actions)(CommonSearchComponent)\n"],"names":["CommonSearchComponent","authInfo","formMeta","searchMeta","handleSearch","handleLoadFormMeta","handleLoadSearchMeta","searchResult","handleResetFormMeta","navigate","useNavigate","params","useParams","useState","resultMeta","setResultMeta","paintLink","item","fun","onClick","type","useEffect","code","certificate","entity_name","undefined","result","map","row","render","eval","handleSearchPressed","data","searchAPI","submitAction","handleAddPressed","gutter","span","title","meta","actions","dataSource","columns","rowKey","mapState","state","selectAuthInfo","selectFormMeta","selectSearchMeta","selectSearchResults","commonSearchStartAction","getFormMetaStartAction","commonSearchMetaStartAction","commonSearchResetAction","connect"],"sourceRoot":""}