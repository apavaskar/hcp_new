/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.UptUploadStats

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class UptUploadStatsRecord() : UpdatableRecordImpl<UptUploadStatsRecord>(UptUploadStats.UPT_UPLOAD_STATS), Record13<Int?, String?, String?, Int?, String?, String?, String?, Int?, Int?, String?, OffsetDateTime?, String?, OffsetDateTime?> {

    open var recordsFailed: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var id: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var createdBy: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var exitCode: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var filePath: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var staleId: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var status: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var totalRecords: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    open var recordsUploaded: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var updatedBy: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(10, value)
        get(): OffsetDateTime? = get(10) as OffsetDateTime?

    open var type: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(12, value)
        get(): OffsetDateTime? = get(12) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<Int?, String?, String?, Int?, String?, String?, String?, Int?, Int?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.fieldsRow() as Row13<Int?, String?, String?, Int?, String?, String?, String?, Int?, Int?, String?, OffsetDateTime?, String?, OffsetDateTime?>
    override fun valuesRow(): Row13<Int?, String?, String?, Int?, String?, String?, String?, Int?, Int?, String?, OffsetDateTime?, String?, OffsetDateTime?> = super.valuesRow() as Row13<Int?, String?, String?, Int?, String?, String?, String?, Int?, Int?, String?, OffsetDateTime?, String?, OffsetDateTime?>
    override fun field1(): Field<Int?> = UptUploadStats.UPT_UPLOAD_STATS.RECORDS_FAILED
    override fun field2(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.ID
    override fun field3(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.CREATED_BY
    override fun field4(): Field<Int?> = UptUploadStats.UPT_UPLOAD_STATS.EXIT_CODE
    override fun field5(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.FILE_PATH
    override fun field6(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.STALE_ID
    override fun field7(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.STATUS
    override fun field8(): Field<Int?> = UptUploadStats.UPT_UPLOAD_STATS.TOTAL_RECORDS
    override fun field9(): Field<Int?> = UptUploadStats.UPT_UPLOAD_STATS.RECORDS_UPLOADED
    override fun field10(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.UPDATED_BY
    override fun field11(): Field<OffsetDateTime?> = UptUploadStats.UPT_UPLOAD_STATS.UPDATED_ON
    override fun field12(): Field<String?> = UptUploadStats.UPT_UPLOAD_STATS.TYPE
    override fun field13(): Field<OffsetDateTime?> = UptUploadStats.UPT_UPLOAD_STATS.CREATED_ON
    override fun component1(): Int? = recordsFailed
    override fun component2(): String? = id
    override fun component3(): String? = createdBy
    override fun component4(): Int? = exitCode
    override fun component5(): String? = filePath
    override fun component6(): String? = staleId
    override fun component7(): String? = status
    override fun component8(): Int? = totalRecords
    override fun component9(): Int? = recordsUploaded
    override fun component10(): String? = updatedBy
    override fun component11(): OffsetDateTime? = updatedOn
    override fun component12(): String? = type
    override fun component13(): OffsetDateTime? = createdOn
    override fun value1(): Int? = recordsFailed
    override fun value2(): String? = id
    override fun value3(): String? = createdBy
    override fun value4(): Int? = exitCode
    override fun value5(): String? = filePath
    override fun value6(): String? = staleId
    override fun value7(): String? = status
    override fun value8(): Int? = totalRecords
    override fun value9(): Int? = recordsUploaded
    override fun value10(): String? = updatedBy
    override fun value11(): OffsetDateTime? = updatedOn
    override fun value12(): String? = type
    override fun value13(): OffsetDateTime? = createdOn

    override fun value1(value: Int?): UptUploadStatsRecord {
        this.recordsFailed = value
        return this
    }

    override fun value2(value: String?): UptUploadStatsRecord {
        this.id = value
        return this
    }

    override fun value3(value: String?): UptUploadStatsRecord {
        this.createdBy = value
        return this
    }

    override fun value4(value: Int?): UptUploadStatsRecord {
        this.exitCode = value
        return this
    }

    override fun value5(value: String?): UptUploadStatsRecord {
        this.filePath = value
        return this
    }

    override fun value6(value: String?): UptUploadStatsRecord {
        this.staleId = value
        return this
    }

    override fun value7(value: String?): UptUploadStatsRecord {
        this.status = value
        return this
    }

    override fun value8(value: Int?): UptUploadStatsRecord {
        this.totalRecords = value
        return this
    }

    override fun value9(value: Int?): UptUploadStatsRecord {
        this.recordsUploaded = value
        return this
    }

    override fun value10(value: String?): UptUploadStatsRecord {
        this.updatedBy = value
        return this
    }

    override fun value11(value: OffsetDateTime?): UptUploadStatsRecord {
        this.updatedOn = value
        return this
    }

    override fun value12(value: String?): UptUploadStatsRecord {
        this.type = value
        return this
    }

    override fun value13(value: OffsetDateTime?): UptUploadStatsRecord {
        this.createdOn = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?, value4: Int?, value5: String?, value6: String?, value7: String?, value8: Int?, value9: Int?, value10: String?, value11: OffsetDateTime?, value12: String?, value13: OffsetDateTime?): UptUploadStatsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised UptUploadStatsRecord
     */
    constructor(recordsFailed: Int? = null, id: String? = null, createdBy: String? = null, exitCode: Int? = null, filePath: String? = null, staleId: String? = null, status: String? = null, totalRecords: Int? = null, recordsUploaded: Int? = null, updatedBy: String? = null, updatedOn: OffsetDateTime? = null, type: String? = null, createdOn: OffsetDateTime? = null): this() {
        this.recordsFailed = recordsFailed
        this.id = id
        this.createdBy = createdBy
        this.exitCode = exitCode
        this.filePath = filePath
        this.staleId = staleId
        this.status = status
        this.totalRecords = totalRecords
        this.recordsUploaded = recordsUploaded
        this.updatedBy = updatedBy
        this.updatedOn = updatedOn
        this.type = type
        this.createdOn = createdOn
    }
}
