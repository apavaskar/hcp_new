/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.CmeEventExpenseConfigBkp

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class CmeEventExpenseConfigBkpRecord() : TableRecordImpl<CmeEventExpenseConfigBkpRecord>(CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP), Record8<String?, Boolean?, String?, String?, Double?, String?, Int?, Int?> {

    open var jobTitleId: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsEnabled")
    open var isEnabled: Boolean?
        set(value): Unit = set(1, value)
        get(): Boolean? = get(1) as Boolean?

    open var cmeType: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var expenseTypeId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var amount: Double?
        set(value): Unit = set(4, value)
        get(): Double? = get(4) as Double?

    open var eventTypeId: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var maximum: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var minimum: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<String?, Boolean?, String?, String?, Double?, String?, Int?, Int?> = super.fieldsRow() as Row8<String?, Boolean?, String?, String?, Double?, String?, Int?, Int?>
    override fun valuesRow(): Row8<String?, Boolean?, String?, String?, Double?, String?, Int?, Int?> = super.valuesRow() as Row8<String?, Boolean?, String?, String?, Double?, String?, Int?, Int?>
    override fun field1(): Field<String?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.JOB_TITLE_ID
    override fun field2(): Field<Boolean?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.IS_ENABLED
    override fun field3(): Field<String?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.CME_TYPE
    override fun field4(): Field<String?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.EXPENSE_TYPE_ID
    override fun field5(): Field<Double?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.AMOUNT
    override fun field6(): Field<String?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.EVENT_TYPE_ID
    override fun field7(): Field<Int?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.MAXIMUM
    override fun field8(): Field<Int?> = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP.MINIMUM
    override fun component1(): String? = jobTitleId
    override fun component2(): Boolean? = isEnabled
    override fun component3(): String? = cmeType
    override fun component4(): String? = expenseTypeId
    override fun component5(): Double? = amount
    override fun component6(): String? = eventTypeId
    override fun component7(): Int? = maximum
    override fun component8(): Int? = minimum
    override fun value1(): String? = jobTitleId
    override fun value2(): Boolean? = isEnabled
    override fun value3(): String? = cmeType
    override fun value4(): String? = expenseTypeId
    override fun value5(): Double? = amount
    override fun value6(): String? = eventTypeId
    override fun value7(): Int? = maximum
    override fun value8(): Int? = minimum

    override fun value1(value: String?): CmeEventExpenseConfigBkpRecord {
        this.jobTitleId = value
        return this
    }

    override fun value2(value: Boolean?): CmeEventExpenseConfigBkpRecord {
        this.isEnabled = value
        return this
    }

    override fun value3(value: String?): CmeEventExpenseConfigBkpRecord {
        this.cmeType = value
        return this
    }

    override fun value4(value: String?): CmeEventExpenseConfigBkpRecord {
        this.expenseTypeId = value
        return this
    }

    override fun value5(value: Double?): CmeEventExpenseConfigBkpRecord {
        this.amount = value
        return this
    }

    override fun value6(value: String?): CmeEventExpenseConfigBkpRecord {
        this.eventTypeId = value
        return this
    }

    override fun value7(value: Int?): CmeEventExpenseConfigBkpRecord {
        this.maximum = value
        return this
    }

    override fun value8(value: Int?): CmeEventExpenseConfigBkpRecord {
        this.minimum = value
        return this
    }

    override fun values(value1: String?, value2: Boolean?, value3: String?, value4: String?, value5: Double?, value6: String?, value7: Int?, value8: Int?): CmeEventExpenseConfigBkpRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised CmeEventExpenseConfigBkpRecord
     */
    constructor(jobTitleId: String? = null, isEnabled: Boolean? = null, cmeType: String? = null, expenseTypeId: String? = null, amount: Double? = null, eventTypeId: String? = null, maximum: Int? = null, minimum: Int? = null): this() {
        this.jobTitleId = jobTitleId
        this.isEnabled = isEnabled
        this.cmeType = cmeType
        this.expenseTypeId = expenseTypeId
        this.amount = amount
        this.eventTypeId = eventTypeId
        this.maximum = maximum
        this.minimum = minimum
    }
}
