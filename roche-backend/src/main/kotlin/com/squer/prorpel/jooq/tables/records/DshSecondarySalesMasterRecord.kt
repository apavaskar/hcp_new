/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshSecondarySalesMaster

import java.time.LocalDate
import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record15
import org.jooq.Row15
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshSecondarySalesMasterRecord() : UpdatableRecordImpl<DshSecondarySalesMasterRecord>(DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER), Record15<String?, String?, Double?, LocalDate?, String?, Int?, String?, String?, String?, Double?, OffsetDateTime?, LocalDate?, String?, OffsetDateTime?, Int?> {

    open var id: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var createdBy: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var primarySale: Double?
        set(value): Unit = set(2, value)
        get(): Double? = get(2) as Double?

    open var toDate: LocalDate?
        set(value): Unit = set(3, value)
        get(): LocalDate? = get(3) as LocalDate?

    open var staleId: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var salesYear: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var updatedBy: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var statusId: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var stockistId: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var secondarySale: Double?
        set(value): Unit = set(9, value)
        get(): Double? = get(9) as Double?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(10, value)
        get(): OffsetDateTime? = get(10) as OffsetDateTime?

    open var fromDate: LocalDate?
        set(value): Unit = set(11, value)
        get(): LocalDate? = get(11) as LocalDate?

    open var divisionId: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(13, value)
        get(): OffsetDateTime? = get(13) as OffsetDateTime?

    open var salesMonth: Int?
        set(value): Unit = set(14, value)
        get(): Int? = get(14) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row15<String?, String?, Double?, LocalDate?, String?, Int?, String?, String?, String?, Double?, OffsetDateTime?, LocalDate?, String?, OffsetDateTime?, Int?> = super.fieldsRow() as Row15<String?, String?, Double?, LocalDate?, String?, Int?, String?, String?, String?, Double?, OffsetDateTime?, LocalDate?, String?, OffsetDateTime?, Int?>
    override fun valuesRow(): Row15<String?, String?, Double?, LocalDate?, String?, Int?, String?, String?, String?, Double?, OffsetDateTime?, LocalDate?, String?, OffsetDateTime?, Int?> = super.valuesRow() as Row15<String?, String?, Double?, LocalDate?, String?, Int?, String?, String?, String?, Double?, OffsetDateTime?, LocalDate?, String?, OffsetDateTime?, Int?>
    override fun field1(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.ID
    override fun field2(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.CREATED_BY
    override fun field3(): Field<Double?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.PRIMARY_SALE
    override fun field4(): Field<LocalDate?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.TO_DATE
    override fun field5(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.STALE_ID
    override fun field6(): Field<Int?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.SALES_YEAR
    override fun field7(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.UPDATED_BY
    override fun field8(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.STATUS_ID
    override fun field9(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.STOCKIST_ID
    override fun field10(): Field<Double?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.SECONDARY_SALE
    override fun field11(): Field<OffsetDateTime?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.UPDATED_ON
    override fun field12(): Field<LocalDate?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.FROM_DATE
    override fun field13(): Field<String?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.DIVISION_ID
    override fun field14(): Field<OffsetDateTime?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.CREATED_ON
    override fun field15(): Field<Int?> = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER.SALES_MONTH
    override fun component1(): String? = id
    override fun component2(): String? = createdBy
    override fun component3(): Double? = primarySale
    override fun component4(): LocalDate? = toDate
    override fun component5(): String? = staleId
    override fun component6(): Int? = salesYear
    override fun component7(): String? = updatedBy
    override fun component8(): String? = statusId
    override fun component9(): String? = stockistId
    override fun component10(): Double? = secondarySale
    override fun component11(): OffsetDateTime? = updatedOn
    override fun component12(): LocalDate? = fromDate
    override fun component13(): String? = divisionId
    override fun component14(): OffsetDateTime? = createdOn
    override fun component15(): Int? = salesMonth
    override fun value1(): String? = id
    override fun value2(): String? = createdBy
    override fun value3(): Double? = primarySale
    override fun value4(): LocalDate? = toDate
    override fun value5(): String? = staleId
    override fun value6(): Int? = salesYear
    override fun value7(): String? = updatedBy
    override fun value8(): String? = statusId
    override fun value9(): String? = stockistId
    override fun value10(): Double? = secondarySale
    override fun value11(): OffsetDateTime? = updatedOn
    override fun value12(): LocalDate? = fromDate
    override fun value13(): String? = divisionId
    override fun value14(): OffsetDateTime? = createdOn
    override fun value15(): Int? = salesMonth

    override fun value1(value: String?): DshSecondarySalesMasterRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): DshSecondarySalesMasterRecord {
        this.createdBy = value
        return this
    }

    override fun value3(value: Double?): DshSecondarySalesMasterRecord {
        this.primarySale = value
        return this
    }

    override fun value4(value: LocalDate?): DshSecondarySalesMasterRecord {
        this.toDate = value
        return this
    }

    override fun value5(value: String?): DshSecondarySalesMasterRecord {
        this.staleId = value
        return this
    }

    override fun value6(value: Int?): DshSecondarySalesMasterRecord {
        this.salesYear = value
        return this
    }

    override fun value7(value: String?): DshSecondarySalesMasterRecord {
        this.updatedBy = value
        return this
    }

    override fun value8(value: String?): DshSecondarySalesMasterRecord {
        this.statusId = value
        return this
    }

    override fun value9(value: String?): DshSecondarySalesMasterRecord {
        this.stockistId = value
        return this
    }

    override fun value10(value: Double?): DshSecondarySalesMasterRecord {
        this.secondarySale = value
        return this
    }

    override fun value11(value: OffsetDateTime?): DshSecondarySalesMasterRecord {
        this.updatedOn = value
        return this
    }

    override fun value12(value: LocalDate?): DshSecondarySalesMasterRecord {
        this.fromDate = value
        return this
    }

    override fun value13(value: String?): DshSecondarySalesMasterRecord {
        this.divisionId = value
        return this
    }

    override fun value14(value: OffsetDateTime?): DshSecondarySalesMasterRecord {
        this.createdOn = value
        return this
    }

    override fun value15(value: Int?): DshSecondarySalesMasterRecord {
        this.salesMonth = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Double?, value4: LocalDate?, value5: String?, value6: Int?, value7: String?, value8: String?, value9: String?, value10: Double?, value11: OffsetDateTime?, value12: LocalDate?, value13: String?, value14: OffsetDateTime?, value15: Int?): DshSecondarySalesMasterRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        return this
    }

    /**
     * Create a detached, initialised DshSecondarySalesMasterRecord
     */
    constructor(id: String? = null, createdBy: String? = null, primarySale: Double? = null, toDate: LocalDate? = null, staleId: String? = null, salesYear: Int? = null, updatedBy: String? = null, statusId: String? = null, stockistId: String? = null, secondarySale: Double? = null, updatedOn: OffsetDateTime? = null, fromDate: LocalDate? = null, divisionId: String? = null, createdOn: OffsetDateTime? = null, salesMonth: Int? = null): this() {
        this.id = id
        this.createdBy = createdBy
        this.primarySale = primarySale
        this.toDate = toDate
        this.staleId = staleId
        this.salesYear = salesYear
        this.updatedBy = updatedBy
        this.statusId = statusId
        this.stockistId = stockistId
        this.secondarySale = secondarySale
        this.updatedOn = updatedOn
        this.fromDate = fromDate
        this.divisionId = divisionId
        this.createdOn = createdOn
        this.salesMonth = salesMonth
    }
}
