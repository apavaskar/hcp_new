/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.TmpVisitsUpload

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record15
import org.jooq.Row15
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class TmpVisitsUploadRecord() : TableRecordImpl<TmpVisitsUploadRecord>(TmpVisitsUpload.TMP_VISITS_UPLOAD), Record15<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?> {

    open var assignedAlias: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var accountOwner: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var accountId: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var accountName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var status: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var date: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var dueTime: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var endDt: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var lastModifiedDate: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var countsAgainstTarget: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var customerId: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var employeeId: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var uploadError: Int?
        set(value): Unit = set(12, value)
        get(): Int? = get(12) as Int?

    open var uploadMessage: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var internalId: Int?
        set(value): Unit = set(14, value)
        get(): Int? = get(14) as Int?

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row15<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?> = super.fieldsRow() as Row15<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?>
    override fun valuesRow(): Row15<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?> = super.valuesRow() as Row15<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, Int?, String?, Int?>
    override fun field1(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.ASSIGNED_ALIAS
    override fun field2(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.ACCOUNT_OWNER
    override fun field3(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.ACCOUNT_ID
    override fun field4(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.ACCOUNT_NAME
    override fun field5(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.STATUS
    override fun field6(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.DATE
    override fun field7(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.DUE_TIME
    override fun field8(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.END_DT
    override fun field9(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.LAST_MODIFIED_DATE
    override fun field10(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.COUNTS_AGAINST_TARGET
    override fun field11(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.CUSTOMER_ID
    override fun field12(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.EMPLOYEE_ID
    override fun field13(): Field<Int?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.UPLOAD_ERROR
    override fun field14(): Field<String?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.UPLOAD_MESSAGE
    override fun field15(): Field<Int?> = TmpVisitsUpload.TMP_VISITS_UPLOAD.INTERNAL_ID
    override fun component1(): String? = assignedAlias
    override fun component2(): String? = accountOwner
    override fun component3(): String? = accountId
    override fun component4(): String? = accountName
    override fun component5(): String? = status
    override fun component6(): String? = date
    override fun component7(): String? = dueTime
    override fun component8(): String? = endDt
    override fun component9(): String? = lastModifiedDate
    override fun component10(): String? = countsAgainstTarget
    override fun component11(): String? = customerId
    override fun component12(): String? = employeeId
    override fun component13(): Int? = uploadError
    override fun component14(): String? = uploadMessage
    override fun component15(): Int? = internalId
    override fun value1(): String? = assignedAlias
    override fun value2(): String? = accountOwner
    override fun value3(): String? = accountId
    override fun value4(): String? = accountName
    override fun value5(): String? = status
    override fun value6(): String? = date
    override fun value7(): String? = dueTime
    override fun value8(): String? = endDt
    override fun value9(): String? = lastModifiedDate
    override fun value10(): String? = countsAgainstTarget
    override fun value11(): String? = customerId
    override fun value12(): String? = employeeId
    override fun value13(): Int? = uploadError
    override fun value14(): String? = uploadMessage
    override fun value15(): Int? = internalId

    override fun value1(value: String?): TmpVisitsUploadRecord {
        this.assignedAlias = value
        return this
    }

    override fun value2(value: String?): TmpVisitsUploadRecord {
        this.accountOwner = value
        return this
    }

    override fun value3(value: String?): TmpVisitsUploadRecord {
        this.accountId = value
        return this
    }

    override fun value4(value: String?): TmpVisitsUploadRecord {
        this.accountName = value
        return this
    }

    override fun value5(value: String?): TmpVisitsUploadRecord {
        this.status = value
        return this
    }

    override fun value6(value: String?): TmpVisitsUploadRecord {
        this.date = value
        return this
    }

    override fun value7(value: String?): TmpVisitsUploadRecord {
        this.dueTime = value
        return this
    }

    override fun value8(value: String?): TmpVisitsUploadRecord {
        this.endDt = value
        return this
    }

    override fun value9(value: String?): TmpVisitsUploadRecord {
        this.lastModifiedDate = value
        return this
    }

    override fun value10(value: String?): TmpVisitsUploadRecord {
        this.countsAgainstTarget = value
        return this
    }

    override fun value11(value: String?): TmpVisitsUploadRecord {
        this.customerId = value
        return this
    }

    override fun value12(value: String?): TmpVisitsUploadRecord {
        this.employeeId = value
        return this
    }

    override fun value13(value: Int?): TmpVisitsUploadRecord {
        this.uploadError = value
        return this
    }

    override fun value14(value: String?): TmpVisitsUploadRecord {
        this.uploadMessage = value
        return this
    }

    override fun value15(value: Int?): TmpVisitsUploadRecord {
        this.internalId = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: String?, value12: String?, value13: Int?, value14: String?, value15: Int?): TmpVisitsUploadRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        return this
    }

    /**
     * Create a detached, initialised TmpVisitsUploadRecord
     */
    constructor(assignedAlias: String? = null, accountOwner: String? = null, accountId: String? = null, accountName: String? = null, status: String? = null, date: String? = null, dueTime: String? = null, endDt: String? = null, lastModifiedDate: String? = null, countsAgainstTarget: String? = null, customerId: String? = null, employeeId: String? = null, uploadError: Int? = null, uploadMessage: String? = null, internalId: Int? = null): this() {
        this.assignedAlias = assignedAlias
        this.accountOwner = accountOwner
        this.accountId = accountId
        this.accountName = accountName
        this.status = status
        this.date = date
        this.dueTime = dueTime
        this.endDt = endDt
        this.lastModifiedDate = lastModifiedDate
        this.countsAgainstTarget = countsAgainstTarget
        this.customerId = customerId
        this.employeeId = employeeId
        this.uploadError = uploadError
        this.uploadMessage = uploadMessage
        this.internalId = internalId
    }
}
