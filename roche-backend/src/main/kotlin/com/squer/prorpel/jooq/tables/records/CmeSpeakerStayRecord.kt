/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.CmeSpeakerStay

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record12
import org.jooq.Row12
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class CmeSpeakerStayRecord() : UpdatableRecordImpl<CmeSpeakerStayRecord>(CmeSpeakerStay.CME_SPEAKER_STAY), Record12<OffsetDateTime?, OffsetDateTime?, String?, String?, String?, Long?, String?, Double?, String?, Int?, String?, String?> {

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(0, value)
        get(): OffsetDateTime? = get(0) as OffsetDateTime?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(1, value)
        get(): OffsetDateTime? = get(1) as OffsetDateTime?

    open var stayDetails: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var updatedBy: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var hotelName: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var staleId: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var hotelGrade: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var roomCost: Double?
        set(value): Unit = set(7, value)
        get(): Double? = get(7) as Double?

    open var id: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var occupancy: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    open var address: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var createdBy: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row12<OffsetDateTime?, OffsetDateTime?, String?, String?, String?, Long?, String?, Double?, String?, Int?, String?, String?> = super.fieldsRow() as Row12<OffsetDateTime?, OffsetDateTime?, String?, String?, String?, Long?, String?, Double?, String?, Int?, String?, String?>
    override fun valuesRow(): Row12<OffsetDateTime?, OffsetDateTime?, String?, String?, String?, Long?, String?, Double?, String?, Int?, String?, String?> = super.valuesRow() as Row12<OffsetDateTime?, OffsetDateTime?, String?, String?, String?, Long?, String?, Double?, String?, Int?, String?, String?>
    override fun field1(): Field<OffsetDateTime?> = CmeSpeakerStay.CME_SPEAKER_STAY.UPDATED_ON
    override fun field2(): Field<OffsetDateTime?> = CmeSpeakerStay.CME_SPEAKER_STAY.CREATED_ON
    override fun field3(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.STAY_DETAILS
    override fun field4(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.UPDATED_BY
    override fun field5(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.HOTEL_NAME
    override fun field6(): Field<Long?> = CmeSpeakerStay.CME_SPEAKER_STAY.STALE_ID
    override fun field7(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.HOTEL_GRADE
    override fun field8(): Field<Double?> = CmeSpeakerStay.CME_SPEAKER_STAY.ROOM_COST
    override fun field9(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.ID
    override fun field10(): Field<Int?> = CmeSpeakerStay.CME_SPEAKER_STAY.OCCUPANCY
    override fun field11(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.ADDRESS
    override fun field12(): Field<String?> = CmeSpeakerStay.CME_SPEAKER_STAY.CREATED_BY
    override fun component1(): OffsetDateTime? = updatedOn
    override fun component2(): OffsetDateTime? = createdOn
    override fun component3(): String? = stayDetails
    override fun component4(): String? = updatedBy
    override fun component5(): String? = hotelName
    override fun component6(): Long? = staleId
    override fun component7(): String? = hotelGrade
    override fun component8(): Double? = roomCost
    override fun component9(): String? = id
    override fun component10(): Int? = occupancy
    override fun component11(): String? = address
    override fun component12(): String? = createdBy
    override fun value1(): OffsetDateTime? = updatedOn
    override fun value2(): OffsetDateTime? = createdOn
    override fun value3(): String? = stayDetails
    override fun value4(): String? = updatedBy
    override fun value5(): String? = hotelName
    override fun value6(): Long? = staleId
    override fun value7(): String? = hotelGrade
    override fun value8(): Double? = roomCost
    override fun value9(): String? = id
    override fun value10(): Int? = occupancy
    override fun value11(): String? = address
    override fun value12(): String? = createdBy

    override fun value1(value: OffsetDateTime?): CmeSpeakerStayRecord {
        this.updatedOn = value
        return this
    }

    override fun value2(value: OffsetDateTime?): CmeSpeakerStayRecord {
        this.createdOn = value
        return this
    }

    override fun value3(value: String?): CmeSpeakerStayRecord {
        this.stayDetails = value
        return this
    }

    override fun value4(value: String?): CmeSpeakerStayRecord {
        this.updatedBy = value
        return this
    }

    override fun value5(value: String?): CmeSpeakerStayRecord {
        this.hotelName = value
        return this
    }

    override fun value6(value: Long?): CmeSpeakerStayRecord {
        this.staleId = value
        return this
    }

    override fun value7(value: String?): CmeSpeakerStayRecord {
        this.hotelGrade = value
        return this
    }

    override fun value8(value: Double?): CmeSpeakerStayRecord {
        this.roomCost = value
        return this
    }

    override fun value9(value: String?): CmeSpeakerStayRecord {
        this.id = value
        return this
    }

    override fun value10(value: Int?): CmeSpeakerStayRecord {
        this.occupancy = value
        return this
    }

    override fun value11(value: String?): CmeSpeakerStayRecord {
        this.address = value
        return this
    }

    override fun value12(value: String?): CmeSpeakerStayRecord {
        this.createdBy = value
        return this
    }

    override fun values(value1: OffsetDateTime?, value2: OffsetDateTime?, value3: String?, value4: String?, value5: String?, value6: Long?, value7: String?, value8: Double?, value9: String?, value10: Int?, value11: String?, value12: String?): CmeSpeakerStayRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        return this
    }

    /**
     * Create a detached, initialised CmeSpeakerStayRecord
     */
    constructor(updatedOn: OffsetDateTime? = null, createdOn: OffsetDateTime? = null, stayDetails: String? = null, updatedBy: String? = null, hotelName: String? = null, staleId: Long? = null, hotelGrade: String? = null, roomCost: Double? = null, id: String? = null, occupancy: Int? = null, address: String? = null, createdBy: String? = null): this() {
        this.updatedOn = updatedOn
        this.createdOn = createdOn
        this.stayDetails = stayDetails
        this.updatedBy = updatedBy
        this.hotelName = hotelName
        this.staleId = staleId
        this.hotelGrade = hotelGrade
        this.roomCost = roomCost
        this.id = id
        this.occupancy = occupancy
        this.address = address
        this.createdBy = createdBy
    }
}
