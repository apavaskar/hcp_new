/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.FmkSystemLov

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class FmkSystemLovRecord() : UpdatableRecordImpl<FmkSystemLovRecord>(FmkSystemLov.FMK_SYSTEM_LOV), Record6<Boolean?, String?, String?, String?, String?, Int?> {

    open var display: Boolean?
        set(value): Unit = set(0, value)
        get(): Boolean? = get(0) as Boolean?

    open var ciName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var name: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var lovType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var id: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var displayOrder: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Boolean?, String?, String?, String?, String?, Int?> = super.fieldsRow() as Row6<Boolean?, String?, String?, String?, String?, Int?>
    override fun valuesRow(): Row6<Boolean?, String?, String?, String?, String?, Int?> = super.valuesRow() as Row6<Boolean?, String?, String?, String?, String?, Int?>
    override fun field1(): Field<Boolean?> = FmkSystemLov.FMK_SYSTEM_LOV.DISPLAY
    override fun field2(): Field<String?> = FmkSystemLov.FMK_SYSTEM_LOV.CI_NAME
    override fun field3(): Field<String?> = FmkSystemLov.FMK_SYSTEM_LOV.NAME
    override fun field4(): Field<String?> = FmkSystemLov.FMK_SYSTEM_LOV.LOV_TYPE
    override fun field5(): Field<String?> = FmkSystemLov.FMK_SYSTEM_LOV.ID
    override fun field6(): Field<Int?> = FmkSystemLov.FMK_SYSTEM_LOV.DISPLAY_ORDER
    override fun component1(): Boolean? = display
    override fun component2(): String? = ciName
    override fun component3(): String? = name
    override fun component4(): String? = lovType
    override fun component5(): String? = id
    override fun component6(): Int? = displayOrder
    override fun value1(): Boolean? = display
    override fun value2(): String? = ciName
    override fun value3(): String? = name
    override fun value4(): String? = lovType
    override fun value5(): String? = id
    override fun value6(): Int? = displayOrder

    override fun value1(value: Boolean?): FmkSystemLovRecord {
        this.display = value
        return this
    }

    override fun value2(value: String?): FmkSystemLovRecord {
        this.ciName = value
        return this
    }

    override fun value3(value: String?): FmkSystemLovRecord {
        this.name = value
        return this
    }

    override fun value4(value: String?): FmkSystemLovRecord {
        this.lovType = value
        return this
    }

    override fun value5(value: String?): FmkSystemLovRecord {
        this.id = value
        return this
    }

    override fun value6(value: Int?): FmkSystemLovRecord {
        this.displayOrder = value
        return this
    }

    override fun values(value1: Boolean?, value2: String?, value3: String?, value4: String?, value5: String?, value6: Int?): FmkSystemLovRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised FmkSystemLovRecord
     */
    constructor(display: Boolean? = null, ciName: String? = null, name: String? = null, lovType: String? = null, id: String? = null, displayOrder: Int? = null): this() {
        this.display = display
        this.ciName = ciName
        this.name = name
        this.lovType = lovType
        this.id = id
        this.displayOrder = displayOrder
    }
}
