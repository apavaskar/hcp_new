/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.Ap

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class ApRecord() : TableRecordImpl<ApRecord>(Ap.AP), Record13<String?, String?, String?, String?, Boolean?, String?, String?, String?, String?, String?, OffsetDateTime?, OffsetDateTime?, String?> {

    open var id: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var action: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var comment: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var createdBy: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsCurrent")
    open var isCurrent: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    open var staleId: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var cmeType: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var updatedBy: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var ownerId: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var approverId: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(10, value)
        get(): OffsetDateTime? = get(10) as OffsetDateTime?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(11, value)
        get(): OffsetDateTime? = get(11) as OffsetDateTime?

    open var groupId: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<String?, String?, String?, String?, Boolean?, String?, String?, String?, String?, String?, OffsetDateTime?, OffsetDateTime?, String?> = super.fieldsRow() as Row13<String?, String?, String?, String?, Boolean?, String?, String?, String?, String?, String?, OffsetDateTime?, OffsetDateTime?, String?>
    override fun valuesRow(): Row13<String?, String?, String?, String?, Boolean?, String?, String?, String?, String?, String?, OffsetDateTime?, OffsetDateTime?, String?> = super.valuesRow() as Row13<String?, String?, String?, String?, Boolean?, String?, String?, String?, String?, String?, OffsetDateTime?, OffsetDateTime?, String?>
    override fun field1(): Field<String?> = Ap.AP.ID
    override fun field2(): Field<String?> = Ap.AP.ACTION
    override fun field3(): Field<String?> = Ap.AP.COMMENT
    override fun field4(): Field<String?> = Ap.AP.CREATED_BY
    override fun field5(): Field<Boolean?> = Ap.AP.IS_CURRENT
    override fun field6(): Field<String?> = Ap.AP.STALE_ID
    override fun field7(): Field<String?> = Ap.AP.CME_TYPE
    override fun field8(): Field<String?> = Ap.AP.UPDATED_BY
    override fun field9(): Field<String?> = Ap.AP.OWNER_ID
    override fun field10(): Field<String?> = Ap.AP.APPROVER_ID
    override fun field11(): Field<OffsetDateTime?> = Ap.AP.UPDATED_ON
    override fun field12(): Field<OffsetDateTime?> = Ap.AP.CREATED_ON
    override fun field13(): Field<String?> = Ap.AP.GROUP_ID
    override fun component1(): String? = id
    override fun component2(): String? = action
    override fun component3(): String? = comment
    override fun component4(): String? = createdBy
    override fun component5(): Boolean? = isCurrent
    override fun component6(): String? = staleId
    override fun component7(): String? = cmeType
    override fun component8(): String? = updatedBy
    override fun component9(): String? = ownerId
    override fun component10(): String? = approverId
    override fun component11(): OffsetDateTime? = updatedOn
    override fun component12(): OffsetDateTime? = createdOn
    override fun component13(): String? = groupId
    override fun value1(): String? = id
    override fun value2(): String? = action
    override fun value3(): String? = comment
    override fun value4(): String? = createdBy
    override fun value5(): Boolean? = isCurrent
    override fun value6(): String? = staleId
    override fun value7(): String? = cmeType
    override fun value8(): String? = updatedBy
    override fun value9(): String? = ownerId
    override fun value10(): String? = approverId
    override fun value11(): OffsetDateTime? = updatedOn
    override fun value12(): OffsetDateTime? = createdOn
    override fun value13(): String? = groupId

    override fun value1(value: String?): ApRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): ApRecord {
        this.action = value
        return this
    }

    override fun value3(value: String?): ApRecord {
        this.comment = value
        return this
    }

    override fun value4(value: String?): ApRecord {
        this.createdBy = value
        return this
    }

    override fun value5(value: Boolean?): ApRecord {
        this.isCurrent = value
        return this
    }

    override fun value6(value: String?): ApRecord {
        this.staleId = value
        return this
    }

    override fun value7(value: String?): ApRecord {
        this.cmeType = value
        return this
    }

    override fun value8(value: String?): ApRecord {
        this.updatedBy = value
        return this
    }

    override fun value9(value: String?): ApRecord {
        this.ownerId = value
        return this
    }

    override fun value10(value: String?): ApRecord {
        this.approverId = value
        return this
    }

    override fun value11(value: OffsetDateTime?): ApRecord {
        this.updatedOn = value
        return this
    }

    override fun value12(value: OffsetDateTime?): ApRecord {
        this.createdOn = value
        return this
    }

    override fun value13(value: String?): ApRecord {
        this.groupId = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: Boolean?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: OffsetDateTime?, value12: OffsetDateTime?, value13: String?): ApRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised ApRecord
     */
    constructor(id: String? = null, action: String? = null, comment: String? = null, createdBy: String? = null, isCurrent: Boolean? = null, staleId: String? = null, cmeType: String? = null, updatedBy: String? = null, ownerId: String? = null, approverId: String? = null, updatedOn: OffsetDateTime? = null, createdOn: OffsetDateTime? = null, groupId: String? = null): this() {
        this.id = id
        this.action = action
        this.comment = comment
        this.createdBy = createdBy
        this.isCurrent = isCurrent
        this.staleId = staleId
        this.cmeType = cmeType
        this.updatedBy = updatedBy
        this.ownerId = ownerId
        this.approverId = approverId
        this.updatedOn = updatedOn
        this.createdOn = createdOn
        this.groupId = groupId
    }
}
