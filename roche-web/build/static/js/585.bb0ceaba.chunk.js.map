{"version":3,"file":"static/js/585.bb0ceaba.chunk.js","mappings":"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","sources":["redux/selectors/expenseReportSelectors.js","components/expense/claim/SearchClaimExpenseComponent.js"],"sourcesContent":["import { createSelector } from 'reselect'\n\nconst expense = (state) => state.expense\nconst headers = (state) => state.expense.headers\nconst summary = state => state.expense.summary\n\nexport const selectExpenseHeaders = createSelector(headers,\n    (headersSelect) => headersSelect)\n\nexport const selectSummary = createSelector(summary,\n    summarySelect => summarySelect\n    )\n","import {selectAuthInfo, selectProfileInfo} from \"../../../redux/selectors/authSelectors\";\nimport TitleWidget from \"../../../widgets/TitleWidget\";\nimport {Button, Col, DatePicker, Row, Select, Table} from \"antd\";\nimport {useState} from \"react\";\nimport {changeLocationTypeAction, searchExpenseStartAction} from \"../../../redux/actions/expense/expenseActions\";\nimport {toDisplayDateDay, toYyyyMm} from \"../../../utils/DateUtils\";\nimport {selectExpenseHeaders, selectSummary} from \"../../../redux/selectors/expenseReportSelectors\";\nimport {Typography} from \"antd\";\nimport { connect } from 'react-redux'\n\nconst SearchClaimExpenseComponent = ({authInfo,\n                                      profileInfo,\n                                         summary,\n                                      handleSearchExpense,\n                                      handleChangeLocationType,\n                                      headers}) => {\n    const[form, setForm] = useState({})\n\n    const changeForm = (value, field) => {\n        setForm({...form, [field]: value})\n    }\n\n    const changeLocationType = (value, id) => {\n        handleChangeLocationType({\n            type: value,\n            id: id\n        })\n    }\n\n    let cols = [\n        {\n            title: 'Date',\n            width: 10,\n            dataIndex: 'dateExpense',\n            key: 'dateExpense',\n            render: item => toDisplayDateDay(item),\n            fixed: 'left'\n        },\n        {\n            title: 'Activity Type',\n            width: 10,\n            dataIndex: 'activityId',\n            key: 'activityId',\n            render: item => {\n              switch (item) {\n                  case 0: return 'None'\n                  case 1: return 'Calls'\n                  case 2: return 'Leave'\n              }\n            },\n            fixed: 'left'\n        },\n        {\n            title: 'Location Type',\n            width: 15,\n            dataIndex: 'location_type',\n            key: 'location_type',\n            render: (text, record )=> {\n                if (record.activityId === 1) {\n                    return <Select\n                        defaultValue=''\n                        style={{\n                            width: 180,\n                        }}\n                        onChange={(v) => changeLocationType(v, record.id)}>\n                        <Select.Option value=\"HQ\">HQ</Select.Option>\n                        <Select.Option value=\"EX-HQ\">EX HQ</Select.Option>\n                        <Select.Option value=\"OS\">OUTSTATION</Select.Option>\n                        <Select.Option value=\"EX-OS\">EX OUTSTATION</Select.Option>\n                    </Select>\n                } else {\n                    return ''\n                }\n            }\n        },\n        {\n            title: 'Towns Visited',\n            width: 20,\n            dataIndex: 'townsVisited',\n            key: 'towns',\n            render: (item, record) => {\n                if (item.length === 0) {\n                    return  '-'\n                }\n                return item.map(i => i.name).join(' -> ')\n            }\n        },\n        {\n            title: 'Distance',\n            width: 10,\n            dataIndex: 'distance',\n            key: 'distance',\n            render: (item) => {\n                return 0\n            }\n        },\n        {\n            title: 'Daily Allowance',\n            width: 10,\n            dataIndex: 'dailyAllowance',\n            key: 'dailyAllowance'\n        },\n        {\n            title: 'Fare',\n            width: 10,\n            dataIndex: 'fare',\n            key: 'fare',\n            render: item =>  '0'\n        }\n\n    ]\n    const submitReport = () => {\n        handleSearchExpense({\n            certificate: authInfo.token,\n            employeeId: profileInfo.user.id,\n            yearMonth: toYyyyMm(form.date)\n        })\n    }\n    return(\n        <>\n            <TitleWidget title={'Claim Expense'} />\n            <Row gutter={16}>\n                <Col span={3}>\n                    <DatePicker onChange={(date)=> changeForm(date, 'date')} picker='month' />\n                </Col>\n                <Col span={4}>\n                    <Button type={'primary'} onClick={submitReport}>Submit</Button>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Table\n                    pagination={false}\n                    style={{marginTop: 20}}\n                    dataSource={headers.details}\n                    columns={cols}\n                    scroll={{\n                        x: 1000,\n                    }}\n                />\n            </Row>\n            <Row>\n                <Col span={4}>Claim Summary</Col>\n                <Col span={3}><Typography.Title level={5} style={{ margin: 0 }}>DA: {summary.totalDA}</Typography.Title></Col>\n                <Col span={3}><Typography.Title level={5} style={{ margin: 0 }}>Fare: {summary.totalFare}</Typography.Title></Col>\n            </Row>\n\n        </>\n        )\n}\n\nconst mapState = (state) => {\n    const authInfo = selectAuthInfo(state)\n    const profileInfo = selectProfileInfo(state)\n    const headers = selectExpenseHeaders(state)\n    const summary = selectSummary(state)\n    return { authInfo, profileInfo, headers, summary }\n}\n\nconst actions = {\n    handleSearchExpense: searchExpenseStartAction,\n    handleChangeLocationType: changeLocationTypeAction\n}\n\n\nexport default connect(mapState, actions)(SearchClaimExpenseComponent)\n"],"names":["selectExpenseHeaders","createSelector","state","expense","headers","headersSelect","selectSummary","summary","summarySelect","actions","handleSearchExpense","searchExpenseStartAction","handleChangeLocationType","changeLocationTypeAction","connect","authInfo","selectAuthInfo","profileInfo","selectProfileInfo","useState","form","setForm","cols","title","width","dataIndex","key","render","item","toDisplayDateDay","fixed","text","record","activityId","defaultValue","style","onChange","v","value","id","type","length","map","i","name","join","TitleWidget","gutter","span","date","field","picker","onClick","certificate","token","employeeId","user","yearMonth","toYyyyMm","pagination","marginTop","dataSource","details","columns","scroll","x","level","margin","totalDA","totalFare"],"sourceRoot":""}