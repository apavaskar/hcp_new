/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshAvailabilityProduct

import java.time.LocalDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshAvailabilityProductRecord() : TableRecordImpl<DshAvailabilityProductRecord>(DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT), Record10<String?, String?, String?, LocalDateTime?, LocalDateTime?, String?, String?, Long?, Boolean?, String?> {

    open var id: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var ciName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var createdOn: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var updatedOn: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    open var createdBy: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var updatedBy: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var staleId: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsCompetition")
    open var isCompetition: Boolean?
        set(value): Unit = set(8, value)
        get(): Boolean? = get(8) as Boolean?

    open var type: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<String?, String?, String?, LocalDateTime?, LocalDateTime?, String?, String?, Long?, Boolean?, String?> = super.fieldsRow() as Row10<String?, String?, String?, LocalDateTime?, LocalDateTime?, String?, String?, Long?, Boolean?, String?>
    override fun valuesRow(): Row10<String?, String?, String?, LocalDateTime?, LocalDateTime?, String?, String?, Long?, Boolean?, String?> = super.valuesRow() as Row10<String?, String?, String?, LocalDateTime?, LocalDateTime?, String?, String?, Long?, Boolean?, String?>
    override fun field1(): Field<String?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.ID
    override fun field2(): Field<String?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.NAME
    override fun field3(): Field<String?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.CI_NAME
    override fun field4(): Field<LocalDateTime?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.CREATED_ON
    override fun field5(): Field<LocalDateTime?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.UPDATED_ON
    override fun field6(): Field<String?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.CREATED_BY
    override fun field7(): Field<String?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.UPDATED_BY
    override fun field8(): Field<Long?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.STALE_ID
    override fun field9(): Field<Boolean?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.IS_COMPETITION
    override fun field10(): Field<String?> = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT.TYPE
    override fun component1(): String? = id
    override fun component2(): String? = name
    override fun component3(): String? = ciName
    override fun component4(): LocalDateTime? = createdOn
    override fun component5(): LocalDateTime? = updatedOn
    override fun component6(): String? = createdBy
    override fun component7(): String? = updatedBy
    override fun component8(): Long? = staleId
    override fun component9(): Boolean? = isCompetition
    override fun component10(): String? = type
    override fun value1(): String? = id
    override fun value2(): String? = name
    override fun value3(): String? = ciName
    override fun value4(): LocalDateTime? = createdOn
    override fun value5(): LocalDateTime? = updatedOn
    override fun value6(): String? = createdBy
    override fun value7(): String? = updatedBy
    override fun value8(): Long? = staleId
    override fun value9(): Boolean? = isCompetition
    override fun value10(): String? = type

    override fun value1(value: String?): DshAvailabilityProductRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): DshAvailabilityProductRecord {
        this.name = value
        return this
    }

    override fun value3(value: String?): DshAvailabilityProductRecord {
        this.ciName = value
        return this
    }

    override fun value4(value: LocalDateTime?): DshAvailabilityProductRecord {
        this.createdOn = value
        return this
    }

    override fun value5(value: LocalDateTime?): DshAvailabilityProductRecord {
        this.updatedOn = value
        return this
    }

    override fun value6(value: String?): DshAvailabilityProductRecord {
        this.createdBy = value
        return this
    }

    override fun value7(value: String?): DshAvailabilityProductRecord {
        this.updatedBy = value
        return this
    }

    override fun value8(value: Long?): DshAvailabilityProductRecord {
        this.staleId = value
        return this
    }

    override fun value9(value: Boolean?): DshAvailabilityProductRecord {
        this.isCompetition = value
        return this
    }

    override fun value10(value: String?): DshAvailabilityProductRecord {
        this.type = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: LocalDateTime?, value5: LocalDateTime?, value6: String?, value7: String?, value8: Long?, value9: Boolean?, value10: String?): DshAvailabilityProductRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised DshAvailabilityProductRecord
     */
    constructor(id: String? = null, name: String? = null, ciName: String? = null, createdOn: LocalDateTime? = null, updatedOn: LocalDateTime? = null, createdBy: String? = null, updatedBy: String? = null, staleId: Long? = null, isCompetition: Boolean? = null, type: String? = null): this() {
        this.id = id
        this.name = name
        this.ciName = ciName
        this.createdOn = createdOn
        this.updatedOn = updatedOn
        this.createdBy = createdBy
        this.updatedBy = updatedBy
        this.staleId = staleId
        this.isCompetition = isCompetition
        this.type = type
    }
}
