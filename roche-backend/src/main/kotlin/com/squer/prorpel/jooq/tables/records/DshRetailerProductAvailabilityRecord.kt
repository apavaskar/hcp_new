/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshRetailerProductAvailability

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshRetailerProductAvailabilityRecord() : UpdatableRecordImpl<DshRetailerProductAvailabilityRecord>(DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY), Record11<String?, String?, Int?, String?, Int?, String?, String?, Double?, OffsetDateTime?, OffsetDateTime?, String?> {

    open var id: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var updatedBy: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var month: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var retailerId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var year: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var createdBy: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var brandId: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var total: Double?
        set(value): Unit = set(7, value)
        get(): Double? = get(7) as Double?

    open var updatedOn: OffsetDateTime?
        set(value): Unit = set(8, value)
        get(): OffsetDateTime? = get(8) as OffsetDateTime?

    open var createdOn: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    open var staleId: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<String?, String?, Int?, String?, Int?, String?, String?, Double?, OffsetDateTime?, OffsetDateTime?, String?> = super.fieldsRow() as Row11<String?, String?, Int?, String?, Int?, String?, String?, Double?, OffsetDateTime?, OffsetDateTime?, String?>
    override fun valuesRow(): Row11<String?, String?, Int?, String?, Int?, String?, String?, Double?, OffsetDateTime?, OffsetDateTime?, String?> = super.valuesRow() as Row11<String?, String?, Int?, String?, Int?, String?, String?, Double?, OffsetDateTime?, OffsetDateTime?, String?>
    override fun field1(): Field<String?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.ID
    override fun field2(): Field<String?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.UPDATED_BY
    override fun field3(): Field<Int?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.MONTH
    override fun field4(): Field<String?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.RETAILER_ID
    override fun field5(): Field<Int?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.YEAR
    override fun field6(): Field<String?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.CREATED_BY
    override fun field7(): Field<String?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.BRAND_ID
    override fun field8(): Field<Double?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.TOTAL
    override fun field9(): Field<OffsetDateTime?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.UPDATED_ON
    override fun field10(): Field<OffsetDateTime?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.CREATED_ON
    override fun field11(): Field<String?> = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY.STALE_ID
    override fun component1(): String? = id
    override fun component2(): String? = updatedBy
    override fun component3(): Int? = month
    override fun component4(): String? = retailerId
    override fun component5(): Int? = year
    override fun component6(): String? = createdBy
    override fun component7(): String? = brandId
    override fun component8(): Double? = total
    override fun component9(): OffsetDateTime? = updatedOn
    override fun component10(): OffsetDateTime? = createdOn
    override fun component11(): String? = staleId
    override fun value1(): String? = id
    override fun value2(): String? = updatedBy
    override fun value3(): Int? = month
    override fun value4(): String? = retailerId
    override fun value5(): Int? = year
    override fun value6(): String? = createdBy
    override fun value7(): String? = brandId
    override fun value8(): Double? = total
    override fun value9(): OffsetDateTime? = updatedOn
    override fun value10(): OffsetDateTime? = createdOn
    override fun value11(): String? = staleId

    override fun value1(value: String?): DshRetailerProductAvailabilityRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): DshRetailerProductAvailabilityRecord {
        this.updatedBy = value
        return this
    }

    override fun value3(value: Int?): DshRetailerProductAvailabilityRecord {
        this.month = value
        return this
    }

    override fun value4(value: String?): DshRetailerProductAvailabilityRecord {
        this.retailerId = value
        return this
    }

    override fun value5(value: Int?): DshRetailerProductAvailabilityRecord {
        this.year = value
        return this
    }

    override fun value6(value: String?): DshRetailerProductAvailabilityRecord {
        this.createdBy = value
        return this
    }

    override fun value7(value: String?): DshRetailerProductAvailabilityRecord {
        this.brandId = value
        return this
    }

    override fun value8(value: Double?): DshRetailerProductAvailabilityRecord {
        this.total = value
        return this
    }

    override fun value9(value: OffsetDateTime?): DshRetailerProductAvailabilityRecord {
        this.updatedOn = value
        return this
    }

    override fun value10(value: OffsetDateTime?): DshRetailerProductAvailabilityRecord {
        this.createdOn = value
        return this
    }

    override fun value11(value: String?): DshRetailerProductAvailabilityRecord {
        this.staleId = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Int?, value4: String?, value5: Int?, value6: String?, value7: String?, value8: Double?, value9: OffsetDateTime?, value10: OffsetDateTime?, value11: String?): DshRetailerProductAvailabilityRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised DshRetailerProductAvailabilityRecord
     */
    constructor(id: String? = null, updatedBy: String? = null, month: Int? = null, retailerId: String? = null, year: Int? = null, createdBy: String? = null, brandId: String? = null, total: Double? = null, updatedOn: OffsetDateTime? = null, createdOn: OffsetDateTime? = null, staleId: String? = null): this() {
        this.id = id
        this.updatedBy = updatedBy
        this.month = month
        this.retailerId = retailerId
        this.year = year
        this.createdBy = createdBy
        this.brandId = brandId
        this.total = total
        this.updatedOn = updatedOn
        this.createdOn = createdOn
        this.staleId = staleId
    }
}
