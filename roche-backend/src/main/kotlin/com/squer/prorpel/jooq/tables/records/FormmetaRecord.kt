/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.Formmeta

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class FormmetaRecord() : UpdatableRecordImpl<FormmetaRecord>(Formmeta.FORMMETA), Record8<Long?, String?, String?, String?, Int?, Boolean?, String?, String?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var code: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var subTitle: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var numColumns: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsInline")
    open var isInline: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var submitAction: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var initAction: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<Long?, String?, String?, String?, Int?, Boolean?, String?, String?> = super.fieldsRow() as Row8<Long?, String?, String?, String?, Int?, Boolean?, String?, String?>
    override fun valuesRow(): Row8<Long?, String?, String?, String?, Int?, Boolean?, String?, String?> = super.valuesRow() as Row8<Long?, String?, String?, String?, Int?, Boolean?, String?, String?>
    override fun field1(): Field<Long?> = Formmeta.FORMMETA.ID
    override fun field2(): Field<String?> = Formmeta.FORMMETA.CODE
    override fun field3(): Field<String?> = Formmeta.FORMMETA.TITLE
    override fun field4(): Field<String?> = Formmeta.FORMMETA.SUB_TITLE
    override fun field5(): Field<Int?> = Formmeta.FORMMETA.NUM_COLUMNS
    override fun field6(): Field<Boolean?> = Formmeta.FORMMETA.IS_INLINE
    override fun field7(): Field<String?> = Formmeta.FORMMETA.SUBMIT_ACTION
    override fun field8(): Field<String?> = Formmeta.FORMMETA.INIT_ACTION
    override fun component1(): Long? = id
    override fun component2(): String? = code
    override fun component3(): String? = title
    override fun component4(): String? = subTitle
    override fun component5(): Int? = numColumns
    override fun component6(): Boolean? = isInline
    override fun component7(): String? = submitAction
    override fun component8(): String? = initAction
    override fun value1(): Long? = id
    override fun value2(): String? = code
    override fun value3(): String? = title
    override fun value4(): String? = subTitle
    override fun value5(): Int? = numColumns
    override fun value6(): Boolean? = isInline
    override fun value7(): String? = submitAction
    override fun value8(): String? = initAction

    override fun value1(value: Long?): FormmetaRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): FormmetaRecord {
        this.code = value
        return this
    }

    override fun value3(value: String?): FormmetaRecord {
        this.title = value
        return this
    }

    override fun value4(value: String?): FormmetaRecord {
        this.subTitle = value
        return this
    }

    override fun value5(value: Int?): FormmetaRecord {
        this.numColumns = value
        return this
    }

    override fun value6(value: Boolean?): FormmetaRecord {
        this.isInline = value
        return this
    }

    override fun value7(value: String?): FormmetaRecord {
        this.submitAction = value
        return this
    }

    override fun value8(value: String?): FormmetaRecord {
        this.initAction = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: String?, value4: String?, value5: Int?, value6: Boolean?, value7: String?, value8: String?): FormmetaRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised FormmetaRecord
     */
    constructor(id: Long? = null, code: String? = null, title: String? = null, subTitle: String? = null, numColumns: Int? = null, isInline: Boolean? = null, submitAction: String? = null, initAction: String? = null): this() {
        this.id = id
        this.code = code
        this.title = title
        this.subTitle = subTitle
        this.numColumns = numColumns
        this.isInline = isInline
        this.submitAction = submitAction
        this.initAction = initAction
    }
}
