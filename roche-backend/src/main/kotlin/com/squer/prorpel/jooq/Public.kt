/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq


import com.squer.prorpel.jooq.sequences.BATCH_JOB_EXECUTION_SEQ
import com.squer.prorpel.jooq.sequences.BATCH_JOB_SEQ
import com.squer.prorpel.jooq.sequences.BATCH_STEP_EXECUTION_SEQ
import com.squer.prorpel.jooq.tables.Ap
import com.squer.prorpel.jooq.tables.Ap1
import com.squer.prorpel.jooq.tables.BatchJobExecution
import com.squer.prorpel.jooq.tables.BatchJobExecutionContext
import com.squer.prorpel.jooq.tables.BatchJobExecutionParams
import com.squer.prorpel.jooq.tables.BatchJobInstance
import com.squer.prorpel.jooq.tables.BatchJobType
import com.squer.prorpel.jooq.tables.BatchStepExecution
import com.squer.prorpel.jooq.tables.BatchStepExecutionContext
import com.squer.prorpel.jooq.tables.CmeBankDetail
import com.squer.prorpel.jooq.tables.CmeBankDetailBkp
import com.squer.prorpel.jooq.tables.CmeBudjet
import com.squer.prorpel.jooq.tables.CmeDigiDocument
import com.squer.prorpel.jooq.tables.CmeDoctorMaster
import com.squer.prorpel.jooq.tables.CmeEmailNotification
import com.squer.prorpel.jooq.tables.CmeEventApprovalStatus
import com.squer.prorpel.jooq.tables.CmeEventApprovalStatusBkp
import com.squer.prorpel.jooq.tables.CmeEventCreation
import com.squer.prorpel.jooq.tables.CmeEventExpenseConfig
import com.squer.prorpel.jooq.tables.CmeEventExpenseConfigBkp
import com.squer.prorpel.jooq.tables.CmeEventReport
import com.squer.prorpel.jooq.tables.CmeEventSchedule
import com.squer.prorpel.jooq.tables.CmeEventSpeaker
import com.squer.prorpel.jooq.tables.CmeFmvDetail
import com.squer.prorpel.jooq.tables.CmeFoodBeverage
import com.squer.prorpel.jooq.tables.CmeHcpApprovalStatus
import com.squer.prorpel.jooq.tables.CmeHcpApprovalStatusBkp
import com.squer.prorpel.jooq.tables.CmeHonoranium
import com.squer.prorpel.jooq.tables.CmeInviteDetails
import com.squer.prorpel.jooq.tables.CmeOtherExpenses
import com.squer.prorpel.jooq.tables.CmeProducts
import com.squer.prorpel.jooq.tables.CmeRequiredDocument
import com.squer.prorpel.jooq.tables.CmeSpeakerStay
import com.squer.prorpel.jooq.tables.CmeSpeakerTravel
import com.squer.prorpel.jooq.tables.CmeStallCost
import com.squer.prorpel.jooq.tables.CmeVendorBankDetail
import com.squer.prorpel.jooq.tables.CmeVendorEventAdvanceRequest
import com.squer.prorpel.jooq.tables.CmeVendorEventCreation
import com.squer.prorpel.jooq.tables.CmeVendorEventReport
import com.squer.prorpel.jooq.tables.CmeVendorEventSchedule
import com.squer.prorpel.jooq.tables.CmeVendorMaster
import com.squer.prorpel.jooq.tables.CmtBrand
import com.squer.prorpel.jooq.tables.CmtCampaign
import com.squer.prorpel.jooq.tables.CmtChemist
import com.squer.prorpel.jooq.tables.CmtDivision
import com.squer.prorpel.jooq.tables.CmtDoctor
import com.squer.prorpel.jooq.tables.CmtEmployee
import com.squer.prorpel.jooq.tables.CmtEmployeeHistory
import com.squer.prorpel.jooq.tables.CmtEmployeeOld
import com.squer.prorpel.jooq.tables.CmtFtmLocationMapping
import com.squer.prorpel.jooq.tables.CmtJobTitle
import com.squer.prorpel.jooq.tables.CmtLocation
import com.squer.prorpel.jooq.tables.CmtLocationOld
import com.squer.prorpel.jooq.tables.CmtOrganizationHeirarchy
import com.squer.prorpel.jooq.tables.CmtPatientCode
import com.squer.prorpel.jooq.tables.CmtProduct
import com.squer.prorpel.jooq.tables.CmtRetailer
import com.squer.prorpel.jooq.tables.CmtStockist
import com.squer.prorpel.jooq.tables.Databasechangelog
import com.squer.prorpel.jooq.tables.Databasechangeloglock
import com.squer.prorpel.jooq.tables.DshActivityAttendee
import com.squer.prorpel.jooq.tables.DshActivityDetails
import com.squer.prorpel.jooq.tables.DshAvailabilityProduct
import com.squer.prorpel.jooq.tables.DshConsolidatedDoctorVisitFrequency
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationBrandPrimaryDailySales
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationBrandPrimarySales
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationBrandSecondarySales
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationCoverage
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationFrequency
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationPrimaryDailySales
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationPrimarySales
import com.squer.prorpel.jooq.tables.DshConsolidatedLocationSecondarySales
import com.squer.prorpel.jooq.tables.DshConsolidatedRetailerProductAvailability
import com.squer.prorpel.jooq.tables.DshConsolidatedVisits
import com.squer.prorpel.jooq.tables.DshDatewiseSales
import com.squer.prorpel.jooq.tables.DshInvoiceDetails
import com.squer.prorpel.jooq.tables.DshLocationwiseConsolidatedProductAvailability
import com.squer.prorpel.jooq.tables.DshLocationwiseConsolidatedRetailerProductAvailability
import com.squer.prorpel.jooq.tables.DshMonthlyConsolidatedLocationwiseAvailability
import com.squer.prorpel.jooq.tables.DshProductAvailability
import com.squer.prorpel.jooq.tables.DshRcpa
import com.squer.prorpel.jooq.tables.DshRetailerProductAvailability
import com.squer.prorpel.jooq.tables.DshSalesLocationMapping
import com.squer.prorpel.jooq.tables.DshSalesSubcustomerMapping
import com.squer.prorpel.jooq.tables.DshSecondarySalesDetails
import com.squer.prorpel.jooq.tables.DshSecondarySalesMaster
import com.squer.prorpel.jooq.tables.DshStockistLocation
import com.squer.prorpel.jooq.tables.DshVisitFrequency
import com.squer.prorpel.jooq.tables.Event_10073776
import com.squer.prorpel.jooq.tables.FmkAppConfig
import com.squer.prorpel.jooq.tables.FmkCounter
import com.squer.prorpel.jooq.tables.FmkSecurityPrivilege
import com.squer.prorpel.jooq.tables.FmkSecurityRole
import com.squer.prorpel.jooq.tables.FmkSecurityUser
import com.squer.prorpel.jooq.tables.FmkSystemLov
import com.squer.prorpel.jooq.tables.FmkUserLov
import com.squer.prorpel.jooq.tables.Formattributemeta
import com.squer.prorpel.jooq.tables.Formmeta
import com.squer.prorpel.jooq.tables.Labelmeta
import com.squer.prorpel.jooq.tables.Menuactions
import com.squer.prorpel.jooq.tables.PgpArmorHeaders
import com.squer.prorpel.jooq.tables.RptMonthlyConsolidatedActivity
import com.squer.prorpel.jooq.tables.RptSalesTargetData
import com.squer.prorpel.jooq.tables.SchJobDefinition
import com.squer.prorpel.jooq.tables.SchScheduleDefinition
import com.squer.prorpel.jooq.tables.Searchcolumnmeta
import com.squer.prorpel.jooq.tables.Searchconditionmeta
import com.squer.prorpel.jooq.tables.Searchmeta
import com.squer.prorpel.jooq.tables.Securityprivilege
import com.squer.prorpel.jooq.tables.Securityrole
import com.squer.prorpel.jooq.tables.Securityroleprivilege
import com.squer.prorpel.jooq.tables.SlsGmTarget
import com.squer.prorpel.jooq.tables.SlsKamMapping
import com.squer.prorpel.jooq.tables.SlsProductMapping
import com.squer.prorpel.jooq.tables.SlsProductMappingOld
import com.squer.prorpel.jooq.tables.SlsSecondarySalesDetails
import com.squer.prorpel.jooq.tables.SlsSecondarySalesMaster
import com.squer.prorpel.jooq.tables.SryAdditionalData
import com.squer.prorpel.jooq.tables.SryAnswerMaster
import com.squer.prorpel.jooq.tables.SryCategoryMaster
import com.squer.prorpel.jooq.tables.SryCriteriaMaster
import com.squer.prorpel.jooq.tables.SryQuestionMaster
import com.squer.prorpel.jooq.tables.SryResponseDetails
import com.squer.prorpel.jooq.tables.SryResponseMaster
import com.squer.prorpel.jooq.tables.SrySurveyMaster
import com.squer.prorpel.jooq.tables.TempEcr
import com.squer.prorpel.jooq.tables.Tempterritoryps
import com.squer.prorpel.jooq.tables.Test
import com.squer.prorpel.jooq.tables.TmpAllLocationBrandDailySales
import com.squer.prorpel.jooq.tables.TmpAllLocationBrandPending
import com.squer.prorpel.jooq.tables.TmpAllLocationBrandSales
import com.squer.prorpel.jooq.tables.TmpBrandSale
import com.squer.prorpel.jooq.tables.TmpConsolidatedCoverage
import com.squer.prorpel.jooq.tables.TmpConsolidatedFrequency
import com.squer.prorpel.jooq.tables.TmpConsolidatedVisits
import com.squer.prorpel.jooq.tables.TmpDivisionSales
import com.squer.prorpel.jooq.tables.TmpEffortUpload
import com.squer.prorpel.jooq.tables.TmpEmployee
import com.squer.prorpel.jooq.tables.TmpEmployeeUpload
import com.squer.prorpel.jooq.tables.TmpEmployeeUploadErrors
import com.squer.prorpel.jooq.tables.TmpKamMappingUpload
import com.squer.prorpel.jooq.tables.TmpLocation
import com.squer.prorpel.jooq.tables.TmpLocationBrandDailySales
import com.squer.prorpel.jooq.tables.TmpLocationBrandPending
import com.squer.prorpel.jooq.tables.TmpLocationBrandSales
import com.squer.prorpel.jooq.tables.TmpLocationHeirarchy
import com.squer.prorpel.jooq.tables.TmpLocationSales
import com.squer.prorpel.jooq.tables.TmpPrimarySalesUpload
import com.squer.prorpel.jooq.tables.TmpProductMappingUpload
import com.squer.prorpel.jooq.tables.TmpProductMappingUploadOld
import com.squer.prorpel.jooq.tables.TmpSalesInvoiceUpload
import com.squer.prorpel.jooq.tables.TmpSalesPendingUpload
import com.squer.prorpel.jooq.tables.TmpTargetDateUpload
import com.squer.prorpel.jooq.tables.TmpTargetUpload
import com.squer.prorpel.jooq.tables.TmpVisitsUpload
import com.squer.prorpel.jooq.tables.TmpVisitsUploadErrors
import com.squer.prorpel.jooq.tables.UptUploadStats
import com.squer.prorpel.jooq.tables.Usersecurityrole
import com.squer.prorpel.jooq.tables.records.PgpArmorHeadersRecord

import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Configuration
import org.jooq.Field
import org.jooq.Result
import org.jooq.Sequence
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.ap</code>.
     */
    val AP: Ap get() = Ap.AP

    /**
     * The table <code>public.ap1</code>.
     */
    val AP1: Ap1 get() = Ap1.AP1

    /**
     * The table <code>public.batch_job_execution</code>.
     */
    val BATCH_JOB_EXECUTION: BatchJobExecution get() = BatchJobExecution.BATCH_JOB_EXECUTION

    /**
     * The table <code>public.batch_job_execution_context</code>.
     */
    val BATCH_JOB_EXECUTION_CONTEXT: BatchJobExecutionContext get() = BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT

    /**
     * The table <code>public.batch_job_execution_params</code>.
     */
    val BATCH_JOB_EXECUTION_PARAMS: BatchJobExecutionParams get() = BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS

    /**
     * The table <code>public.batch_job_instance</code>.
     */
    val BATCH_JOB_INSTANCE: BatchJobInstance get() = BatchJobInstance.BATCH_JOB_INSTANCE

    /**
     * The table <code>public.batch_job_type</code>.
     */
    val BATCH_JOB_TYPE: BatchJobType get() = BatchJobType.BATCH_JOB_TYPE

    /**
     * The table <code>public.batch_step_execution</code>.
     */
    val BATCH_STEP_EXECUTION: BatchStepExecution get() = BatchStepExecution.BATCH_STEP_EXECUTION

    /**
     * The table <code>public.batch_step_execution_context</code>.
     */
    val BATCH_STEP_EXECUTION_CONTEXT: BatchStepExecutionContext get() = BatchStepExecutionContext.BATCH_STEP_EXECUTION_CONTEXT

    /**
     * The table <code>public.cme_bank_detail</code>.
     */
    val CME_BANK_DETAIL: CmeBankDetail get() = CmeBankDetail.CME_BANK_DETAIL

    /**
     * The table <code>public.cme_bank_detail_bkp</code>.
     */
    val CME_BANK_DETAIL_BKP: CmeBankDetailBkp get() = CmeBankDetailBkp.CME_BANK_DETAIL_BKP

    /**
     * The table <code>public.cme_budjet</code>.
     */
    val CME_BUDJET: CmeBudjet get() = CmeBudjet.CME_BUDJET

    /**
     * The table <code>public.cme_digi_document</code>.
     */
    val CME_DIGI_DOCUMENT: CmeDigiDocument get() = CmeDigiDocument.CME_DIGI_DOCUMENT

    /**
     * The table <code>public.cme_doctor_master</code>.
     */
    val CME_DOCTOR_MASTER: CmeDoctorMaster get() = CmeDoctorMaster.CME_DOCTOR_MASTER

    /**
     * The table <code>public.cme_email_notification</code>.
     */
    val CME_EMAIL_NOTIFICATION: CmeEmailNotification get() = CmeEmailNotification.CME_EMAIL_NOTIFICATION

    /**
     * The table <code>public.cme_event_approval_status</code>.
     */
    val CME_EVENT_APPROVAL_STATUS: CmeEventApprovalStatus get() = CmeEventApprovalStatus.CME_EVENT_APPROVAL_STATUS

    /**
     * The table <code>public.cme_event_approval_status_bkp</code>.
     */
    val CME_EVENT_APPROVAL_STATUS_BKP: CmeEventApprovalStatusBkp get() = CmeEventApprovalStatusBkp.CME_EVENT_APPROVAL_STATUS_BKP

    /**
     * The table <code>public.cme_event_creation</code>.
     */
    val CME_EVENT_CREATION: CmeEventCreation get() = CmeEventCreation.CME_EVENT_CREATION

    /**
     * The table <code>public.cme_event_expense_config</code>.
     */
    val CME_EVENT_EXPENSE_CONFIG: CmeEventExpenseConfig get() = CmeEventExpenseConfig.CME_EVENT_EXPENSE_CONFIG

    /**
     * The table <code>public.cme_event_expense_config_bkp</code>.
     */
    val CME_EVENT_EXPENSE_CONFIG_BKP: CmeEventExpenseConfigBkp get() = CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP

    /**
     * The table <code>public.cme_event_report</code>.
     */
    val CME_EVENT_REPORT: CmeEventReport get() = CmeEventReport.CME_EVENT_REPORT

    /**
     * The table <code>public.cme_event_schedule</code>.
     */
    val CME_EVENT_SCHEDULE: CmeEventSchedule get() = CmeEventSchedule.CME_EVENT_SCHEDULE

    /**
     * The table <code>public.cme_event_speaker</code>.
     */
    val CME_EVENT_SPEAKER: CmeEventSpeaker get() = CmeEventSpeaker.CME_EVENT_SPEAKER

    /**
     * The table <code>public.cme_fmv_detail</code>.
     */
    val CME_FMV_DETAIL: CmeFmvDetail get() = CmeFmvDetail.CME_FMV_DETAIL

    /**
     * The table <code>public.cme_food_beverage</code>.
     */
    val CME_FOOD_BEVERAGE: CmeFoodBeverage get() = CmeFoodBeverage.CME_FOOD_BEVERAGE

    /**
     * The table <code>public.cme_hcp_approval_status</code>.
     */
    val CME_HCP_APPROVAL_STATUS: CmeHcpApprovalStatus get() = CmeHcpApprovalStatus.CME_HCP_APPROVAL_STATUS

    /**
     * The table <code>public.cme_hcp_approval_status_bkp</code>.
     */
    val CME_HCP_APPROVAL_STATUS_BKP: CmeHcpApprovalStatusBkp get() = CmeHcpApprovalStatusBkp.CME_HCP_APPROVAL_STATUS_BKP

    /**
     * The table <code>public.cme_honoranium</code>.
     */
    val CME_HONORANIUM: CmeHonoranium get() = CmeHonoranium.CME_HONORANIUM

    /**
     * The table <code>public.cme_invite_details</code>.
     */
    val CME_INVITE_DETAILS: CmeInviteDetails get() = CmeInviteDetails.CME_INVITE_DETAILS

    /**
     * The table <code>public.cme_other_expenses</code>.
     */
    val CME_OTHER_EXPENSES: CmeOtherExpenses get() = CmeOtherExpenses.CME_OTHER_EXPENSES

    /**
     * The table <code>public.cme_products</code>.
     */
    val CME_PRODUCTS: CmeProducts get() = CmeProducts.CME_PRODUCTS

    /**
     * The table <code>public.cme_required_document</code>.
     */
    val CME_REQUIRED_DOCUMENT: CmeRequiredDocument get() = CmeRequiredDocument.CME_REQUIRED_DOCUMENT

    /**
     * The table <code>public.cme_speaker_stay</code>.
     */
    val CME_SPEAKER_STAY: CmeSpeakerStay get() = CmeSpeakerStay.CME_SPEAKER_STAY

    /**
     * The table <code>public.cme_speaker_travel</code>.
     */
    val CME_SPEAKER_TRAVEL: CmeSpeakerTravel get() = CmeSpeakerTravel.CME_SPEAKER_TRAVEL

    /**
     * The table <code>public.cme_stall_cost</code>.
     */
    val CME_STALL_COST: CmeStallCost get() = CmeStallCost.CME_STALL_COST

    /**
     * The table <code>public.cme_vendor_bank_detail</code>.
     */
    val CME_VENDOR_BANK_DETAIL: CmeVendorBankDetail get() = CmeVendorBankDetail.CME_VENDOR_BANK_DETAIL

    /**
     * The table <code>public.cme_vendor_event_advance_request</code>.
     */
    val CME_VENDOR_EVENT_ADVANCE_REQUEST: CmeVendorEventAdvanceRequest get() = CmeVendorEventAdvanceRequest.CME_VENDOR_EVENT_ADVANCE_REQUEST

    /**
     * The table <code>public.cme_vendor_event_creation</code>.
     */
    val CME_VENDOR_EVENT_CREATION: CmeVendorEventCreation get() = CmeVendorEventCreation.CME_VENDOR_EVENT_CREATION

    /**
     * The table <code>public.cme_vendor_event_report</code>.
     */
    val CME_VENDOR_EVENT_REPORT: CmeVendorEventReport get() = CmeVendorEventReport.CME_VENDOR_EVENT_REPORT

    /**
     * The table <code>public.cme_vendor_event_schedule</code>.
     */
    val CME_VENDOR_EVENT_SCHEDULE: CmeVendorEventSchedule get() = CmeVendorEventSchedule.CME_VENDOR_EVENT_SCHEDULE

    /**
     * The table <code>public.cme_vendor_master</code>.
     */
    val CME_VENDOR_MASTER: CmeVendorMaster get() = CmeVendorMaster.CME_VENDOR_MASTER

    /**
     * The table <code>public.cmt_brand</code>.
     */
    val CMT_BRAND: CmtBrand get() = CmtBrand.CMT_BRAND

    /**
     * The table <code>public.cmt_campaign</code>.
     */
    val CMT_CAMPAIGN: CmtCampaign get() = CmtCampaign.CMT_CAMPAIGN

    /**
     * The table <code>public.cmt_chemist</code>.
     */
    val CMT_CHEMIST: CmtChemist get() = CmtChemist.CMT_CHEMIST

    /**
     * The table <code>public.cmt_division</code>.
     */
    val CMT_DIVISION: CmtDivision get() = CmtDivision.CMT_DIVISION

    /**
     * The table <code>public.cmt_doctor</code>.
     */
    val CMT_DOCTOR: CmtDoctor get() = CmtDoctor.CMT_DOCTOR

    /**
     * The table <code>public.cmt_employee</code>.
     */
    val CMT_EMPLOYEE: CmtEmployee get() = CmtEmployee.CMT_EMPLOYEE

    /**
     * The table <code>public.cmt_employee_history</code>.
     */
    val CMT_EMPLOYEE_HISTORY: CmtEmployeeHistory get() = CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY

    /**
     * The table <code>public.cmt_employee_old</code>.
     */
    val CMT_EMPLOYEE_OLD: CmtEmployeeOld get() = CmtEmployeeOld.CMT_EMPLOYEE_OLD

    /**
     * The table <code>public.cmt_ftm_location_mapping</code>.
     */
    val CMT_FTM_LOCATION_MAPPING: CmtFtmLocationMapping get() = CmtFtmLocationMapping.CMT_FTM_LOCATION_MAPPING

    /**
     * The table <code>public.cmt_job_title</code>.
     */
    val CMT_JOB_TITLE: CmtJobTitle get() = CmtJobTitle.CMT_JOB_TITLE

    /**
     * The table <code>public.cmt_location</code>.
     */
    val CMT_LOCATION: CmtLocation get() = CmtLocation.CMT_LOCATION

    /**
     * The table <code>public.cmt_location_old</code>.
     */
    val CMT_LOCATION_OLD: CmtLocationOld get() = CmtLocationOld.CMT_LOCATION_OLD

    /**
     * The table <code>public.cmt_organization_heirarchy</code>.
     */
    val CMT_ORGANIZATION_HEIRARCHY: CmtOrganizationHeirarchy get() = CmtOrganizationHeirarchy.CMT_ORGANIZATION_HEIRARCHY

    /**
     * The table <code>public.cmt_patient_code</code>.
     */
    val CMT_PATIENT_CODE: CmtPatientCode get() = CmtPatientCode.CMT_PATIENT_CODE

    /**
     * The table <code>public.cmt_product</code>.
     */
    val CMT_PRODUCT: CmtProduct get() = CmtProduct.CMT_PRODUCT

    /**
     * The table <code>public.cmt_retailer</code>.
     */
    val CMT_RETAILER: CmtRetailer get() = CmtRetailer.CMT_RETAILER

    /**
     * The table <code>public.cmt_stockist</code>.
     */
    val CMT_STOCKIST: CmtStockist get() = CmtStockist.CMT_STOCKIST

    /**
     * The table <code>public.databasechangelog</code>.
     */
    val DATABASECHANGELOG: Databasechangelog get() = Databasechangelog.DATABASECHANGELOG

    /**
     * The table <code>public.databasechangeloglock</code>.
     */
    val DATABASECHANGELOGLOCK: Databasechangeloglock get() = Databasechangeloglock.DATABASECHANGELOGLOCK

    /**
     * The table <code>public.dsh_activity_attendee</code>.
     */
    val DSH_ACTIVITY_ATTENDEE: DshActivityAttendee get() = DshActivityAttendee.DSH_ACTIVITY_ATTENDEE

    /**
     * The table <code>public.dsh_activity_details</code>.
     */
    val DSH_ACTIVITY_DETAILS: DshActivityDetails get() = DshActivityDetails.DSH_ACTIVITY_DETAILS

    /**
     * The table <code>public.dsh_availability_product</code>.
     */
    val DSH_AVAILABILITY_PRODUCT: DshAvailabilityProduct get() = DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT

    /**
     * The table <code>public.dsh_consolidated_doctor_visit_frequency</code>.
     */
    val DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY: DshConsolidatedDoctorVisitFrequency get() = DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY

    /**
     * The table
     * <code>public.dsh_consolidated_location_brand_primary_daily_sales</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_BRAND_PRIMARY_DAILY_SALES: DshConsolidatedLocationBrandPrimaryDailySales get() = DshConsolidatedLocationBrandPrimaryDailySales.DSH_CONSOLIDATED_LOCATION_BRAND_PRIMARY_DAILY_SALES

    /**
     * The table
     * <code>public.dsh_consolidated_location_brand_primary_sales</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_BRAND_PRIMARY_SALES: DshConsolidatedLocationBrandPrimarySales get() = DshConsolidatedLocationBrandPrimarySales.DSH_CONSOLIDATED_LOCATION_BRAND_PRIMARY_SALES

    /**
     * The table
     * <code>public.dsh_consolidated_location_brand_secondary_sales</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_BRAND_SECONDARY_SALES: DshConsolidatedLocationBrandSecondarySales get() = DshConsolidatedLocationBrandSecondarySales.DSH_CONSOLIDATED_LOCATION_BRAND_SECONDARY_SALES

    /**
     * The table <code>public.dsh_consolidated_location_coverage</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_COVERAGE: DshConsolidatedLocationCoverage get() = DshConsolidatedLocationCoverage.DSH_CONSOLIDATED_LOCATION_COVERAGE

    /**
     * The table <code>public.dsh_consolidated_location_frequency</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_FREQUENCY: DshConsolidatedLocationFrequency get() = DshConsolidatedLocationFrequency.DSH_CONSOLIDATED_LOCATION_FREQUENCY

    /**
     * The table
     * <code>public.dsh_consolidated_location_primary_daily_sales</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_PRIMARY_DAILY_SALES: DshConsolidatedLocationPrimaryDailySales get() = DshConsolidatedLocationPrimaryDailySales.DSH_CONSOLIDATED_LOCATION_PRIMARY_DAILY_SALES

    /**
     * The table <code>public.dsh_consolidated_location_primary_sales</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_PRIMARY_SALES: DshConsolidatedLocationPrimarySales get() = DshConsolidatedLocationPrimarySales.DSH_CONSOLIDATED_LOCATION_PRIMARY_SALES

    /**
     * The table <code>public.dsh_consolidated_location_secondary_sales</code>.
     */
    val DSH_CONSOLIDATED_LOCATION_SECONDARY_SALES: DshConsolidatedLocationSecondarySales get() = DshConsolidatedLocationSecondarySales.DSH_CONSOLIDATED_LOCATION_SECONDARY_SALES

    /**
     * The table
     * <code>public.dsh_consolidated_retailer_product_availability</code>.
     */
    val DSH_CONSOLIDATED_RETAILER_PRODUCT_AVAILABILITY: DshConsolidatedRetailerProductAvailability get() = DshConsolidatedRetailerProductAvailability.DSH_CONSOLIDATED_RETAILER_PRODUCT_AVAILABILITY

    /**
     * The table <code>public.dsh_consolidated_visits</code>.
     */
    val DSH_CONSOLIDATED_VISITS: DshConsolidatedVisits get() = DshConsolidatedVisits.DSH_CONSOLIDATED_VISITS

    /**
     * The table <code>public.dsh_datewise_sales</code>.
     */
    val DSH_DATEWISE_SALES: DshDatewiseSales get() = DshDatewiseSales.DSH_DATEWISE_SALES

    /**
     * The table <code>public.dsh_invoice_details</code>.
     */
    val DSH_INVOICE_DETAILS: DshInvoiceDetails get() = DshInvoiceDetails.DSH_INVOICE_DETAILS

    /**
     * The table
     * <code>public.dsh_locationwise_consolidated_product_availability</code>.
     */
    val DSH_LOCATIONWISE_CONSOLIDATED_PRODUCT_AVAILABILITY: DshLocationwiseConsolidatedProductAvailability get() = DshLocationwiseConsolidatedProductAvailability.DSH_LOCATIONWISE_CONSOLIDATED_PRODUCT_AVAILABILITY

    /**
     * The table
     * <code>public.dsh_locationwise_consolidated_retailer_product_availability</code>.
     */
    val DSH_LOCATIONWISE_CONSOLIDATED_RETAILER_PRODUCT_AVAILABILITY: DshLocationwiseConsolidatedRetailerProductAvailability get() = DshLocationwiseConsolidatedRetailerProductAvailability.DSH_LOCATIONWISE_CONSOLIDATED_RETAILER_PRODUCT_AVAILABILITY

    /**
     * The table
     * <code>public.dsh_monthly_consolidated_locationwise_availability</code>.
     */
    val DSH_MONTHLY_CONSOLIDATED_LOCATIONWISE_AVAILABILITY: DshMonthlyConsolidatedLocationwiseAvailability get() = DshMonthlyConsolidatedLocationwiseAvailability.DSH_MONTHLY_CONSOLIDATED_LOCATIONWISE_AVAILABILITY

    /**
     * The table <code>public.dsh_product_availability</code>.
     */
    val DSH_PRODUCT_AVAILABILITY: DshProductAvailability get() = DshProductAvailability.DSH_PRODUCT_AVAILABILITY

    /**
     * The table <code>public.dsh_rcpa</code>.
     */
    val DSH_RCPA: DshRcpa get() = DshRcpa.DSH_RCPA

    /**
     * The table <code>public.dsh_retailer_product_availability</code>.
     */
    val DSH_RETAILER_PRODUCT_AVAILABILITY: DshRetailerProductAvailability get() = DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY

    /**
     * The table <code>public.dsh_sales_location_mapping</code>.
     */
    val DSH_SALES_LOCATION_MAPPING: DshSalesLocationMapping get() = DshSalesLocationMapping.DSH_SALES_LOCATION_MAPPING

    /**
     * The table <code>public.dsh_sales_subcustomer_mapping</code>.
     */
    val DSH_SALES_SUBCUSTOMER_MAPPING: DshSalesSubcustomerMapping get() = DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING

    /**
     * The table <code>public.dsh_secondary_sales_details</code>.
     */
    val DSH_SECONDARY_SALES_DETAILS: DshSecondarySalesDetails get() = DshSecondarySalesDetails.DSH_SECONDARY_SALES_DETAILS

    /**
     * The table <code>public.dsh_secondary_sales_master</code>.
     */
    val DSH_SECONDARY_SALES_MASTER: DshSecondarySalesMaster get() = DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER

    /**
     * The table <code>public.dsh_stockist_location</code>.
     */
    val DSH_STOCKIST_LOCATION: DshStockistLocation get() = DshStockistLocation.DSH_STOCKIST_LOCATION

    /**
     * The table <code>public.dsh_visit_frequency</code>.
     */
    val DSH_VISIT_FREQUENCY: DshVisitFrequency get() = DshVisitFrequency.DSH_VISIT_FREQUENCY

    /**
     * The table <code>public.event_10073776</code>.
     */
    val EVENT_10073776: Event_10073776 get() = Event_10073776.EVENT_10073776

    /**
     * The table <code>public.fmk_app_config</code>.
     */
    val FMK_APP_CONFIG: FmkAppConfig get() = FmkAppConfig.FMK_APP_CONFIG

    /**
     * The table <code>public.fmk_counter</code>.
     */
    val FMK_COUNTER: FmkCounter get() = FmkCounter.FMK_COUNTER

    /**
     * The table <code>public.fmk_security_privilege</code>.
     */
    val FMK_SECURITY_PRIVILEGE: FmkSecurityPrivilege get() = FmkSecurityPrivilege.FMK_SECURITY_PRIVILEGE

    /**
     * The table <code>public.fmk_security_role</code>.
     */
    val FMK_SECURITY_ROLE: FmkSecurityRole get() = FmkSecurityRole.FMK_SECURITY_ROLE

    /**
     * The table <code>public.fmk_security_user</code>.
     */
    val FMK_SECURITY_USER: FmkSecurityUser get() = FmkSecurityUser.FMK_SECURITY_USER

    /**
     * The table <code>public.fmk_system_lov</code>.
     */
    val FMK_SYSTEM_LOV: FmkSystemLov get() = FmkSystemLov.FMK_SYSTEM_LOV

    /**
     * The table <code>public.fmk_user_lov</code>.
     */
    val FMK_USER_LOV: FmkUserLov get() = FmkUserLov.FMK_USER_LOV

    /**
     * The table <code>public.formAttributeMeta</code>.
     */
    val FORMATTRIBUTEMETA: Formattributemeta get() = Formattributemeta.FORMATTRIBUTEMETA

    /**
     * The table <code>public.formMeta</code>.
     */
    val FORMMETA: Formmeta get() = Formmeta.FORMMETA

    /**
     * The table <code>public.labelMeta</code>.
     */
    val LABELMETA: Labelmeta get() = Labelmeta.LABELMETA

    /**
     * The table <code>public.menuActions</code>.
     */
    val MENUACTIONS: Menuactions get() = Menuactions.MENUACTIONS

    /**
     * The table <code>public.pgp_armor_headers</code>.
     */
    val PGP_ARMOR_HEADERS: PgpArmorHeaders get() = PgpArmorHeaders.PGP_ARMOR_HEADERS

    /**
     * Call <code>public.pgp_armor_headers</code>.
     */
    fun PGP_ARMOR_HEADERS(
          configuration: Configuration
        , __1: String?
    ): Result<PgpArmorHeadersRecord> = configuration.dsl().selectFrom(com.squer.prorpel.jooq.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
          __1
    )).fetch()

    /**
     * Get <code>public.pgp_armor_headers</code> as a table.
     */
    fun PGP_ARMOR_HEADERS(
          __1: String?
    ): PgpArmorHeaders = com.squer.prorpel.jooq.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
        __1
    )

    /**
     * Get <code>public.pgp_armor_headers</code> as a table.
     */
    fun PGP_ARMOR_HEADERS(
          __1: Field<String?>
    ): PgpArmorHeaders = com.squer.prorpel.jooq.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
        __1
    )

    /**
     * The table <code>public.rpt_monthly_consolidated_activity</code>.
     */
    val RPT_MONTHLY_CONSOLIDATED_ACTIVITY: RptMonthlyConsolidatedActivity get() = RptMonthlyConsolidatedActivity.RPT_MONTHLY_CONSOLIDATED_ACTIVITY

    /**
     * The table <code>public.rpt_sales_target_data</code>.
     */
    val RPT_SALES_TARGET_DATA: RptSalesTargetData get() = RptSalesTargetData.RPT_SALES_TARGET_DATA

    /**
     * The table <code>public.sch_job_definition</code>.
     */
    val SCH_JOB_DEFINITION: SchJobDefinition get() = SchJobDefinition.SCH_JOB_DEFINITION

    /**
     * The table <code>public.sch_schedule_definition</code>.
     */
    val SCH_SCHEDULE_DEFINITION: SchScheduleDefinition get() = SchScheduleDefinition.SCH_SCHEDULE_DEFINITION

    /**
     * The table <code>public.searchColumnMeta</code>.
     */
    val SEARCHCOLUMNMETA: Searchcolumnmeta get() = Searchcolumnmeta.SEARCHCOLUMNMETA

    /**
     * The table <code>public.searchConditionMeta</code>.
     */
    val SEARCHCONDITIONMETA: Searchconditionmeta get() = Searchconditionmeta.SEARCHCONDITIONMETA

    /**
     * The table <code>public.searchMeta</code>.
     */
    val SEARCHMETA: Searchmeta get() = Searchmeta.SEARCHMETA

    /**
     * The table <code>public.securityPrivilege</code>.
     */
    val SECURITYPRIVILEGE: Securityprivilege get() = Securityprivilege.SECURITYPRIVILEGE

    /**
     * The table <code>public.securityRole</code>.
     */
    val SECURITYROLE: Securityrole get() = Securityrole.SECURITYROLE

    /**
     * The table <code>public.securityRolePrivilege</code>.
     */
    val SECURITYROLEPRIVILEGE: Securityroleprivilege get() = Securityroleprivilege.SECURITYROLEPRIVILEGE

    /**
     * The table <code>public.sls_gm_target</code>.
     */
    val SLS_GM_TARGET: SlsGmTarget get() = SlsGmTarget.SLS_GM_TARGET

    /**
     * The table <code>public.sls_kam_mapping</code>.
     */
    val SLS_KAM_MAPPING: SlsKamMapping get() = SlsKamMapping.SLS_KAM_MAPPING

    /**
     * The table <code>public.sls_product_mapping</code>.
     */
    val SLS_PRODUCT_MAPPING: SlsProductMapping get() = SlsProductMapping.SLS_PRODUCT_MAPPING

    /**
     * The table <code>public.sls_product_mapping_old</code>.
     */
    val SLS_PRODUCT_MAPPING_OLD: SlsProductMappingOld get() = SlsProductMappingOld.SLS_PRODUCT_MAPPING_OLD

    /**
     * The table <code>public.sls_secondary_sales_details</code>.
     */
    val SLS_SECONDARY_SALES_DETAILS: SlsSecondarySalesDetails get() = SlsSecondarySalesDetails.SLS_SECONDARY_SALES_DETAILS

    /**
     * The table <code>public.sls_secondary_sales_master</code>.
     */
    val SLS_SECONDARY_SALES_MASTER: SlsSecondarySalesMaster get() = SlsSecondarySalesMaster.SLS_SECONDARY_SALES_MASTER

    /**
     * The table <code>public.sry_additional_data</code>.
     */
    val SRY_ADDITIONAL_DATA: SryAdditionalData get() = SryAdditionalData.SRY_ADDITIONAL_DATA

    /**
     * The table <code>public.sry_answer_master</code>.
     */
    val SRY_ANSWER_MASTER: SryAnswerMaster get() = SryAnswerMaster.SRY_ANSWER_MASTER

    /**
     * The table <code>public.sry_category_master</code>.
     */
    val SRY_CATEGORY_MASTER: SryCategoryMaster get() = SryCategoryMaster.SRY_CATEGORY_MASTER

    /**
     * The table <code>public.sry_criteria_master</code>.
     */
    val SRY_CRITERIA_MASTER: SryCriteriaMaster get() = SryCriteriaMaster.SRY_CRITERIA_MASTER

    /**
     * The table <code>public.sry_question_master</code>.
     */
    val SRY_QUESTION_MASTER: SryQuestionMaster get() = SryQuestionMaster.SRY_QUESTION_MASTER

    /**
     * The table <code>public.sry_response_details</code>.
     */
    val SRY_RESPONSE_DETAILS: SryResponseDetails get() = SryResponseDetails.SRY_RESPONSE_DETAILS

    /**
     * The table <code>public.sry_response_master</code>.
     */
    val SRY_RESPONSE_MASTER: SryResponseMaster get() = SryResponseMaster.SRY_RESPONSE_MASTER

    /**
     * The table <code>public.sry_survey_master</code>.
     */
    val SRY_SURVEY_MASTER: SrySurveyMaster get() = SrySurveyMaster.SRY_SURVEY_MASTER

    /**
     * The table <code>public.temp_ecr</code>.
     */
    val TEMP_ECR: TempEcr get() = TempEcr.TEMP_ECR

    /**
     * The table <code>public.tempterritoryps</code>.
     */
    val TEMPTERRITORYPS: Tempterritoryps get() = Tempterritoryps.TEMPTERRITORYPS

    /**
     * The table <code>public.test</code>.
     */
    val TEST: Test get() = Test.TEST

    /**
     * The table <code>public.tmp_all_location_brand_daily_sales</code>.
     */
    val TMP_ALL_LOCATION_BRAND_DAILY_SALES: TmpAllLocationBrandDailySales get() = TmpAllLocationBrandDailySales.TMP_ALL_LOCATION_BRAND_DAILY_SALES

    /**
     * The table <code>public.tmp_all_location_brand_pending</code>.
     */
    val TMP_ALL_LOCATION_BRAND_PENDING: TmpAllLocationBrandPending get() = TmpAllLocationBrandPending.TMP_ALL_LOCATION_BRAND_PENDING

    /**
     * The table <code>public.tmp_all_location_brand_sales</code>.
     */
    val TMP_ALL_LOCATION_BRAND_SALES: TmpAllLocationBrandSales get() = TmpAllLocationBrandSales.TMP_ALL_LOCATION_BRAND_SALES

    /**
     * The table <code>public.tmp_brand_sale</code>.
     */
    val TMP_BRAND_SALE: TmpBrandSale get() = TmpBrandSale.TMP_BRAND_SALE

    /**
     * The table <code>public.tmp_consolidated_coverage</code>.
     */
    val TMP_CONSOLIDATED_COVERAGE: TmpConsolidatedCoverage get() = TmpConsolidatedCoverage.TMP_CONSOLIDATED_COVERAGE

    /**
     * The table <code>public.tmp_consolidated_frequency</code>.
     */
    val TMP_CONSOLIDATED_FREQUENCY: TmpConsolidatedFrequency get() = TmpConsolidatedFrequency.TMP_CONSOLIDATED_FREQUENCY

    /**
     * The table <code>public.tmp_consolidated_visits</code>.
     */
    val TMP_CONSOLIDATED_VISITS: TmpConsolidatedVisits get() = TmpConsolidatedVisits.TMP_CONSOLIDATED_VISITS

    /**
     * The table <code>public.tmp_division_sales</code>.
     */
    val TMP_DIVISION_SALES: TmpDivisionSales get() = TmpDivisionSales.TMP_DIVISION_SALES

    /**
     * The table <code>public.tmp_effort_upload</code>.
     */
    val TMP_EFFORT_UPLOAD: TmpEffortUpload get() = TmpEffortUpload.TMP_EFFORT_UPLOAD

    /**
     * The table <code>public.tmp_employee</code>.
     */
    val TMP_EMPLOYEE: TmpEmployee get() = TmpEmployee.TMP_EMPLOYEE

    /**
     * The table <code>public.tmp_employee_upload</code>.
     */
    val TMP_EMPLOYEE_UPLOAD: TmpEmployeeUpload get() = TmpEmployeeUpload.TMP_EMPLOYEE_UPLOAD

    /**
     * The table <code>public.tmp_employee_upload_errors</code>.
     */
    val TMP_EMPLOYEE_UPLOAD_ERRORS: TmpEmployeeUploadErrors get() = TmpEmployeeUploadErrors.TMP_EMPLOYEE_UPLOAD_ERRORS

    /**
     * The table <code>public.tmp_kam_mapping_upload</code>.
     */
    val TMP_KAM_MAPPING_UPLOAD: TmpKamMappingUpload get() = TmpKamMappingUpload.TMP_KAM_MAPPING_UPLOAD

    /**
     * The table <code>public.tmp_location</code>.
     */
    val TMP_LOCATION: TmpLocation get() = TmpLocation.TMP_LOCATION

    /**
     * The table <code>public.tmp_location_brand_daily_sales</code>.
     */
    val TMP_LOCATION_BRAND_DAILY_SALES: TmpLocationBrandDailySales get() = TmpLocationBrandDailySales.TMP_LOCATION_BRAND_DAILY_SALES

    /**
     * The table <code>public.tmp_location_brand_pending</code>.
     */
    val TMP_LOCATION_BRAND_PENDING: TmpLocationBrandPending get() = TmpLocationBrandPending.TMP_LOCATION_BRAND_PENDING

    /**
     * The table <code>public.tmp_location_brand_sales</code>.
     */
    val TMP_LOCATION_BRAND_SALES: TmpLocationBrandSales get() = TmpLocationBrandSales.TMP_LOCATION_BRAND_SALES

    /**
     * The table <code>public.tmp_location_heirarchy</code>.
     */
    val TMP_LOCATION_HEIRARCHY: TmpLocationHeirarchy get() = TmpLocationHeirarchy.TMP_LOCATION_HEIRARCHY

    /**
     * The table <code>public.tmp_location_sales</code>.
     */
    val TMP_LOCATION_SALES: TmpLocationSales get() = TmpLocationSales.TMP_LOCATION_SALES

    /**
     * The table <code>public.tmp_primary_sales_upload</code>.
     */
    val TMP_PRIMARY_SALES_UPLOAD: TmpPrimarySalesUpload get() = TmpPrimarySalesUpload.TMP_PRIMARY_SALES_UPLOAD

    /**
     * The table <code>public.tmp_product_mapping_upload</code>.
     */
    val TMP_PRODUCT_MAPPING_UPLOAD: TmpProductMappingUpload get() = TmpProductMappingUpload.TMP_PRODUCT_MAPPING_UPLOAD

    /**
     * The table <code>public.tmp_product_mapping_upload_old</code>.
     */
    val TMP_PRODUCT_MAPPING_UPLOAD_OLD: TmpProductMappingUploadOld get() = TmpProductMappingUploadOld.TMP_PRODUCT_MAPPING_UPLOAD_OLD

    /**
     * The table <code>public.tmp_sales_invoice_upload</code>.
     */
    val TMP_SALES_INVOICE_UPLOAD: TmpSalesInvoiceUpload get() = TmpSalesInvoiceUpload.TMP_SALES_INVOICE_UPLOAD

    /**
     * The table <code>public.tmp_sales_pending_upload</code>.
     */
    val TMP_SALES_PENDING_UPLOAD: TmpSalesPendingUpload get() = TmpSalesPendingUpload.TMP_SALES_PENDING_UPLOAD

    /**
     * The table <code>public.tmp_target_date_upload</code>.
     */
    val TMP_TARGET_DATE_UPLOAD: TmpTargetDateUpload get() = TmpTargetDateUpload.TMP_TARGET_DATE_UPLOAD

    /**
     * The table <code>public.tmp_target_upload</code>.
     */
    val TMP_TARGET_UPLOAD: TmpTargetUpload get() = TmpTargetUpload.TMP_TARGET_UPLOAD

    /**
     * The table <code>public.tmp_visits_upload</code>.
     */
    val TMP_VISITS_UPLOAD: TmpVisitsUpload get() = TmpVisitsUpload.TMP_VISITS_UPLOAD

    /**
     * The table <code>public.tmp_visits_upload_errors</code>.
     */
    val TMP_VISITS_UPLOAD_ERRORS: TmpVisitsUploadErrors get() = TmpVisitsUploadErrors.TMP_VISITS_UPLOAD_ERRORS

    /**
     * The table <code>public.upt_upload_stats</code>.
     */
    val UPT_UPLOAD_STATS: UptUploadStats get() = UptUploadStats.UPT_UPLOAD_STATS

    /**
     * The table <code>public.userSecurityRole</code>.
     */
    val USERSECURITYROLE: Usersecurityrole get() = Usersecurityrole.USERSECURITYROLE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getSequences(): List<Sequence<*>> = listOf(
        BATCH_JOB_EXECUTION_SEQ,
        BATCH_JOB_SEQ,
        BATCH_STEP_EXECUTION_SEQ
    )

    override fun getTables(): List<Table<*>> = listOf(
        Ap.AP,
        Ap1.AP1,
        BatchJobExecution.BATCH_JOB_EXECUTION,
        BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT,
        BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS,
        BatchJobInstance.BATCH_JOB_INSTANCE,
        BatchJobType.BATCH_JOB_TYPE,
        BatchStepExecution.BATCH_STEP_EXECUTION,
        BatchStepExecutionContext.BATCH_STEP_EXECUTION_CONTEXT,
        CmeBankDetail.CME_BANK_DETAIL,
        CmeBankDetailBkp.CME_BANK_DETAIL_BKP,
        CmeBudjet.CME_BUDJET,
        CmeDigiDocument.CME_DIGI_DOCUMENT,
        CmeDoctorMaster.CME_DOCTOR_MASTER,
        CmeEmailNotification.CME_EMAIL_NOTIFICATION,
        CmeEventApprovalStatus.CME_EVENT_APPROVAL_STATUS,
        CmeEventApprovalStatusBkp.CME_EVENT_APPROVAL_STATUS_BKP,
        CmeEventCreation.CME_EVENT_CREATION,
        CmeEventExpenseConfig.CME_EVENT_EXPENSE_CONFIG,
        CmeEventExpenseConfigBkp.CME_EVENT_EXPENSE_CONFIG_BKP,
        CmeEventReport.CME_EVENT_REPORT,
        CmeEventSchedule.CME_EVENT_SCHEDULE,
        CmeEventSpeaker.CME_EVENT_SPEAKER,
        CmeFmvDetail.CME_FMV_DETAIL,
        CmeFoodBeverage.CME_FOOD_BEVERAGE,
        CmeHcpApprovalStatus.CME_HCP_APPROVAL_STATUS,
        CmeHcpApprovalStatusBkp.CME_HCP_APPROVAL_STATUS_BKP,
        CmeHonoranium.CME_HONORANIUM,
        CmeInviteDetails.CME_INVITE_DETAILS,
        CmeOtherExpenses.CME_OTHER_EXPENSES,
        CmeProducts.CME_PRODUCTS,
        CmeRequiredDocument.CME_REQUIRED_DOCUMENT,
        CmeSpeakerStay.CME_SPEAKER_STAY,
        CmeSpeakerTravel.CME_SPEAKER_TRAVEL,
        CmeStallCost.CME_STALL_COST,
        CmeVendorBankDetail.CME_VENDOR_BANK_DETAIL,
        CmeVendorEventAdvanceRequest.CME_VENDOR_EVENT_ADVANCE_REQUEST,
        CmeVendorEventCreation.CME_VENDOR_EVENT_CREATION,
        CmeVendorEventReport.CME_VENDOR_EVENT_REPORT,
        CmeVendorEventSchedule.CME_VENDOR_EVENT_SCHEDULE,
        CmeVendorMaster.CME_VENDOR_MASTER,
        CmtBrand.CMT_BRAND,
        CmtCampaign.CMT_CAMPAIGN,
        CmtChemist.CMT_CHEMIST,
        CmtDivision.CMT_DIVISION,
        CmtDoctor.CMT_DOCTOR,
        CmtEmployee.CMT_EMPLOYEE,
        CmtEmployeeHistory.CMT_EMPLOYEE_HISTORY,
        CmtEmployeeOld.CMT_EMPLOYEE_OLD,
        CmtFtmLocationMapping.CMT_FTM_LOCATION_MAPPING,
        CmtJobTitle.CMT_JOB_TITLE,
        CmtLocation.CMT_LOCATION,
        CmtLocationOld.CMT_LOCATION_OLD,
        CmtOrganizationHeirarchy.CMT_ORGANIZATION_HEIRARCHY,
        CmtPatientCode.CMT_PATIENT_CODE,
        CmtProduct.CMT_PRODUCT,
        CmtRetailer.CMT_RETAILER,
        CmtStockist.CMT_STOCKIST,
        Databasechangelog.DATABASECHANGELOG,
        Databasechangeloglock.DATABASECHANGELOGLOCK,
        DshActivityAttendee.DSH_ACTIVITY_ATTENDEE,
        DshActivityDetails.DSH_ACTIVITY_DETAILS,
        DshAvailabilityProduct.DSH_AVAILABILITY_PRODUCT,
        DshConsolidatedDoctorVisitFrequency.DSH_CONSOLIDATED_DOCTOR_VISIT_FREQUENCY,
        DshConsolidatedLocationBrandPrimaryDailySales.DSH_CONSOLIDATED_LOCATION_BRAND_PRIMARY_DAILY_SALES,
        DshConsolidatedLocationBrandPrimarySales.DSH_CONSOLIDATED_LOCATION_BRAND_PRIMARY_SALES,
        DshConsolidatedLocationBrandSecondarySales.DSH_CONSOLIDATED_LOCATION_BRAND_SECONDARY_SALES,
        DshConsolidatedLocationCoverage.DSH_CONSOLIDATED_LOCATION_COVERAGE,
        DshConsolidatedLocationFrequency.DSH_CONSOLIDATED_LOCATION_FREQUENCY,
        DshConsolidatedLocationPrimaryDailySales.DSH_CONSOLIDATED_LOCATION_PRIMARY_DAILY_SALES,
        DshConsolidatedLocationPrimarySales.DSH_CONSOLIDATED_LOCATION_PRIMARY_SALES,
        DshConsolidatedLocationSecondarySales.DSH_CONSOLIDATED_LOCATION_SECONDARY_SALES,
        DshConsolidatedRetailerProductAvailability.DSH_CONSOLIDATED_RETAILER_PRODUCT_AVAILABILITY,
        DshConsolidatedVisits.DSH_CONSOLIDATED_VISITS,
        DshDatewiseSales.DSH_DATEWISE_SALES,
        DshInvoiceDetails.DSH_INVOICE_DETAILS,
        DshLocationwiseConsolidatedProductAvailability.DSH_LOCATIONWISE_CONSOLIDATED_PRODUCT_AVAILABILITY,
        DshLocationwiseConsolidatedRetailerProductAvailability.DSH_LOCATIONWISE_CONSOLIDATED_RETAILER_PRODUCT_AVAILABILITY,
        DshMonthlyConsolidatedLocationwiseAvailability.DSH_MONTHLY_CONSOLIDATED_LOCATIONWISE_AVAILABILITY,
        DshProductAvailability.DSH_PRODUCT_AVAILABILITY,
        DshRcpa.DSH_RCPA,
        DshRetailerProductAvailability.DSH_RETAILER_PRODUCT_AVAILABILITY,
        DshSalesLocationMapping.DSH_SALES_LOCATION_MAPPING,
        DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING,
        DshSecondarySalesDetails.DSH_SECONDARY_SALES_DETAILS,
        DshSecondarySalesMaster.DSH_SECONDARY_SALES_MASTER,
        DshStockistLocation.DSH_STOCKIST_LOCATION,
        DshVisitFrequency.DSH_VISIT_FREQUENCY,
        Event_10073776.EVENT_10073776,
        FmkAppConfig.FMK_APP_CONFIG,
        FmkCounter.FMK_COUNTER,
        FmkSecurityPrivilege.FMK_SECURITY_PRIVILEGE,
        FmkSecurityRole.FMK_SECURITY_ROLE,
        FmkSecurityUser.FMK_SECURITY_USER,
        FmkSystemLov.FMK_SYSTEM_LOV,
        FmkUserLov.FMK_USER_LOV,
        Formattributemeta.FORMATTRIBUTEMETA,
        Formmeta.FORMMETA,
        Labelmeta.LABELMETA,
        Menuactions.MENUACTIONS,
        PgpArmorHeaders.PGP_ARMOR_HEADERS,
        RptMonthlyConsolidatedActivity.RPT_MONTHLY_CONSOLIDATED_ACTIVITY,
        RptSalesTargetData.RPT_SALES_TARGET_DATA,
        SchJobDefinition.SCH_JOB_DEFINITION,
        SchScheduleDefinition.SCH_SCHEDULE_DEFINITION,
        Searchcolumnmeta.SEARCHCOLUMNMETA,
        Searchconditionmeta.SEARCHCONDITIONMETA,
        Searchmeta.SEARCHMETA,
        Securityprivilege.SECURITYPRIVILEGE,
        Securityrole.SECURITYROLE,
        Securityroleprivilege.SECURITYROLEPRIVILEGE,
        SlsGmTarget.SLS_GM_TARGET,
        SlsKamMapping.SLS_KAM_MAPPING,
        SlsProductMapping.SLS_PRODUCT_MAPPING,
        SlsProductMappingOld.SLS_PRODUCT_MAPPING_OLD,
        SlsSecondarySalesDetails.SLS_SECONDARY_SALES_DETAILS,
        SlsSecondarySalesMaster.SLS_SECONDARY_SALES_MASTER,
        SryAdditionalData.SRY_ADDITIONAL_DATA,
        SryAnswerMaster.SRY_ANSWER_MASTER,
        SryCategoryMaster.SRY_CATEGORY_MASTER,
        SryCriteriaMaster.SRY_CRITERIA_MASTER,
        SryQuestionMaster.SRY_QUESTION_MASTER,
        SryResponseDetails.SRY_RESPONSE_DETAILS,
        SryResponseMaster.SRY_RESPONSE_MASTER,
        SrySurveyMaster.SRY_SURVEY_MASTER,
        TempEcr.TEMP_ECR,
        Tempterritoryps.TEMPTERRITORYPS,
        Test.TEST,
        TmpAllLocationBrandDailySales.TMP_ALL_LOCATION_BRAND_DAILY_SALES,
        TmpAllLocationBrandPending.TMP_ALL_LOCATION_BRAND_PENDING,
        TmpAllLocationBrandSales.TMP_ALL_LOCATION_BRAND_SALES,
        TmpBrandSale.TMP_BRAND_SALE,
        TmpConsolidatedCoverage.TMP_CONSOLIDATED_COVERAGE,
        TmpConsolidatedFrequency.TMP_CONSOLIDATED_FREQUENCY,
        TmpConsolidatedVisits.TMP_CONSOLIDATED_VISITS,
        TmpDivisionSales.TMP_DIVISION_SALES,
        TmpEffortUpload.TMP_EFFORT_UPLOAD,
        TmpEmployee.TMP_EMPLOYEE,
        TmpEmployeeUpload.TMP_EMPLOYEE_UPLOAD,
        TmpEmployeeUploadErrors.TMP_EMPLOYEE_UPLOAD_ERRORS,
        TmpKamMappingUpload.TMP_KAM_MAPPING_UPLOAD,
        TmpLocation.TMP_LOCATION,
        TmpLocationBrandDailySales.TMP_LOCATION_BRAND_DAILY_SALES,
        TmpLocationBrandPending.TMP_LOCATION_BRAND_PENDING,
        TmpLocationBrandSales.TMP_LOCATION_BRAND_SALES,
        TmpLocationHeirarchy.TMP_LOCATION_HEIRARCHY,
        TmpLocationSales.TMP_LOCATION_SALES,
        TmpPrimarySalesUpload.TMP_PRIMARY_SALES_UPLOAD,
        TmpProductMappingUpload.TMP_PRODUCT_MAPPING_UPLOAD,
        TmpProductMappingUploadOld.TMP_PRODUCT_MAPPING_UPLOAD_OLD,
        TmpSalesInvoiceUpload.TMP_SALES_INVOICE_UPLOAD,
        TmpSalesPendingUpload.TMP_SALES_PENDING_UPLOAD,
        TmpTargetDateUpload.TMP_TARGET_DATE_UPLOAD,
        TmpTargetUpload.TMP_TARGET_UPLOAD,
        TmpVisitsUpload.TMP_VISITS_UPLOAD,
        TmpVisitsUploadErrors.TMP_VISITS_UPLOAD_ERRORS,
        UptUploadStats.UPT_UPLOAD_STATS,
        Usersecurityrole.USERSECURITYROLE
    )
}
