/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshSalesSubcustomerMapping

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshSalesSubcustomerMappingRecord() : TableRecordImpl<DshSalesSubcustomerMappingRecord>(DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING), Record5<String?, String?, String?, String?, String?> {

    open var subcustomerCode: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var subcustomerName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var subcustomerSap: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var sapCode: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var divisionId: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<String?, String?, String?, String?, String?> = super.fieldsRow() as Row5<String?, String?, String?, String?, String?>
    override fun valuesRow(): Row5<String?, String?, String?, String?, String?> = super.valuesRow() as Row5<String?, String?, String?, String?, String?>
    override fun field1(): Field<String?> = DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING.SUBCUSTOMER_CODE
    override fun field2(): Field<String?> = DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING.SUBCUSTOMER_NAME
    override fun field3(): Field<String?> = DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING.SUBCUSTOMER_SAP
    override fun field4(): Field<String?> = DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING.SAP_CODE
    override fun field5(): Field<String?> = DshSalesSubcustomerMapping.DSH_SALES_SUBCUSTOMER_MAPPING.DIVISION_ID
    override fun component1(): String? = subcustomerCode
    override fun component2(): String? = subcustomerName
    override fun component3(): String? = subcustomerSap
    override fun component4(): String? = sapCode
    override fun component5(): String? = divisionId
    override fun value1(): String? = subcustomerCode
    override fun value2(): String? = subcustomerName
    override fun value3(): String? = subcustomerSap
    override fun value4(): String? = sapCode
    override fun value5(): String? = divisionId

    override fun value1(value: String?): DshSalesSubcustomerMappingRecord {
        this.subcustomerCode = value
        return this
    }

    override fun value2(value: String?): DshSalesSubcustomerMappingRecord {
        this.subcustomerName = value
        return this
    }

    override fun value3(value: String?): DshSalesSubcustomerMappingRecord {
        this.subcustomerSap = value
        return this
    }

    override fun value4(value: String?): DshSalesSubcustomerMappingRecord {
        this.sapCode = value
        return this
    }

    override fun value5(value: String?): DshSalesSubcustomerMappingRecord {
        this.divisionId = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?): DshSalesSubcustomerMappingRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised DshSalesSubcustomerMappingRecord
     */
    constructor(subcustomerCode: String? = null, subcustomerName: String? = null, subcustomerSap: String? = null, sapCode: String? = null, divisionId: String? = null): this() {
        this.subcustomerCode = subcustomerCode
        this.subcustomerName = subcustomerName
        this.subcustomerSap = subcustomerSap
        this.sapCode = sapCode
        this.divisionId = divisionId
    }
}
