/*
 * This file is generated by jOOQ.
 */
package com.squer.prorpel.jooq.tables.records


import com.squer.prorpel.jooq.tables.DshSalesLocationMapping

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DshSalesLocationMappingRecord() : TableRecordImpl<DshSalesLocationMappingRecord>(DshSalesLocationMapping.DSH_SALES_LOCATION_MAPPING), Record3<String?, String?, String?> {

    open var key: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var divisionId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var sapCode: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<String?, String?, String?> = super.fieldsRow() as Row3<String?, String?, String?>
    override fun valuesRow(): Row3<String?, String?, String?> = super.valuesRow() as Row3<String?, String?, String?>
    override fun field1(): Field<String?> = DshSalesLocationMapping.DSH_SALES_LOCATION_MAPPING.KEY
    override fun field2(): Field<String?> = DshSalesLocationMapping.DSH_SALES_LOCATION_MAPPING.DIVISION_ID
    override fun field3(): Field<String?> = DshSalesLocationMapping.DSH_SALES_LOCATION_MAPPING.SAP_CODE
    override fun component1(): String? = key
    override fun component2(): String? = divisionId
    override fun component3(): String? = sapCode
    override fun value1(): String? = key
    override fun value2(): String? = divisionId
    override fun value3(): String? = sapCode

    override fun value1(value: String?): DshSalesLocationMappingRecord {
        this.key = value
        return this
    }

    override fun value2(value: String?): DshSalesLocationMappingRecord {
        this.divisionId = value
        return this
    }

    override fun value3(value: String?): DshSalesLocationMappingRecord {
        this.sapCode = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?): DshSalesLocationMappingRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised DshSalesLocationMappingRecord
     */
    constructor(key: String? = null, divisionId: String? = null, sapCode: String? = null): this() {
        this.key = key
        this.divisionId = divisionId
        this.sapCode = sapCode
    }
}
