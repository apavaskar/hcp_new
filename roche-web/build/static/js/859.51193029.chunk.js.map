{"version":3,"file":"static/js/859.51193029.chunk.js","mappings":"8SAqFMA,EAAU,CACdC,YAAaC,EAAAA,IAGf,GAAeC,EAAAA,EAAAA,KAVE,SAACC,GAGhB,MAAO,CAAEC,UAFQC,EAAAA,EAAAA,IAAeF,GAEbG,UADFC,EAAAA,EAAAA,IAAeJ,GAElC,GAMiCJ,EAAjC,EAhFc,SAAH,GAA6C,IAAvCC,EAAW,EAAXA,YAAuBM,GAAF,EAARF,SAAkB,EAARE,UACtC,EAAeE,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GACHC,EAAUC,EAAAA,EAAAA,MAoBlB,OAAOL,GACL,SAAC,KAAQ,CAACM,MAAI,EAACC,GAAG,qBAElB,SAAC,IAAM,CAACC,UAAW,aAAa,UAC9B,SAAC,IAAG,WACF,SAAC,IAAG,CAACC,KAAM,EAAGC,OAAQ,EAAE,UACtB,UAAC,KAAI,kBAzBE,CACbC,SAAU,CAAEF,KAAM,GAClBG,WAAY,CAAEH,KAAM,MAwBF,IACVN,KAAMA,EACNU,KAAK,aACLC,SAtBO,WACfC,QAAQC,IAAI,YAAab,EAC3B,EAqBUK,UAAW,aACXS,aAAa,MAAK,WAElB,SAACb,EAAK,CAACc,MAAO,EAAE,SAAC,WACjB,SAAC,SAAS,CACRC,MAAO,WACPN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yBAA0B,UAE7D,SAAC,IAAK,CAACC,YAAY,gBAErB,SAAC,SAAS,CACRJ,MAAO,WACPN,KAAK,WACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yBAA0B,UAE7D,SAAC,aAAc,CAACC,YAAY,gBAE9B,SAAC,UAAS,kBA5CD,CACjBX,WAAY,CAAEF,OAAQ,GAAID,KAAM,KA2CC,cACvB,SAAC,IAAM,CAACe,KAAK,UAAUC,QAtCV,WACvBtB,EACGuB,iBACAC,MAAK,SAACC,GACLlC,EAAY,CAAEmC,KAAMD,GACtB,IACCE,OAAM,SAACC,GAAe,GAC3B,EA+B6D,SAAC,uBAShE,G","sources":["components/auth/Login.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { loginStartAction } from '../../redux/actions/auth/authActions'\nimport { selectAuthInfo, selectLoggedIn } from '../../redux/selectors/authSelectors'\nimport { Button, Col, Form, Input, Layout, Row, Typography } from 'antd'\nimport './Login.less'\nimport { Navigate } from 'react-router-dom'\n\nconst Login = ({ handleLogin, authInfo, loggedIn }) => {\n  const [form] = Form.useForm()\n  const { Title } = Typography\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 19 },\n  }\n  const tailLayout = {\n    wrapperCol: { offset: 18, span: 1 },\n  }\n  const onFinish = () => {\n    console.log('On finish', form)\n  }\n\n  const handleFormSubmit = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        handleLogin({ data: values })\n      })\n      .catch((errorInfo) => {})\n  }\n  return loggedIn ? (\n    <Navigate push to=\"/home/dashboard\" />\n  ) : (\n    <Layout className={'login-page'}>\n      <Row>\n        <Col span={6} offset={2}>\n          <Form\n            {...layout}\n            form={form}\n            name=\"login-form\"\n            onFinish={onFinish}\n            className={'login-form'}\n            autoComplete=\"off\"\n          >\n            <Title level={3}>Login</Title>\n            <Form.Item\n              label={'Username'}\n              name=\"username\"\n              rules={[{ required: true, message: 'Username is required' }]}\n            >\n              <Input placeholder=\"Username\" />\n            </Form.Item>\n            <Form.Item\n              label={'Password'}\n              name=\"password\"\n              rules={[{ required: true, message: 'Password is required' }]}\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" onClick={handleFormSubmit}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nLogin.propTypes = {\n  authInfo: PropTypes.any,\n  handleLogin: PropTypes.func,\n  navigation: PropTypes.any,\n  loggedIn: PropTypes.bool,\n}\n\nconst mapState = (state) => {\n  const authInfo = selectAuthInfo(state)\n  const loggedIn = selectLoggedIn(state)\n  return { authInfo, loggedIn }\n}\n\nconst actions = {\n  handleLogin: loginStartAction,\n}\n\nexport default connect(mapState, actions)(Login)\n"],"names":["actions","handleLogin","loginStartAction","connect","state","authInfo","selectAuthInfo","loggedIn","selectLoggedIn","Form","form","Title","Typography","push","to","className","span","offset","labelCol","wrapperCol","name","onFinish","console","log","autoComplete","level","label","rules","required","message","placeholder","type","onClick","validateFields","then","values","data","catch","errorInfo"],"sourceRoot":""}